<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="https://api.efxnow.com/webservices2.3" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" targetNamespace="https://api.efxnow.com/webservices2.3" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Core Web services offered by GAIN Capital. These services are offered to customers of GAIN Capital for the purposes of carrying out business with GAIN Capital. All data supplied remains copyright GAIN Capital inc and may not be reproduced without the prior written permission of GAIN Capital inc. USAGE: The web functions have been developed with Microsoft .NET WebServices. Best results can be found when used with Visual Studio.NET. For further information, see http://api.efxnow.com/Docs</wsdl:documentation>
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="https://api.efxnow.com/webservices2.3">
      <s:element name="GetCommentDataSet">
        <s:complexType />
      </s:element>
      <s:element name="GetCommentDataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetCommentDataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetDealBlotterDataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetDealBlotterDataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetDealBlotterDataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetDealBlotterDataSetWithFilter">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetDealBlotterDataSetWithFilterResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetDealBlotterDataSetWithFilterResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetDelayedRatesDataSet">
        <s:complexType />
      </s:element>
      <s:element name="GetDelayedRatesDataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetDelayedRatesDataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetMarginBlotterDataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetMarginBlotterDataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetMarginBlotterDataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetCustomMarginBlotter">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Key" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetCustomMarginBlotterResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetCustomMarginBlotterResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetCustomPositionBlotter">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Key" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetCustomPositionBlotterResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetCustomPositionBlotterResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetNewsDataSet">
        <s:complexType />
      </s:element>
      <s:element name="GetNewsDataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetNewsDataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SaveUserProductSubscriptionSettings">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserId" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Brand" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="ProductList" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SaveUserProductSubscriptionSettingsResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="SaveUserProductSubscriptionSettingsResult" type="tns:objProductSubscriptionResponse" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="objProductSubscriptionResponse">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="Message" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="ErrorNo" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="Success" type="s:boolean" />
        </s:sequence>
      </s:complexType>
      <s:element name="ServiceAuthentication">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Password" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Brand" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="ServiceID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ServiceAuthenticationResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ServiceAuthenticationResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetProductSubscriptionRelationshipBlotter">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserId" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Brand" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetProductSubscriptionRelationshipBlotterResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetProductSubscriptionRelationshipBlotterResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetProductSubscriptionRelationshipBlotterDataset">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserId" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Brand" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetProductSubscriptionRelationshipBlotterDatasetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetProductSubscriptionRelationshipBlotterDatasetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetOrderBlotterDataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetOrderBlotterDataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetOrderBlotterDataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetPositionBlotterDataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetPositionBlotterDataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetPositionBlotterDataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetRatesBlotter">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Key" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetRatesBlotterResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetRatesBlotterResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetRates">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Key" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetRatesResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetRatesResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetRatesDataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Key" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetRatesDataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetRatesDataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetHistoricRatesDataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Key" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Quote" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="StartDateTime" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="EndDateTime" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetHistoricRatesDataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetHistoricRatesDataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSymbolBlotterDataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSymbolBlotterDataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetSymbolBlotterDataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetTicker">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserId" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Brand" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Accounttype" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Lang" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetTickerResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetTickerResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetEconomicCalendar">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserId" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Brand" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Lang" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetEconomicCalendarResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetEconomicCalendarResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetAccount">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Brand" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetAccountResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetAccountResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetAccountServices">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Brand" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetAccountServicesResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetAccountServicesResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetDealBlotter">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Key" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetDealBlotterResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetDealBlotterResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetDealBlotterWithFilter">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Key" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetDealBlotterWithFilterResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetDealBlotterWithFilterResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetMarginBlotter">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Key" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetMarginBlotterResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetMarginBlotterResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetOrderBlotter">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Key" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetOrderBlotterResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetOrderBlotterResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetPositionBlotter">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Key" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetPositionBlotterResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetPositionBlotterResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSymbolBlotter">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Key" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSymbolBlotterResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetSymbolBlotterResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetPairSettings">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserId" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Brand" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetPairSettingsResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetPairSettingsResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="PlaceSingleOrder">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Pair" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Expiry" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="BuySell" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Amount" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Rate" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="OrderBasis" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="PlaceSingleOrderResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="PlaceSingleOrderResult" type="tns:objPlaceOrderResponse" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="objPlaceOrderResponse">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="Success" type="s:boolean" />
          <s:element minOccurs="0" maxOccurs="1" name="ErrorDescription" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="ErrorNumber" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="CustomerOrderReference" type="s:long" />
          <s:element minOccurs="0" maxOccurs="1" name="OrderConfirmation" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="CustomerDealRef" type="s:string" />
        </s:sequence>
      </s:complexType>
      <s:element name="Authenticator" type="tns:Authenticator" />
      <s:complexType name="Authenticator">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="ApplicationName" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="IPAddress" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="MachineName" type="s:string" />
        </s:sequence>
        <s:anyAttribute />
      </s:complexType>
      <s:element name="ModifySingleOrder">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="OrderReference" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Expiry" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="BuySell" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Amount" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Rate" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="OrderBasis" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ModifySingleOrderResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ModifySingleOrderResult" type="tns:objPlaceOrderResponse" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="PlaceOCOOrder">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Pair" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Expiry" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="BuySell" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Amount" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Rate" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="OrderBasis" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="BuySell1" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Amount1" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Rate1" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="OrderBasis1" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="PlaceOCOOrderResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="PlaceOCOOrderResult" type="tns:objPlaceOrderResponse" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ModifyOCOOrder">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="OrderReference" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Expiry" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="BuySell" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Amount" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Rate" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="OrderBasis" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="BuySell1" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Amount1" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Rate1" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="OrderBasis1" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ModifyOCOOrderResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ModifyOCOOrderResult" type="tns:objPlaceOrderResponse" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CancelOrder">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="OrderConfirmation" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CancelOrderResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="CancelOrderResult" type="tns:objPlaceOrderResponse" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="DealRequest">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Pair" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="BuySell" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Amount" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Rate" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="DealRequestResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="DealRequestResult" type="tns:objDealResponse" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="objDealResponse">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="Success" type="s:boolean" />
          <s:element minOccurs="0" maxOccurs="1" name="ErrorDescription" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="ErrorNumber" type="s:int" />
          <s:element minOccurs="0" maxOccurs="1" name="Confirmation" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="ConfirmationNumber" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="Rate" type="s:double" />
        </s:sequence>
      </s:complexType>
      <s:element name="DealRequestByDealId">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Pair" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="BuySell" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Amount" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Rate" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="DealID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="DealRequestByDealIdResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="DealRequestByDealIdResult" type="tns:objDealResponse" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="DealRequestAtBest">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Pair" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="BuySell" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Amount" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="DealRequestAtBestResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="DealRequestAtBestResult" type="tns:objDealResponse" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CancelOrderByOrderID">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="OrderReference" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CancelOrderByOrderIDResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="CancelOrderByOrderIDResult" type="tns:objPlaceOrderResponse" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CancelOrderByReferenceNumber">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="OrderReference" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CancelOrderByReferenceNumberResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="CancelOrderByReferenceNumberResult" type="tns:objPlaceOrderResponse" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="PlaceIfThenOrder">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Pair" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Expiry" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="BuySell" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Amount" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Rate" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="OrderBasis" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="BuySell1" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Amount1" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Rate1" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="OrderBasis1" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="PlaceIfThenOrderResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="PlaceIfThenOrderResult" type="tns:objPlaceOrderResponse" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ModifyIfThenOrder">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="OrderReference" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Expiry" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="BuySell" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Amount" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Rate" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="OrderBasis" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="BuySell1" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Amount1" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Rate1" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="OrderBasis1" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ModifyIfThenOrderResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ModifyIfThenOrderResult" type="tns:objPlaceOrderResponse" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="PlaceIfThenOCOOrder">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Pair" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Expiry" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="BuySell" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Amount" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Rate" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="OrderBasis" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="BuySell1" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Amount1" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Rate1" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="OrderBasis1" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="BuySell2" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Amount2" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Rate2" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="OrderBasis2" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="PlaceIfThenOCOOrderResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="PlaceIfThenOCOOrderResult" type="tns:objPlaceOrderResponse" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ModifyIfThenOCOOrder">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="OrderReference" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Expiry" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="BuySell" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Amount" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Rate" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="OrderBasis" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="BuySell1" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Amount1" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Rate1" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="OrderBasis1" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="BuySell2" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Amount2" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Rate2" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="OrderBasis2" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ModifyIfThenOCOOrderResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ModifyIfThenOCOOrderResult" type="tns:objPlaceOrderResponse" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="PlaceSingleASSPOrder">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Pair" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Rate" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="OrderBasis" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="PlaceSingleASSPOrderResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="PlaceSingleASSPOrderResult" type="tns:objPlaceOrderResponse" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ModifySingleASSPOrder">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="OrderReference" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Rate" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="OrderBasis" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ModifySingleASSPOrderResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ModifySingleASSPOrderResult" type="tns:objPlaceOrderResponse" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="PlaceOCOASSPOrder">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Pair" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LimitRate" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="StopLossRate" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="PlaceOCOASSPOrderResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="PlaceOCOASSPOrderResult" type="tns:objPlaceOrderResponse" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ModifyOCOASSPOrder">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="OrderReference" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LimitRate" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="StopLossRate" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ModifyOCOASSPOrderResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ModifyOCOASSPOrderResult" type="tns:objPlaceOrderResponse" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="Echo">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Message" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="EchoResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="EchoResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetTime">
        <s:complexType />
      </s:element>
      <s:element name="GetTimeResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetTimeResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetRatesServerAuth">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Brand" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetRatesServerAuthResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetRatesServerAuthResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSubAccountAuthenticationKey">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="MasterAccountKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="SubAccountCode" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSubAccountAuthenticationKeyResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetSubAccountAuthenticationKeyResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetComment">
        <s:complexType />
      </s:element>
      <s:element name="GetCommentResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetCommentResult" type="tns:objMarketText" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="objMarketText">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="Success" type="s:boolean" />
          <s:element minOccurs="0" maxOccurs="1" name="ErrorDescription" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Item0" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Item1" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Item2" type="s:string" />
        </s:sequence>
      </s:complexType>
      <s:element name="GetNews">
        <s:complexType />
      </s:element>
      <s:element name="GetNewsResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetNewsResult" type="tns:objMarketText" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetAccountObject">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Brand" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Notes" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetAccountObjectResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetAccountObjectResult" type="tns:objAccount" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="objAccount">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="Success" type="s:boolean" />
          <s:element minOccurs="0" maxOccurs="1" name="ErrorDescription" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="CustCode" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="GUID" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="Features" type="s:int" />
          <s:element minOccurs="0" maxOccurs="1" name="BaseCCY" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="LastOrderSeq" type="s:long" />
          <s:element minOccurs="1" maxOccurs="1" name="LastDealSeq" type="s:long" />
          <s:element minOccurs="1" maxOccurs="1" name="OrderLotSize" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="MaxOrderPips" type="s:double" />
          <s:element minOccurs="1" maxOccurs="1" name="CancelOrderPips" type="s:double" />
          <s:element minOccurs="1" maxOccurs="1" name="TradeLotSize" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="MaxTradeLots" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="TierCount" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="Tier1MinLots" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="Tier1MaxLots" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="Tier1PipDifference" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="Tier2MinLots" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="Tier2MaxLots" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="Tier2PipDifference" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="Tier3MinLots" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="Tier3MaxLots" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="Tier3PipDifference" type="s:int" />
        </s:sequence>
      </s:complexType>
      <s:element name="GetIGAuthenticationKey">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Brand" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Language" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetIGAuthenticationKeyResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetIGAuthenticationKeyResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSubAccountCode">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="MasterAccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="SubAccountNumber" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSubAccountCodeResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetSubAccountCodeResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSubAccountNumber">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="MasterAccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="SubAccountCode" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSubAccountNumberResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetSubAccountNumberResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetlTIDByBankConf">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="BankConfirmation" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetlTIDByBankConfResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetlTIDByBankConfResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="VerifyCredentials">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PWD" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Brand" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="VerifyCredentialsResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="VerifyCredentialsResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="DataSet" nillable="true">
        <s:complexType>
          <s:sequence>
            <s:element ref="s:schema" />
            <s:any />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="string" nillable="true" type="s:string" />
      <s:element name="objProductSubscriptionResponse" nillable="true" type="tns:objProductSubscriptionResponse" />
      <s:element name="boolean" type="s:boolean" />
      <s:element name="objPlaceOrderResponse" nillable="true" type="tns:objPlaceOrderResponse" />
      <s:element name="objDealResponse" nillable="true" type="tns:objDealResponse" />
      <s:element name="objMarketText" nillable="true" type="tns:objMarketText" />
      <s:element name="objAccount" nillable="true" type="tns:objAccount" />
    </s:schema>
  </wsdl:types>
  <wsdl:message name="GetCommentDataSetSoapIn">
    <wsdl:part name="parameters" element="tns:GetCommentDataSet" />
  </wsdl:message>
  <wsdl:message name="GetCommentDataSetSoapOut">
    <wsdl:part name="parameters" element="tns:GetCommentDataSetResponse" />
  </wsdl:message>
  <wsdl:message name="GetDealBlotterDataSetSoapIn">
    <wsdl:part name="parameters" element="tns:GetDealBlotterDataSet" />
  </wsdl:message>
  <wsdl:message name="GetDealBlotterDataSetSoapOut">
    <wsdl:part name="parameters" element="tns:GetDealBlotterDataSetResponse" />
  </wsdl:message>
  <wsdl:message name="GetDealBlotterDataSetWithFilterSoapIn">
    <wsdl:part name="parameters" element="tns:GetDealBlotterDataSetWithFilter" />
  </wsdl:message>
  <wsdl:message name="GetDealBlotterDataSetWithFilterSoapOut">
    <wsdl:part name="parameters" element="tns:GetDealBlotterDataSetWithFilterResponse" />
  </wsdl:message>
  <wsdl:message name="GetDelayedRatesDataSetSoapIn">
    <wsdl:part name="parameters" element="tns:GetDelayedRatesDataSet" />
  </wsdl:message>
  <wsdl:message name="GetDelayedRatesDataSetSoapOut">
    <wsdl:part name="parameters" element="tns:GetDelayedRatesDataSetResponse" />
  </wsdl:message>
  <wsdl:message name="GetMarginBlotterDataSetSoapIn">
    <wsdl:part name="parameters" element="tns:GetMarginBlotterDataSet" />
  </wsdl:message>
  <wsdl:message name="GetMarginBlotterDataSetSoapOut">
    <wsdl:part name="parameters" element="tns:GetMarginBlotterDataSetResponse" />
  </wsdl:message>
  <wsdl:message name="GetCustomMarginBlotterSoapIn">
    <wsdl:part name="parameters" element="tns:GetCustomMarginBlotter" />
  </wsdl:message>
  <wsdl:message name="GetCustomMarginBlotterSoapOut">
    <wsdl:part name="parameters" element="tns:GetCustomMarginBlotterResponse" />
  </wsdl:message>
  <wsdl:message name="GetCustomPositionBlotterSoapIn">
    <wsdl:part name="parameters" element="tns:GetCustomPositionBlotter" />
  </wsdl:message>
  <wsdl:message name="GetCustomPositionBlotterSoapOut">
    <wsdl:part name="parameters" element="tns:GetCustomPositionBlotterResponse" />
  </wsdl:message>
  <wsdl:message name="GetNewsDataSetSoapIn">
    <wsdl:part name="parameters" element="tns:GetNewsDataSet" />
  </wsdl:message>
  <wsdl:message name="GetNewsDataSetSoapOut">
    <wsdl:part name="parameters" element="tns:GetNewsDataSetResponse" />
  </wsdl:message>
  <wsdl:message name="SaveUserProductSubscriptionSettingsSoapIn">
    <wsdl:part name="parameters" element="tns:SaveUserProductSubscriptionSettings" />
  </wsdl:message>
  <wsdl:message name="SaveUserProductSubscriptionSettingsSoapOut">
    <wsdl:part name="parameters" element="tns:SaveUserProductSubscriptionSettingsResponse" />
  </wsdl:message>
  <wsdl:message name="ServiceAuthenticationSoapIn">
    <wsdl:part name="parameters" element="tns:ServiceAuthentication" />
  </wsdl:message>
  <wsdl:message name="ServiceAuthenticationSoapOut">
    <wsdl:part name="parameters" element="tns:ServiceAuthenticationResponse" />
  </wsdl:message>
  <wsdl:message name="GetProductSubscriptionRelationshipBlotterSoapIn">
    <wsdl:part name="parameters" element="tns:GetProductSubscriptionRelationshipBlotter" />
  </wsdl:message>
  <wsdl:message name="GetProductSubscriptionRelationshipBlotterSoapOut">
    <wsdl:part name="parameters" element="tns:GetProductSubscriptionRelationshipBlotterResponse" />
  </wsdl:message>
  <wsdl:message name="GetProductSubscriptionRelationshipBlotterDatasetSoapIn">
    <wsdl:part name="parameters" element="tns:GetProductSubscriptionRelationshipBlotterDataset" />
  </wsdl:message>
  <wsdl:message name="GetProductSubscriptionRelationshipBlotterDatasetSoapOut">
    <wsdl:part name="parameters" element="tns:GetProductSubscriptionRelationshipBlotterDatasetResponse" />
  </wsdl:message>
  <wsdl:message name="GetOrderBlotterDataSetSoapIn">
    <wsdl:part name="parameters" element="tns:GetOrderBlotterDataSet" />
  </wsdl:message>
  <wsdl:message name="GetOrderBlotterDataSetSoapOut">
    <wsdl:part name="parameters" element="tns:GetOrderBlotterDataSetResponse" />
  </wsdl:message>
  <wsdl:message name="GetPositionBlotterDataSetSoapIn">
    <wsdl:part name="parameters" element="tns:GetPositionBlotterDataSet" />
  </wsdl:message>
  <wsdl:message name="GetPositionBlotterDataSetSoapOut">
    <wsdl:part name="parameters" element="tns:GetPositionBlotterDataSetResponse" />
  </wsdl:message>
  <wsdl:message name="GetRatesBlotterSoapIn">
    <wsdl:part name="parameters" element="tns:GetRatesBlotter" />
  </wsdl:message>
  <wsdl:message name="GetRatesBlotterSoapOut">
    <wsdl:part name="parameters" element="tns:GetRatesBlotterResponse" />
  </wsdl:message>
  <wsdl:message name="GetRatesSoapIn">
    <wsdl:part name="parameters" element="tns:GetRates" />
  </wsdl:message>
  <wsdl:message name="GetRatesSoapOut">
    <wsdl:part name="parameters" element="tns:GetRatesResponse" />
  </wsdl:message>
  <wsdl:message name="GetRatesDataSetSoapIn">
    <wsdl:part name="parameters" element="tns:GetRatesDataSet" />
  </wsdl:message>
  <wsdl:message name="GetRatesDataSetSoapOut">
    <wsdl:part name="parameters" element="tns:GetRatesDataSetResponse" />
  </wsdl:message>
  <wsdl:message name="GetHistoricRatesDataSetSoapIn">
    <wsdl:part name="parameters" element="tns:GetHistoricRatesDataSet" />
  </wsdl:message>
  <wsdl:message name="GetHistoricRatesDataSetSoapOut">
    <wsdl:part name="parameters" element="tns:GetHistoricRatesDataSetResponse" />
  </wsdl:message>
  <wsdl:message name="GetSymbolBlotterDataSetSoapIn">
    <wsdl:part name="parameters" element="tns:GetSymbolBlotterDataSet" />
  </wsdl:message>
  <wsdl:message name="GetSymbolBlotterDataSetSoapOut">
    <wsdl:part name="parameters" element="tns:GetSymbolBlotterDataSetResponse" />
  </wsdl:message>
  <wsdl:message name="GetTickerSoapIn">
    <wsdl:part name="parameters" element="tns:GetTicker" />
  </wsdl:message>
  <wsdl:message name="GetTickerSoapOut">
    <wsdl:part name="parameters" element="tns:GetTickerResponse" />
  </wsdl:message>
  <wsdl:message name="GetEconomicCalendarSoapIn">
    <wsdl:part name="parameters" element="tns:GetEconomicCalendar" />
  </wsdl:message>
  <wsdl:message name="GetEconomicCalendarSoapOut">
    <wsdl:part name="parameters" element="tns:GetEconomicCalendarResponse" />
  </wsdl:message>
  <wsdl:message name="GetAccountSoapIn">
    <wsdl:part name="parameters" element="tns:GetAccount" />
  </wsdl:message>
  <wsdl:message name="GetAccountSoapOut">
    <wsdl:part name="parameters" element="tns:GetAccountResponse" />
  </wsdl:message>
  <wsdl:message name="GetAccountServicesSoapIn">
    <wsdl:part name="parameters" element="tns:GetAccountServices" />
  </wsdl:message>
  <wsdl:message name="GetAccountServicesSoapOut">
    <wsdl:part name="parameters" element="tns:GetAccountServicesResponse" />
  </wsdl:message>
  <wsdl:message name="GetDealBlotterSoapIn">
    <wsdl:part name="parameters" element="tns:GetDealBlotter" />
  </wsdl:message>
  <wsdl:message name="GetDealBlotterSoapOut">
    <wsdl:part name="parameters" element="tns:GetDealBlotterResponse" />
  </wsdl:message>
  <wsdl:message name="GetDealBlotterWithFilterSoapIn">
    <wsdl:part name="parameters" element="tns:GetDealBlotterWithFilter" />
  </wsdl:message>
  <wsdl:message name="GetDealBlotterWithFilterSoapOut">
    <wsdl:part name="parameters" element="tns:GetDealBlotterWithFilterResponse" />
  </wsdl:message>
  <wsdl:message name="GetMarginBlotterSoapIn">
    <wsdl:part name="parameters" element="tns:GetMarginBlotter" />
  </wsdl:message>
  <wsdl:message name="GetMarginBlotterSoapOut">
    <wsdl:part name="parameters" element="tns:GetMarginBlotterResponse" />
  </wsdl:message>
  <wsdl:message name="GetOrderBlotterSoapIn">
    <wsdl:part name="parameters" element="tns:GetOrderBlotter" />
  </wsdl:message>
  <wsdl:message name="GetOrderBlotterSoapOut">
    <wsdl:part name="parameters" element="tns:GetOrderBlotterResponse" />
  </wsdl:message>
  <wsdl:message name="GetPositionBlotterSoapIn">
    <wsdl:part name="parameters" element="tns:GetPositionBlotter" />
  </wsdl:message>
  <wsdl:message name="GetPositionBlotterSoapOut">
    <wsdl:part name="parameters" element="tns:GetPositionBlotterResponse" />
  </wsdl:message>
  <wsdl:message name="GetSymbolBlotterSoapIn">
    <wsdl:part name="parameters" element="tns:GetSymbolBlotter" />
  </wsdl:message>
  <wsdl:message name="GetSymbolBlotterSoapOut">
    <wsdl:part name="parameters" element="tns:GetSymbolBlotterResponse" />
  </wsdl:message>
  <wsdl:message name="GetPairSettingsSoapIn">
    <wsdl:part name="parameters" element="tns:GetPairSettings" />
  </wsdl:message>
  <wsdl:message name="GetPairSettingsSoapOut">
    <wsdl:part name="parameters" element="tns:GetPairSettingsResponse" />
  </wsdl:message>
  <wsdl:message name="PlaceSingleOrderSoapIn">
    <wsdl:part name="parameters" element="tns:PlaceSingleOrder" />
  </wsdl:message>
  <wsdl:message name="PlaceSingleOrderSoapOut">
    <wsdl:part name="parameters" element="tns:PlaceSingleOrderResponse" />
  </wsdl:message>
  <wsdl:message name="PlaceSingleOrderAuthenticator">
    <wsdl:part name="Authenticator" element="tns:Authenticator" />
  </wsdl:message>
  <wsdl:message name="ModifySingleOrderSoapIn">
    <wsdl:part name="parameters" element="tns:ModifySingleOrder" />
  </wsdl:message>
  <wsdl:message name="ModifySingleOrderSoapOut">
    <wsdl:part name="parameters" element="tns:ModifySingleOrderResponse" />
  </wsdl:message>
  <wsdl:message name="ModifySingleOrderAuthenticator">
    <wsdl:part name="Authenticator" element="tns:Authenticator" />
  </wsdl:message>
  <wsdl:message name="PlaceOCOOrderSoapIn">
    <wsdl:part name="parameters" element="tns:PlaceOCOOrder" />
  </wsdl:message>
  <wsdl:message name="PlaceOCOOrderSoapOut">
    <wsdl:part name="parameters" element="tns:PlaceOCOOrderResponse" />
  </wsdl:message>
  <wsdl:message name="PlaceOCOOrderAuthenticator">
    <wsdl:part name="Authenticator" element="tns:Authenticator" />
  </wsdl:message>
  <wsdl:message name="ModifyOCOOrderSoapIn">
    <wsdl:part name="parameters" element="tns:ModifyOCOOrder" />
  </wsdl:message>
  <wsdl:message name="ModifyOCOOrderSoapOut">
    <wsdl:part name="parameters" element="tns:ModifyOCOOrderResponse" />
  </wsdl:message>
  <wsdl:message name="ModifyOCOOrderAuthenticator">
    <wsdl:part name="Authenticator" element="tns:Authenticator" />
  </wsdl:message>
  <wsdl:message name="CancelOrderSoapIn">
    <wsdl:part name="parameters" element="tns:CancelOrder" />
  </wsdl:message>
  <wsdl:message name="CancelOrderSoapOut">
    <wsdl:part name="parameters" element="tns:CancelOrderResponse" />
  </wsdl:message>
  <wsdl:message name="CancelOrderAuthenticator">
    <wsdl:part name="Authenticator" element="tns:Authenticator" />
  </wsdl:message>
  <wsdl:message name="DealRequestSoapIn">
    <wsdl:part name="parameters" element="tns:DealRequest" />
  </wsdl:message>
  <wsdl:message name="DealRequestSoapOut">
    <wsdl:part name="parameters" element="tns:DealRequestResponse" />
  </wsdl:message>
  <wsdl:message name="DealRequestAuthenticator">
    <wsdl:part name="Authenticator" element="tns:Authenticator" />
  </wsdl:message>
  <wsdl:message name="DealRequestByDealIdSoapIn">
    <wsdl:part name="parameters" element="tns:DealRequestByDealId" />
  </wsdl:message>
  <wsdl:message name="DealRequestByDealIdSoapOut">
    <wsdl:part name="parameters" element="tns:DealRequestByDealIdResponse" />
  </wsdl:message>
  <wsdl:message name="DealRequestByDealIdAuthenticator">
    <wsdl:part name="Authenticator" element="tns:Authenticator" />
  </wsdl:message>
  <wsdl:message name="DealRequestAtBestSoapIn">
    <wsdl:part name="parameters" element="tns:DealRequestAtBest" />
  </wsdl:message>
  <wsdl:message name="DealRequestAtBestSoapOut">
    <wsdl:part name="parameters" element="tns:DealRequestAtBestResponse" />
  </wsdl:message>
  <wsdl:message name="DealRequestAtBestAuthenticator">
    <wsdl:part name="Authenticator" element="tns:Authenticator" />
  </wsdl:message>
  <wsdl:message name="CancelOrderByOrderIDSoapIn">
    <wsdl:part name="parameters" element="tns:CancelOrderByOrderID" />
  </wsdl:message>
  <wsdl:message name="CancelOrderByOrderIDSoapOut">
    <wsdl:part name="parameters" element="tns:CancelOrderByOrderIDResponse" />
  </wsdl:message>
  <wsdl:message name="CancelOrderByOrderIDAuthenticator">
    <wsdl:part name="Authenticator" element="tns:Authenticator" />
  </wsdl:message>
  <wsdl:message name="CancelOrderByReferenceNumberSoapIn">
    <wsdl:part name="parameters" element="tns:CancelOrderByReferenceNumber" />
  </wsdl:message>
  <wsdl:message name="CancelOrderByReferenceNumberSoapOut">
    <wsdl:part name="parameters" element="tns:CancelOrderByReferenceNumberResponse" />
  </wsdl:message>
  <wsdl:message name="CancelOrderByReferenceNumberAuthenticator">
    <wsdl:part name="Authenticator" element="tns:Authenticator" />
  </wsdl:message>
  <wsdl:message name="PlaceIfThenOrderSoapIn">
    <wsdl:part name="parameters" element="tns:PlaceIfThenOrder" />
  </wsdl:message>
  <wsdl:message name="PlaceIfThenOrderSoapOut">
    <wsdl:part name="parameters" element="tns:PlaceIfThenOrderResponse" />
  </wsdl:message>
  <wsdl:message name="PlaceIfThenOrderAuthenticator">
    <wsdl:part name="Authenticator" element="tns:Authenticator" />
  </wsdl:message>
  <wsdl:message name="ModifyIfThenOrderSoapIn">
    <wsdl:part name="parameters" element="tns:ModifyIfThenOrder" />
  </wsdl:message>
  <wsdl:message name="ModifyIfThenOrderSoapOut">
    <wsdl:part name="parameters" element="tns:ModifyIfThenOrderResponse" />
  </wsdl:message>
  <wsdl:message name="ModifyIfThenOrderAuthenticator">
    <wsdl:part name="Authenticator" element="tns:Authenticator" />
  </wsdl:message>
  <wsdl:message name="PlaceIfThenOCOOrderSoapIn">
    <wsdl:part name="parameters" element="tns:PlaceIfThenOCOOrder" />
  </wsdl:message>
  <wsdl:message name="PlaceIfThenOCOOrderSoapOut">
    <wsdl:part name="parameters" element="tns:PlaceIfThenOCOOrderResponse" />
  </wsdl:message>
  <wsdl:message name="PlaceIfThenOCOOrderAuthenticator">
    <wsdl:part name="Authenticator" element="tns:Authenticator" />
  </wsdl:message>
  <wsdl:message name="ModifyIfThenOCOOrderSoapIn">
    <wsdl:part name="parameters" element="tns:ModifyIfThenOCOOrder" />
  </wsdl:message>
  <wsdl:message name="ModifyIfThenOCOOrderSoapOut">
    <wsdl:part name="parameters" element="tns:ModifyIfThenOCOOrderResponse" />
  </wsdl:message>
  <wsdl:message name="ModifyIfThenOCOOrderAuthenticator">
    <wsdl:part name="Authenticator" element="tns:Authenticator" />
  </wsdl:message>
  <wsdl:message name="PlaceSingleASSPOrderSoapIn">
    <wsdl:part name="parameters" element="tns:PlaceSingleASSPOrder" />
  </wsdl:message>
  <wsdl:message name="PlaceSingleASSPOrderSoapOut">
    <wsdl:part name="parameters" element="tns:PlaceSingleASSPOrderResponse" />
  </wsdl:message>
  <wsdl:message name="PlaceSingleASSPOrderAuthenticator">
    <wsdl:part name="Authenticator" element="tns:Authenticator" />
  </wsdl:message>
  <wsdl:message name="ModifySingleASSPOrderSoapIn">
    <wsdl:part name="parameters" element="tns:ModifySingleASSPOrder" />
  </wsdl:message>
  <wsdl:message name="ModifySingleASSPOrderSoapOut">
    <wsdl:part name="parameters" element="tns:ModifySingleASSPOrderResponse" />
  </wsdl:message>
  <wsdl:message name="ModifySingleASSPOrderAuthenticator">
    <wsdl:part name="Authenticator" element="tns:Authenticator" />
  </wsdl:message>
  <wsdl:message name="PlaceOCOASSPOrderSoapIn">
    <wsdl:part name="parameters" element="tns:PlaceOCOASSPOrder" />
  </wsdl:message>
  <wsdl:message name="PlaceOCOASSPOrderSoapOut">
    <wsdl:part name="parameters" element="tns:PlaceOCOASSPOrderResponse" />
  </wsdl:message>
  <wsdl:message name="PlaceOCOASSPOrderAuthenticator">
    <wsdl:part name="Authenticator" element="tns:Authenticator" />
  </wsdl:message>
  <wsdl:message name="ModifyOCOASSPOrderSoapIn">
    <wsdl:part name="parameters" element="tns:ModifyOCOASSPOrder" />
  </wsdl:message>
  <wsdl:message name="ModifyOCOASSPOrderSoapOut">
    <wsdl:part name="parameters" element="tns:ModifyOCOASSPOrderResponse" />
  </wsdl:message>
  <wsdl:message name="ModifyOCOASSPOrderAuthenticator">
    <wsdl:part name="Authenticator" element="tns:Authenticator" />
  </wsdl:message>
  <wsdl:message name="EchoSoapIn">
    <wsdl:part name="parameters" element="tns:Echo" />
  </wsdl:message>
  <wsdl:message name="EchoSoapOut">
    <wsdl:part name="parameters" element="tns:EchoResponse" />
  </wsdl:message>
  <wsdl:message name="GetTimeSoapIn">
    <wsdl:part name="parameters" element="tns:GetTime" />
  </wsdl:message>
  <wsdl:message name="GetTimeSoapOut">
    <wsdl:part name="parameters" element="tns:GetTimeResponse" />
  </wsdl:message>
  <wsdl:message name="GetRatesServerAuthSoapIn">
    <wsdl:part name="parameters" element="tns:GetRatesServerAuth" />
  </wsdl:message>
  <wsdl:message name="GetRatesServerAuthSoapOut">
    <wsdl:part name="parameters" element="tns:GetRatesServerAuthResponse" />
  </wsdl:message>
  <wsdl:message name="GetSubAccountAuthenticationKeySoapIn">
    <wsdl:part name="parameters" element="tns:GetSubAccountAuthenticationKey" />
  </wsdl:message>
  <wsdl:message name="GetSubAccountAuthenticationKeySoapOut">
    <wsdl:part name="parameters" element="tns:GetSubAccountAuthenticationKeyResponse" />
  </wsdl:message>
  <wsdl:message name="GetCommentSoapIn">
    <wsdl:part name="parameters" element="tns:GetComment" />
  </wsdl:message>
  <wsdl:message name="GetCommentSoapOut">
    <wsdl:part name="parameters" element="tns:GetCommentResponse" />
  </wsdl:message>
  <wsdl:message name="GetNewsSoapIn">
    <wsdl:part name="parameters" element="tns:GetNews" />
  </wsdl:message>
  <wsdl:message name="GetNewsSoapOut">
    <wsdl:part name="parameters" element="tns:GetNewsResponse" />
  </wsdl:message>
  <wsdl:message name="GetAccountObjectSoapIn">
    <wsdl:part name="parameters" element="tns:GetAccountObject" />
  </wsdl:message>
  <wsdl:message name="GetAccountObjectSoapOut">
    <wsdl:part name="parameters" element="tns:GetAccountObjectResponse" />
  </wsdl:message>
  <wsdl:message name="GetIGAuthenticationKeySoapIn">
    <wsdl:part name="parameters" element="tns:GetIGAuthenticationKey" />
  </wsdl:message>
  <wsdl:message name="GetIGAuthenticationKeySoapOut">
    <wsdl:part name="parameters" element="tns:GetIGAuthenticationKeyResponse" />
  </wsdl:message>
  <wsdl:message name="GetSubAccountCodeSoapIn">
    <wsdl:part name="parameters" element="tns:GetSubAccountCode" />
  </wsdl:message>
  <wsdl:message name="GetSubAccountCodeSoapOut">
    <wsdl:part name="parameters" element="tns:GetSubAccountCodeResponse" />
  </wsdl:message>
  <wsdl:message name="GetSubAccountNumberSoapIn">
    <wsdl:part name="parameters" element="tns:GetSubAccountNumber" />
  </wsdl:message>
  <wsdl:message name="GetSubAccountNumberSoapOut">
    <wsdl:part name="parameters" element="tns:GetSubAccountNumberResponse" />
  </wsdl:message>
  <wsdl:message name="GetlTIDByBankConfSoapIn">
    <wsdl:part name="parameters" element="tns:GetlTIDByBankConf" />
  </wsdl:message>
  <wsdl:message name="GetlTIDByBankConfSoapOut">
    <wsdl:part name="parameters" element="tns:GetlTIDByBankConfResponse" />
  </wsdl:message>
  <wsdl:message name="VerifyCredentialsSoapIn">
    <wsdl:part name="parameters" element="tns:VerifyCredentials" />
  </wsdl:message>
  <wsdl:message name="VerifyCredentialsSoapOut">
    <wsdl:part name="parameters" element="tns:VerifyCredentialsResponse" />
  </wsdl:message>
  <wsdl:message name="GetCommentDataSetHttpGetIn" />
  <wsdl:message name="GetCommentDataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="GetDealBlotterDataSetHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetDealBlotterDataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="GetDealBlotterDataSetWithFilterHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Status" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetDealBlotterDataSetWithFilterHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="GetDelayedRatesDataSetHttpGetIn" />
  <wsdl:message name="GetDelayedRatesDataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="GetMarginBlotterDataSetHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetMarginBlotterDataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="GetCustomMarginBlotterHttpGetIn">
    <wsdl:part name="Key" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetCustomMarginBlotterHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetCustomPositionBlotterHttpGetIn">
    <wsdl:part name="Key" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetCustomPositionBlotterHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetNewsDataSetHttpGetIn" />
  <wsdl:message name="GetNewsDataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="SaveUserProductSubscriptionSettingsHttpGetIn">
    <wsdl:part name="UserId" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Brand" type="s:string" />
    <wsdl:part name="ProductList" type="s:string" />
  </wsdl:message>
  <wsdl:message name="SaveUserProductSubscriptionSettingsHttpGetOut">
    <wsdl:part name="Body" element="tns:objProductSubscriptionResponse" />
  </wsdl:message>
  <wsdl:message name="ServiceAuthenticationHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="Password" type="s:string" />
    <wsdl:part name="Brand" type="s:string" />
    <wsdl:part name="ServiceID" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ServiceAuthenticationHttpGetOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="GetProductSubscriptionRelationshipBlotterHttpGetIn">
    <wsdl:part name="UserId" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Brand" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetProductSubscriptionRelationshipBlotterHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetProductSubscriptionRelationshipBlotterDatasetHttpGetIn">
    <wsdl:part name="UserId" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Brand" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetProductSubscriptionRelationshipBlotterDatasetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="GetOrderBlotterDataSetHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetOrderBlotterDataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="GetPositionBlotterDataSetHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetPositionBlotterDataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="GetRatesBlotterHttpGetIn">
    <wsdl:part name="Key" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetRatesBlotterHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetRatesHttpGetIn">
    <wsdl:part name="Key" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetRatesHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetRatesDataSetHttpGetIn">
    <wsdl:part name="Key" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetRatesDataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="GetHistoricRatesDataSetHttpGetIn">
    <wsdl:part name="Key" type="s:string" />
    <wsdl:part name="Quote" type="s:string" />
    <wsdl:part name="StartDateTime" type="s:string" />
    <wsdl:part name="EndDateTime" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetHistoricRatesDataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="GetSymbolBlotterDataSetHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetSymbolBlotterDataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="GetTickerHttpGetIn">
    <wsdl:part name="UserId" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Brand" type="s:string" />
    <wsdl:part name="Accounttype" type="s:string" />
    <wsdl:part name="Lang" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetTickerHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetEconomicCalendarHttpGetIn">
    <wsdl:part name="UserId" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Brand" type="s:string" />
    <wsdl:part name="Lang" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetEconomicCalendarHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetAccountHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Brand" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetAccountHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetAccountServicesHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Brand" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetAccountServicesHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetDealBlotterHttpGetIn">
    <wsdl:part name="Key" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetDealBlotterHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetDealBlotterWithFilterHttpGetIn">
    <wsdl:part name="Key" type="s:string" />
    <wsdl:part name="Status" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetDealBlotterWithFilterHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetMarginBlotterHttpGetIn">
    <wsdl:part name="Key" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetMarginBlotterHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetOrderBlotterHttpGetIn">
    <wsdl:part name="Key" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetOrderBlotterHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetPositionBlotterHttpGetIn">
    <wsdl:part name="Key" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetPositionBlotterHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetSymbolBlotterHttpGetIn">
    <wsdl:part name="Key" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetSymbolBlotterHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetPairSettingsHttpGetIn">
    <wsdl:part name="UserId" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Brand" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetPairSettingsHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="PlaceSingleOrderHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Pair" type="s:string" />
    <wsdl:part name="Expiry" type="s:string" />
    <wsdl:part name="BuySell" type="s:string" />
    <wsdl:part name="Amount" type="s:string" />
    <wsdl:part name="Rate" type="s:string" />
    <wsdl:part name="OrderBasis" type="s:string" />
  </wsdl:message>
  <wsdl:message name="PlaceSingleOrderHttpGetOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="ModifySingleOrderHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="OrderReference" type="s:string" />
    <wsdl:part name="Expiry" type="s:string" />
    <wsdl:part name="BuySell" type="s:string" />
    <wsdl:part name="Amount" type="s:string" />
    <wsdl:part name="Rate" type="s:string" />
    <wsdl:part name="OrderBasis" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ModifySingleOrderHttpGetOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="PlaceOCOOrderHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Pair" type="s:string" />
    <wsdl:part name="Expiry" type="s:string" />
    <wsdl:part name="BuySell" type="s:string" />
    <wsdl:part name="Amount" type="s:string" />
    <wsdl:part name="Rate" type="s:string" />
    <wsdl:part name="OrderBasis" type="s:string" />
    <wsdl:part name="BuySell1" type="s:string" />
    <wsdl:part name="Amount1" type="s:string" />
    <wsdl:part name="Rate1" type="s:string" />
    <wsdl:part name="OrderBasis1" type="s:string" />
  </wsdl:message>
  <wsdl:message name="PlaceOCOOrderHttpGetOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="ModifyOCOOrderHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="OrderReference" type="s:string" />
    <wsdl:part name="Expiry" type="s:string" />
    <wsdl:part name="BuySell" type="s:string" />
    <wsdl:part name="Amount" type="s:string" />
    <wsdl:part name="Rate" type="s:string" />
    <wsdl:part name="OrderBasis" type="s:string" />
    <wsdl:part name="BuySell1" type="s:string" />
    <wsdl:part name="Amount1" type="s:string" />
    <wsdl:part name="Rate1" type="s:string" />
    <wsdl:part name="OrderBasis1" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ModifyOCOOrderHttpGetOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="CancelOrderHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="OrderConfirmation" type="s:string" />
  </wsdl:message>
  <wsdl:message name="CancelOrderHttpGetOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="DealRequestHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Pair" type="s:string" />
    <wsdl:part name="BuySell" type="s:string" />
    <wsdl:part name="Amount" type="s:string" />
    <wsdl:part name="Rate" type="s:string" />
  </wsdl:message>
  <wsdl:message name="DealRequestHttpGetOut">
    <wsdl:part name="Body" element="tns:objDealResponse" />
  </wsdl:message>
  <wsdl:message name="DealRequestByDealIdHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Pair" type="s:string" />
    <wsdl:part name="BuySell" type="s:string" />
    <wsdl:part name="Amount" type="s:string" />
    <wsdl:part name="Rate" type="s:string" />
    <wsdl:part name="DealID" type="s:string" />
  </wsdl:message>
  <wsdl:message name="DealRequestByDealIdHttpGetOut">
    <wsdl:part name="Body" element="tns:objDealResponse" />
  </wsdl:message>
  <wsdl:message name="DealRequestAtBestHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Pair" type="s:string" />
    <wsdl:part name="BuySell" type="s:string" />
    <wsdl:part name="Amount" type="s:string" />
  </wsdl:message>
  <wsdl:message name="DealRequestAtBestHttpGetOut">
    <wsdl:part name="Body" element="tns:objDealResponse" />
  </wsdl:message>
  <wsdl:message name="CancelOrderByOrderIDHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="OrderReference" type="s:string" />
  </wsdl:message>
  <wsdl:message name="CancelOrderByOrderIDHttpGetOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="CancelOrderByReferenceNumberHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="OrderReference" type="s:string" />
  </wsdl:message>
  <wsdl:message name="CancelOrderByReferenceNumberHttpGetOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="PlaceIfThenOrderHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Pair" type="s:string" />
    <wsdl:part name="Expiry" type="s:string" />
    <wsdl:part name="BuySell" type="s:string" />
    <wsdl:part name="Amount" type="s:string" />
    <wsdl:part name="Rate" type="s:string" />
    <wsdl:part name="OrderBasis" type="s:string" />
    <wsdl:part name="BuySell1" type="s:string" />
    <wsdl:part name="Amount1" type="s:string" />
    <wsdl:part name="Rate1" type="s:string" />
    <wsdl:part name="OrderBasis1" type="s:string" />
  </wsdl:message>
  <wsdl:message name="PlaceIfThenOrderHttpGetOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="ModifyIfThenOrderHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="OrderReference" type="s:string" />
    <wsdl:part name="Expiry" type="s:string" />
    <wsdl:part name="BuySell" type="s:string" />
    <wsdl:part name="Amount" type="s:string" />
    <wsdl:part name="Rate" type="s:string" />
    <wsdl:part name="OrderBasis" type="s:string" />
    <wsdl:part name="BuySell1" type="s:string" />
    <wsdl:part name="Amount1" type="s:string" />
    <wsdl:part name="Rate1" type="s:string" />
    <wsdl:part name="OrderBasis1" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ModifyIfThenOrderHttpGetOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="PlaceIfThenOCOOrderHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Pair" type="s:string" />
    <wsdl:part name="Expiry" type="s:string" />
    <wsdl:part name="BuySell" type="s:string" />
    <wsdl:part name="Amount" type="s:string" />
    <wsdl:part name="Rate" type="s:string" />
    <wsdl:part name="OrderBasis" type="s:string" />
    <wsdl:part name="BuySell1" type="s:string" />
    <wsdl:part name="Amount1" type="s:string" />
    <wsdl:part name="Rate1" type="s:string" />
    <wsdl:part name="OrderBasis1" type="s:string" />
    <wsdl:part name="BuySell2" type="s:string" />
    <wsdl:part name="Amount2" type="s:string" />
    <wsdl:part name="Rate2" type="s:string" />
    <wsdl:part name="OrderBasis2" type="s:string" />
  </wsdl:message>
  <wsdl:message name="PlaceIfThenOCOOrderHttpGetOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="ModifyIfThenOCOOrderHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="OrderReference" type="s:string" />
    <wsdl:part name="Expiry" type="s:string" />
    <wsdl:part name="BuySell" type="s:string" />
    <wsdl:part name="Amount" type="s:string" />
    <wsdl:part name="Rate" type="s:string" />
    <wsdl:part name="OrderBasis" type="s:string" />
    <wsdl:part name="BuySell1" type="s:string" />
    <wsdl:part name="Amount1" type="s:string" />
    <wsdl:part name="Rate1" type="s:string" />
    <wsdl:part name="OrderBasis1" type="s:string" />
    <wsdl:part name="BuySell2" type="s:string" />
    <wsdl:part name="Amount2" type="s:string" />
    <wsdl:part name="Rate2" type="s:string" />
    <wsdl:part name="OrderBasis2" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ModifyIfThenOCOOrderHttpGetOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="PlaceSingleASSPOrderHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Pair" type="s:string" />
    <wsdl:part name="Rate" type="s:string" />
    <wsdl:part name="OrderBasis" type="s:string" />
  </wsdl:message>
  <wsdl:message name="PlaceSingleASSPOrderHttpGetOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="ModifySingleASSPOrderHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="OrderReference" type="s:string" />
    <wsdl:part name="Rate" type="s:string" />
    <wsdl:part name="OrderBasis" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ModifySingleASSPOrderHttpGetOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="PlaceOCOASSPOrderHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Pair" type="s:string" />
    <wsdl:part name="LimitRate" type="s:string" />
    <wsdl:part name="StopLossRate" type="s:string" />
  </wsdl:message>
  <wsdl:message name="PlaceOCOASSPOrderHttpGetOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="ModifyOCOASSPOrderHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="OrderReference" type="s:string" />
    <wsdl:part name="LimitRate" type="s:string" />
    <wsdl:part name="StopLossRate" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ModifyOCOASSPOrderHttpGetOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="EchoHttpGetIn">
    <wsdl:part name="Message" type="s:string" />
  </wsdl:message>
  <wsdl:message name="EchoHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetTimeHttpGetIn" />
  <wsdl:message name="GetTimeHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetRatesServerAuthHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Brand" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetRatesServerAuthHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetSubAccountAuthenticationKeyHttpGetIn">
    <wsdl:part name="MasterAccountKey" type="s:string" />
    <wsdl:part name="SubAccountCode" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetSubAccountAuthenticationKeyHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetCommentHttpGetIn" />
  <wsdl:message name="GetCommentHttpGetOut">
    <wsdl:part name="Body" element="tns:objMarketText" />
  </wsdl:message>
  <wsdl:message name="GetNewsHttpGetIn" />
  <wsdl:message name="GetNewsHttpGetOut">
    <wsdl:part name="Body" element="tns:objMarketText" />
  </wsdl:message>
  <wsdl:message name="GetAccountObjectHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Brand" type="s:string" />
    <wsdl:part name="Notes" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetAccountObjectHttpGetOut">
    <wsdl:part name="Body" element="tns:objAccount" />
  </wsdl:message>
  <wsdl:message name="GetIGAuthenticationKeyHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Brand" type="s:string" />
    <wsdl:part name="Language" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetIGAuthenticationKeyHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetSubAccountCodeHttpGetIn">
    <wsdl:part name="MasterAccountCode" type="s:string" />
    <wsdl:part name="SubAccountNumber" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetSubAccountCodeHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetSubAccountNumberHttpGetIn">
    <wsdl:part name="MasterAccountCode" type="s:string" />
    <wsdl:part name="SubAccountCode" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetSubAccountNumberHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetlTIDByBankConfHttpGetIn">
    <wsdl:part name="BankConfirmation" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetlTIDByBankConfHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="VerifyCredentialsHttpGetIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Brand" type="s:string" />
  </wsdl:message>
  <wsdl:message name="VerifyCredentialsHttpGetOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="GetCommentDataSetHttpPostIn" />
  <wsdl:message name="GetCommentDataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="GetDealBlotterDataSetHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetDealBlotterDataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="GetDealBlotterDataSetWithFilterHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Status" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetDealBlotterDataSetWithFilterHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="GetDelayedRatesDataSetHttpPostIn" />
  <wsdl:message name="GetDelayedRatesDataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="GetMarginBlotterDataSetHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetMarginBlotterDataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="GetCustomMarginBlotterHttpPostIn">
    <wsdl:part name="Key" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetCustomMarginBlotterHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetCustomPositionBlotterHttpPostIn">
    <wsdl:part name="Key" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetCustomPositionBlotterHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetNewsDataSetHttpPostIn" />
  <wsdl:message name="GetNewsDataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="SaveUserProductSubscriptionSettingsHttpPostIn">
    <wsdl:part name="UserId" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Brand" type="s:string" />
    <wsdl:part name="ProductList" type="s:string" />
  </wsdl:message>
  <wsdl:message name="SaveUserProductSubscriptionSettingsHttpPostOut">
    <wsdl:part name="Body" element="tns:objProductSubscriptionResponse" />
  </wsdl:message>
  <wsdl:message name="ServiceAuthenticationHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="Password" type="s:string" />
    <wsdl:part name="Brand" type="s:string" />
    <wsdl:part name="ServiceID" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ServiceAuthenticationHttpPostOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="GetProductSubscriptionRelationshipBlotterHttpPostIn">
    <wsdl:part name="UserId" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Brand" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetProductSubscriptionRelationshipBlotterHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetProductSubscriptionRelationshipBlotterDatasetHttpPostIn">
    <wsdl:part name="UserId" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Brand" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetProductSubscriptionRelationshipBlotterDatasetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="GetOrderBlotterDataSetHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetOrderBlotterDataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="GetPositionBlotterDataSetHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetPositionBlotterDataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="GetRatesBlotterHttpPostIn">
    <wsdl:part name="Key" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetRatesBlotterHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetRatesHttpPostIn">
    <wsdl:part name="Key" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetRatesHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetRatesDataSetHttpPostIn">
    <wsdl:part name="Key" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetRatesDataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="GetHistoricRatesDataSetHttpPostIn">
    <wsdl:part name="Key" type="s:string" />
    <wsdl:part name="Quote" type="s:string" />
    <wsdl:part name="StartDateTime" type="s:string" />
    <wsdl:part name="EndDateTime" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetHistoricRatesDataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="GetSymbolBlotterDataSetHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetSymbolBlotterDataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="GetTickerHttpPostIn">
    <wsdl:part name="UserId" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Brand" type="s:string" />
    <wsdl:part name="Accounttype" type="s:string" />
    <wsdl:part name="Lang" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetTickerHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetEconomicCalendarHttpPostIn">
    <wsdl:part name="UserId" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Brand" type="s:string" />
    <wsdl:part name="Lang" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetEconomicCalendarHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetAccountHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Brand" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetAccountHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetAccountServicesHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Brand" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetAccountServicesHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetDealBlotterHttpPostIn">
    <wsdl:part name="Key" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetDealBlotterHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetDealBlotterWithFilterHttpPostIn">
    <wsdl:part name="Key" type="s:string" />
    <wsdl:part name="Status" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetDealBlotterWithFilterHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetMarginBlotterHttpPostIn">
    <wsdl:part name="Key" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetMarginBlotterHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetOrderBlotterHttpPostIn">
    <wsdl:part name="Key" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetOrderBlotterHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetPositionBlotterHttpPostIn">
    <wsdl:part name="Key" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetPositionBlotterHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetSymbolBlotterHttpPostIn">
    <wsdl:part name="Key" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetSymbolBlotterHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetPairSettingsHttpPostIn">
    <wsdl:part name="UserId" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Brand" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetPairSettingsHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="PlaceSingleOrderHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Pair" type="s:string" />
    <wsdl:part name="Expiry" type="s:string" />
    <wsdl:part name="BuySell" type="s:string" />
    <wsdl:part name="Amount" type="s:string" />
    <wsdl:part name="Rate" type="s:string" />
    <wsdl:part name="OrderBasis" type="s:string" />
  </wsdl:message>
  <wsdl:message name="PlaceSingleOrderHttpPostOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="ModifySingleOrderHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="OrderReference" type="s:string" />
    <wsdl:part name="Expiry" type="s:string" />
    <wsdl:part name="BuySell" type="s:string" />
    <wsdl:part name="Amount" type="s:string" />
    <wsdl:part name="Rate" type="s:string" />
    <wsdl:part name="OrderBasis" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ModifySingleOrderHttpPostOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="PlaceOCOOrderHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Pair" type="s:string" />
    <wsdl:part name="Expiry" type="s:string" />
    <wsdl:part name="BuySell" type="s:string" />
    <wsdl:part name="Amount" type="s:string" />
    <wsdl:part name="Rate" type="s:string" />
    <wsdl:part name="OrderBasis" type="s:string" />
    <wsdl:part name="BuySell1" type="s:string" />
    <wsdl:part name="Amount1" type="s:string" />
    <wsdl:part name="Rate1" type="s:string" />
    <wsdl:part name="OrderBasis1" type="s:string" />
  </wsdl:message>
  <wsdl:message name="PlaceOCOOrderHttpPostOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="ModifyOCOOrderHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="OrderReference" type="s:string" />
    <wsdl:part name="Expiry" type="s:string" />
    <wsdl:part name="BuySell" type="s:string" />
    <wsdl:part name="Amount" type="s:string" />
    <wsdl:part name="Rate" type="s:string" />
    <wsdl:part name="OrderBasis" type="s:string" />
    <wsdl:part name="BuySell1" type="s:string" />
    <wsdl:part name="Amount1" type="s:string" />
    <wsdl:part name="Rate1" type="s:string" />
    <wsdl:part name="OrderBasis1" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ModifyOCOOrderHttpPostOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="CancelOrderHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="OrderConfirmation" type="s:string" />
  </wsdl:message>
  <wsdl:message name="CancelOrderHttpPostOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="DealRequestHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Pair" type="s:string" />
    <wsdl:part name="BuySell" type="s:string" />
    <wsdl:part name="Amount" type="s:string" />
    <wsdl:part name="Rate" type="s:string" />
  </wsdl:message>
  <wsdl:message name="DealRequestHttpPostOut">
    <wsdl:part name="Body" element="tns:objDealResponse" />
  </wsdl:message>
  <wsdl:message name="DealRequestByDealIdHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Pair" type="s:string" />
    <wsdl:part name="BuySell" type="s:string" />
    <wsdl:part name="Amount" type="s:string" />
    <wsdl:part name="Rate" type="s:string" />
    <wsdl:part name="DealID" type="s:string" />
  </wsdl:message>
  <wsdl:message name="DealRequestByDealIdHttpPostOut">
    <wsdl:part name="Body" element="tns:objDealResponse" />
  </wsdl:message>
  <wsdl:message name="DealRequestAtBestHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Pair" type="s:string" />
    <wsdl:part name="BuySell" type="s:string" />
    <wsdl:part name="Amount" type="s:string" />
  </wsdl:message>
  <wsdl:message name="DealRequestAtBestHttpPostOut">
    <wsdl:part name="Body" element="tns:objDealResponse" />
  </wsdl:message>
  <wsdl:message name="CancelOrderByOrderIDHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="OrderReference" type="s:string" />
  </wsdl:message>
  <wsdl:message name="CancelOrderByOrderIDHttpPostOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="CancelOrderByReferenceNumberHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="OrderReference" type="s:string" />
  </wsdl:message>
  <wsdl:message name="CancelOrderByReferenceNumberHttpPostOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="PlaceIfThenOrderHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Pair" type="s:string" />
    <wsdl:part name="Expiry" type="s:string" />
    <wsdl:part name="BuySell" type="s:string" />
    <wsdl:part name="Amount" type="s:string" />
    <wsdl:part name="Rate" type="s:string" />
    <wsdl:part name="OrderBasis" type="s:string" />
    <wsdl:part name="BuySell1" type="s:string" />
    <wsdl:part name="Amount1" type="s:string" />
    <wsdl:part name="Rate1" type="s:string" />
    <wsdl:part name="OrderBasis1" type="s:string" />
  </wsdl:message>
  <wsdl:message name="PlaceIfThenOrderHttpPostOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="ModifyIfThenOrderHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="OrderReference" type="s:string" />
    <wsdl:part name="Expiry" type="s:string" />
    <wsdl:part name="BuySell" type="s:string" />
    <wsdl:part name="Amount" type="s:string" />
    <wsdl:part name="Rate" type="s:string" />
    <wsdl:part name="OrderBasis" type="s:string" />
    <wsdl:part name="BuySell1" type="s:string" />
    <wsdl:part name="Amount1" type="s:string" />
    <wsdl:part name="Rate1" type="s:string" />
    <wsdl:part name="OrderBasis1" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ModifyIfThenOrderHttpPostOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="PlaceIfThenOCOOrderHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Pair" type="s:string" />
    <wsdl:part name="Expiry" type="s:string" />
    <wsdl:part name="BuySell" type="s:string" />
    <wsdl:part name="Amount" type="s:string" />
    <wsdl:part name="Rate" type="s:string" />
    <wsdl:part name="OrderBasis" type="s:string" />
    <wsdl:part name="BuySell1" type="s:string" />
    <wsdl:part name="Amount1" type="s:string" />
    <wsdl:part name="Rate1" type="s:string" />
    <wsdl:part name="OrderBasis1" type="s:string" />
    <wsdl:part name="BuySell2" type="s:string" />
    <wsdl:part name="Amount2" type="s:string" />
    <wsdl:part name="Rate2" type="s:string" />
    <wsdl:part name="OrderBasis2" type="s:string" />
  </wsdl:message>
  <wsdl:message name="PlaceIfThenOCOOrderHttpPostOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="ModifyIfThenOCOOrderHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="OrderReference" type="s:string" />
    <wsdl:part name="Expiry" type="s:string" />
    <wsdl:part name="BuySell" type="s:string" />
    <wsdl:part name="Amount" type="s:string" />
    <wsdl:part name="Rate" type="s:string" />
    <wsdl:part name="OrderBasis" type="s:string" />
    <wsdl:part name="BuySell1" type="s:string" />
    <wsdl:part name="Amount1" type="s:string" />
    <wsdl:part name="Rate1" type="s:string" />
    <wsdl:part name="OrderBasis1" type="s:string" />
    <wsdl:part name="BuySell2" type="s:string" />
    <wsdl:part name="Amount2" type="s:string" />
    <wsdl:part name="Rate2" type="s:string" />
    <wsdl:part name="OrderBasis2" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ModifyIfThenOCOOrderHttpPostOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="PlaceSingleASSPOrderHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Pair" type="s:string" />
    <wsdl:part name="Rate" type="s:string" />
    <wsdl:part name="OrderBasis" type="s:string" />
  </wsdl:message>
  <wsdl:message name="PlaceSingleASSPOrderHttpPostOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="ModifySingleASSPOrderHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="OrderReference" type="s:string" />
    <wsdl:part name="Rate" type="s:string" />
    <wsdl:part name="OrderBasis" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ModifySingleASSPOrderHttpPostOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="PlaceOCOASSPOrderHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Pair" type="s:string" />
    <wsdl:part name="LimitRate" type="s:string" />
    <wsdl:part name="StopLossRate" type="s:string" />
  </wsdl:message>
  <wsdl:message name="PlaceOCOASSPOrderHttpPostOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="ModifyOCOASSPOrderHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="OrderReference" type="s:string" />
    <wsdl:part name="LimitRate" type="s:string" />
    <wsdl:part name="StopLossRate" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ModifyOCOASSPOrderHttpPostOut">
    <wsdl:part name="Body" element="tns:objPlaceOrderResponse" />
  </wsdl:message>
  <wsdl:message name="EchoHttpPostIn">
    <wsdl:part name="Message" type="s:string" />
  </wsdl:message>
  <wsdl:message name="EchoHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetTimeHttpPostIn" />
  <wsdl:message name="GetTimeHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetRatesServerAuthHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Brand" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetRatesServerAuthHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetSubAccountAuthenticationKeyHttpPostIn">
    <wsdl:part name="MasterAccountKey" type="s:string" />
    <wsdl:part name="SubAccountCode" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetSubAccountAuthenticationKeyHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetCommentHttpPostIn" />
  <wsdl:message name="GetCommentHttpPostOut">
    <wsdl:part name="Body" element="tns:objMarketText" />
  </wsdl:message>
  <wsdl:message name="GetNewsHttpPostIn" />
  <wsdl:message name="GetNewsHttpPostOut">
    <wsdl:part name="Body" element="tns:objMarketText" />
  </wsdl:message>
  <wsdl:message name="GetAccountObjectHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Brand" type="s:string" />
    <wsdl:part name="Notes" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetAccountObjectHttpPostOut">
    <wsdl:part name="Body" element="tns:objAccount" />
  </wsdl:message>
  <wsdl:message name="GetIGAuthenticationKeyHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Brand" type="s:string" />
    <wsdl:part name="Language" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetIGAuthenticationKeyHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetSubAccountCodeHttpPostIn">
    <wsdl:part name="MasterAccountCode" type="s:string" />
    <wsdl:part name="SubAccountNumber" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetSubAccountCodeHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetSubAccountNumberHttpPostIn">
    <wsdl:part name="MasterAccountCode" type="s:string" />
    <wsdl:part name="SubAccountCode" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetSubAccountNumberHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetlTIDByBankConfHttpPostIn">
    <wsdl:part name="BankConfirmation" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetlTIDByBankConfHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="VerifyCredentialsHttpPostIn">
    <wsdl:part name="UserID" type="s:string" />
    <wsdl:part name="PWD" type="s:string" />
    <wsdl:part name="Brand" type="s:string" />
  </wsdl:message>
  <wsdl:message name="VerifyCredentialsHttpPostOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:portType name="ServiceSoap">
    <wsdl:operation name="GetCommentDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Comment DataSet</wsdl:documentation>
      <wsdl:input message="tns:GetCommentDataSetSoapIn" />
      <wsdl:output message="tns:GetCommentDataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetDealBlotterDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Deal Blotter DataSet</wsdl:documentation>
      <wsdl:input message="tns:GetDealBlotterDataSetSoapIn" />
      <wsdl:output message="tns:GetDealBlotterDataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetDealBlotterDataSetWithFilter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Deal Blotter DataSet with filter</wsdl:documentation>
      <wsdl:input message="tns:GetDealBlotterDataSetWithFilterSoapIn" />
      <wsdl:output message="tns:GetDealBlotterDataSetWithFilterSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetDelayedRatesDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Delayed Rates DataSet</wsdl:documentation>
      <wsdl:input message="tns:GetDelayedRatesDataSetSoapIn" />
      <wsdl:output message="tns:GetDelayedRatesDataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetMarginBlotterDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Margin Blotter DataSet.Returns account specific balance information such as Margin Balance, Account Balance, P/L, and more.</wsdl:documentation>
      <wsdl:input message="tns:GetMarginBlotterDataSetSoapIn" />
      <wsdl:output message="tns:GetMarginBlotterDataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetCustomMarginBlotter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Custom Margin blotter</wsdl:documentation>
      <wsdl:input message="tns:GetCustomMarginBlotterSoapIn" />
      <wsdl:output message="tns:GetCustomMarginBlotterSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetCustomPositionBlotter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Custom Position blotter</wsdl:documentation>
      <wsdl:input message="tns:GetCustomPositionBlotterSoapIn" />
      <wsdl:output message="tns:GetCustomPositionBlotterSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetNewsDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">News DataSet</wsdl:documentation>
      <wsdl:input message="tns:GetNewsDataSetSoapIn" />
      <wsdl:output message="tns:GetNewsDataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="SaveUserProductSubscriptionSettings">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Updates the Subscribed Product List based on the comma separated Pairs  listed in SubscribedPairs String</wsdl:documentation>
      <wsdl:input message="tns:SaveUserProductSubscriptionSettingsSoapIn" />
      <wsdl:output message="tns:SaveUserProductSubscriptionSettingsSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ServiceAuthentication">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns True/False if the Requested Service Tool is enabled/disabled for the user.</wsdl:documentation>
      <wsdl:input message="tns:ServiceAuthenticationSoapIn" />
      <wsdl:output message="tns:ServiceAuthenticationSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetProductSubscriptionRelationshipBlotter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Provides the list of currency pairs with their counter and contract pairs and two flags bSubscibe and bcansubscribe. The Contract and Counter specify what Pairs are related to the CcyPair and are required to be subscribed if cCcyPair is subscribed to. The bSubscribe indicates if the Pair is currently subscribed to or not. The bCanunscribe defines if the specific Pair can be unscribed or not.</wsdl:documentation>
      <wsdl:input message="tns:GetProductSubscriptionRelationshipBlotterSoapIn" />
      <wsdl:output message="tns:GetProductSubscriptionRelationshipBlotterSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetProductSubscriptionRelationshipBlotterDataset">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Provides the list of currency pairs with their counter and contract pairs and two flags bSubscibe and bcansubscribe. The Contract and Counter specify what Pairs are related to the CcyPair and are required to be subscribed if cCcyPair is subscribed to. The bSubscribe indicates if the Pair is currently subscribed to or not. The bCanunscribe defines if the specific Pair can be unscribed or not.</wsdl:documentation>
      <wsdl:input message="tns:GetProductSubscriptionRelationshipBlotterDatasetSoapIn" />
      <wsdl:output message="tns:GetProductSubscriptionRelationshipBlotterDatasetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetOrderBlotterDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Order Blotter DataSet which Returns any open orders in the account.</wsdl:documentation>
      <wsdl:input message="tns:GetOrderBlotterDataSetSoapIn" />
      <wsdl:output message="tns:GetOrderBlotterDataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetPositionBlotterDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Position Blotter DataSet which relates to all the details for any current open positions associated to the account.</wsdl:documentation>
      <wsdl:input message="tns:GetPositionBlotterDataSetSoapIn" />
      <wsdl:output message="tns:GetPositionBlotterDataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetRatesBlotter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns Complete Rate details as in Rates Blotter for all the pairs in string format delimited by \ and $.Message Parameters - PAIR\BID\OFFER\STATUS\HIGH\LOW\DECIMALPLACES\NOTATION\CLOSINGBID\COUNTERPAIR\UPDATEDATETIME$</wsdl:documentation>
      <wsdl:input message="tns:GetRatesBlotterSoapIn" />
      <wsdl:output message="tns:GetRatesBlotterSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetRates">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns Rate details for all the pairs in string format delimited by \ and $</wsdl:documentation>
      <wsdl:input message="tns:GetRatesSoapIn" />
      <wsdl:output message="tns:GetRatesSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetRatesDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Rates Snapshot DataSet.Returns the rates and timestamps for all the currency pairs. The required parameter is a ‘Key’ which can be retrieved from the GetRatesServerAuth function.</wsdl:documentation>
      <wsdl:input message="tns:GetRatesDataSetSoapIn" />
      <wsdl:output message="tns:GetRatesDataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetHistoricRatesDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">DataSet of historic market rates up to 24 hours maximum.. The required parameter is a Key, Quote, StartDateTime, and EndDateTime. ‘Key’ can be retrieved from the GetRatesServerAuth function. Quote is in the form CCY/CCY i.e. GBP/USD.</wsdl:documentation>
      <wsdl:input message="tns:GetHistoricRatesDataSetSoapIn" />
      <wsdl:output message="tns:GetHistoricRatesDataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSymbolBlotterDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Symbol Blotter DataSet. Returns all the possible currency pairs to trade in their respective currency symbols. The parameters are your UserID and password.</wsdl:documentation>
      <wsdl:input message="tns:GetSymbolBlotterDataSetSoapIn" />
      <wsdl:output message="tns:GetSymbolBlotterDataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetTicker">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Ticker</wsdl:documentation>
      <wsdl:input message="tns:GetTickerSoapIn" />
      <wsdl:output message="tns:GetTickerSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetEconomicCalendar">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Economic Calendar</wsdl:documentation>
      <wsdl:input message="tns:GetEconomicCalendarSoapIn" />
      <wsdl:output message="tns:GetEconomicCalendarSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetAccount">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Account parameters</wsdl:documentation>
      <wsdl:input message="tns:GetAccountSoapIn" />
      <wsdl:output message="tns:GetAccountSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetAccountServices">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Account Services</wsdl:documentation>
      <wsdl:input message="tns:GetAccountServicesSoapIn" />
      <wsdl:output message="tns:GetAccountServicesSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetDealBlotter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">User Deal blotter</wsdl:documentation>
      <wsdl:input message="tns:GetDealBlotterSoapIn" />
      <wsdl:output message="tns:GetDealBlotterSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetDealBlotterWithFilter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">User Deal blotter with Filter</wsdl:documentation>
      <wsdl:input message="tns:GetDealBlotterWithFilterSoapIn" />
      <wsdl:output message="tns:GetDealBlotterWithFilterSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetMarginBlotter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">User Margin blotter</wsdl:documentation>
      <wsdl:input message="tns:GetMarginBlotterSoapIn" />
      <wsdl:output message="tns:GetMarginBlotterSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetOrderBlotter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">User Order blotter</wsdl:documentation>
      <wsdl:input message="tns:GetOrderBlotterSoapIn" />
      <wsdl:output message="tns:GetOrderBlotterSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetPositionBlotter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">User Position blotter.Returns the current open positions as displayed in position management. The input, Key, can be retrieved from the GetRatesServerAuth function.</wsdl:documentation>
      <wsdl:input message="tns:GetPositionBlotterSoapIn" />
      <wsdl:output message="tns:GetPositionBlotterSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSymbolBlotter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List of traded symbols</wsdl:documentation>
      <wsdl:input message="tns:GetSymbolBlotterSoapIn" />
      <wsdl:output message="tns:GetSymbolBlotterSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetPairSettings">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Provides Customer Pair Settings</wsdl:documentation>
      <wsdl:input message="tns:GetPairSettingsSoapIn" />
      <wsdl:output message="tns:GetPairSettingsSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="PlaceSingleOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Place single trade order.Allows you to create a simple order to be executed in the future through which a position can be opened. Pair as GBP/USD, Expiry as EOD or GTC, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account, Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:PlaceSingleOrderSoapIn" />
      <wsdl:output message="tns:PlaceSingleOrderSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ModifySingleOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Modify single trade order. This allows you to modify an order which has already been created. OrderReference is a parameter that identifies which particular order is to be modified and can be retrieved from many order functions. The order functions return CustomerOrderReference which corresponds to the OrderReference parameter. Expiry as EOD or GTC, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account, Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:ModifySingleOrderSoapIn" />
      <wsdl:output message="tns:ModifySingleOrderSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="PlaceOCOOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Place OCO trade order.This function enables you to create an order in which one part of the order is cancelled if the other part is executed. Pair as GBP/USD, Expiry2 as EOD or GTC, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account, Order Basis as S or T for Stop loss or LimiT.Pair as GBP/USD, Expiry as EOD or GTC, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account, Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:PlaceOCOOrderSoapIn" />
      <wsdl:output message="tns:PlaceOCOOrderSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ModifyOCOOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Modify OCO trade order. Expiry as EOD or GTC, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account, Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:ModifyOCOOrderSoapIn" />
      <wsdl:output message="tns:ModifyOCOOrderSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="CancelOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Cancel trade order. OrderConfirmation as reference number provided for original order; note: in the case of an OCO, both legs should be cancelled.</wsdl:documentation>
      <wsdl:input message="tns:CancelOrderSoapIn" />
      <wsdl:output message="tns:CancelOrderSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="DealRequest">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Place trade deal request.Here the function is intended to be used when you wish to enter the market at a specified rate. If the specified rate is the current market rate the request is processed else it will get rejected (in other words, a fill or kill scenario). Pair as GBP/USD, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account.</wsdl:documentation>
      <wsdl:input message="tns:DealRequestSoapIn" />
      <wsdl:output message="tns:DealRequestSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="DealRequestByDealId">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This function is like the point and shoot option in position management on the platform. It is used when multiple lots are in exposure for a specified currency pair. You can choose which position you want to trade. This function is not used when only one position is open. A DealID will be requested, which is the ITID returned from the GetDealBlotter function. GetDealBlotter should be called after you enter the position due to the DealBlotter being reset each day at 5 pm EST.Place trade deal request by deal id.DealId as the ID of the deal that you want to close, Pair as GBP/USD, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account.</wsdl:documentation>
      <wsdl:input message="tns:DealRequestByDealIdSoapIn" />
      <wsdl:output message="tns:DealRequestByDealIdSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="DealRequestAtBest">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This function is used to deal at market at the best rate available. The DealRequest function may take longer to enter the market, especially in a fast moving market if the deal is rejected. Place trade deal request with Rate at Best. Pair as GBP/USD, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account.</wsdl:documentation>
      <wsdl:input message="tns:DealRequestAtBestSoapIn" />
      <wsdl:output message="tns:DealRequestAtBestSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="CancelOrderByOrderID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Cancel trade Order. Please provide Order Reference Number for the Reference Number.. Please provide Order Reference Number for the Reference Number. The Order Reference Number can be retrieved from GetOrderBlotterDataSet. All the legs of the Order will be removed. Please provide Order Reference Number for the Reference Number. All the legs of the Order will get removed. </wsdl:documentation>
      <wsdl:input message="tns:CancelOrderByOrderIDSoapIn" />
      <wsdl:output message="tns:CancelOrderByOrderIDSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="CancelOrderByReferenceNumber">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Cancel trade Order. Please provide Order Reference Number for the Reference Number. All the legs of the Order will get removed.</wsdl:documentation>
      <wsdl:input message="tns:CancelOrderByReferenceNumberSoapIn" />
      <wsdl:output message="tns:CancelOrderByReferenceNumberSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="PlaceIfThenOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Place If Then Trade order. The If/Then order is a conditional order providing that if the first order (If order) is executed, the second order (Then order) is activated as a live, single order. In cases where the If order does not execute, the Then single order will remain dormant. When either part of an If / Then order is cancelled, all parts of the order are cancelled as well. Pair as GBP/USD, Expiry as EOD or GTC, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account, Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:PlaceIfThenOrderSoapIn" />
      <wsdl:output message="tns:PlaceIfThenOrderSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ModifyIfThenOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Modify If Then Trade order.Pair as GBP/USD, Expiry as EOD or GTC, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account, Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:ModifyIfThenOrderSoapIn" />
      <wsdl:output message="tns:ModifyIfThenOrderSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="PlaceIfThenOCOOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">If/Then OCO  order is a conditional order providing that if the first order (If order) is executed, the second order (Then order) is activated as a live, One Cancels Other (OCO) order. Full description of an OCO1 order. The execution of either one of the two 'Then' orders automatically cancels the other. In cases where the 'If' single order does not execute, the 'Then' OCO1 order will remain dormant. When any part of an If / Then OCO1 order is cancelled, including either leg of the OCO1 order, all parts of the order are cancelled as well. Place If Then OCO Trade order.Pair as GBP/USD, Expiry as EOD or GTC, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account, Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:PlaceIfThenOCOOrderSoapIn" />
      <wsdl:output message="tns:PlaceIfThenOCOOrderSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ModifyIfThenOCOOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Modify If Then OCO Trade order.Pair as GBP/USD, Expiry as EOD or GTC, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account, Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:ModifyIfThenOCOOrderSoapIn" />
      <wsdl:output message="tns:ModifyIfThenOCOOrderSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="PlaceSingleASSPOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Place Single Associated Position Trade order. Pair as GBP/USD,  Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:PlaceSingleASSPOrderSoapIn" />
      <wsdl:output message="tns:PlaceSingleASSPOrderSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ModifySingleASSPOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Modify Single Associated Position Trade order.This allows you to modify an associated position2 order which has already been created. OrderReference is a parameter to identify which particular order is to be modified. OrderReference can be retrieved when creating the order through the PlaceSingleASSOrder or the PlaceSingleOrder function. CustomerOrderReference, returned from these functions, can be used as the OrderReference. Pair as GBP/USD,  Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:ModifySingleASSPOrderSoapIn" />
      <wsdl:output message="tns:ModifySingleASSPOrderSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="PlaceOCOASSPOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Place OCO Associated Position Trade order. Pair as GBP/USD. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:PlaceOCOASSPOrderSoapIn" />
      <wsdl:output message="tns:PlaceOCOASSPOrderSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ModifyOCOASSPOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Modify OCO Associated Position Trade order. Pair as GBP/USD. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:ModifyOCOASSPOrderSoapIn" />
      <wsdl:output message="tns:ModifyOCOASSPOrderSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="Echo">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns string that you sent as a literal and as a list of ASCII char codes. Use this routine if you wish to test the WebService process or check connectivity.</wsdl:documentation>
      <wsdl:input message="tns:EchoSoapIn" />
      <wsdl:output message="tns:EchoSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetTime">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the server time (UTC), can be used as a connection keep-alive if you so wish.</wsdl:documentation>
      <wsdl:input message="tns:GetTimeSoapIn" />
      <wsdl:output message="tns:GetTimeSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetRatesServerAuth">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This function is primarily to authenticate your account. Returns the 'key' string valid for 24hrs used to authenticate with the Rates Server and the blotter functions. This must be called prior to connecting with the rates server or the blotters each day. Please contact Customer Service with any questions regarding Brand Code.</wsdl:documentation>
      <wsdl:input message="tns:GetRatesServerAuthSoapIn" />
      <wsdl:output message="tns:GetRatesServerAuthSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSubAccountAuthenticationKey">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the Sub Account 'Key' string valid for 24hrs used to authenticate with the Rates Server and the blotter functions. This must be called prior to connecting with the rates server or the blotters each day.</wsdl:documentation>
      <wsdl:input message="tns:GetSubAccountAuthenticationKeySoapIn" />
      <wsdl:output message="tns:GetSubAccountAuthenticationKeySoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetComment">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">GAIN Commentary. Returns top three GAIN Commentry items.</wsdl:documentation>
      <wsdl:input message="tns:GetCommentSoapIn" />
      <wsdl:output message="tns:GetCommentSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetNews">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Market News. Returns top three News items.</wsdl:documentation>
      <wsdl:input message="tns:GetNewsSoapIn" />
      <wsdl:output message="tns:GetNewsSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetAccountObject">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Account parameters. Notes field may be used to describe the client. Use 'GAIN' as the default value for brand.</wsdl:documentation>
      <wsdl:input message="tns:GetAccountObjectSoapIn" />
      <wsdl:output message="tns:GetAccountObjectSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetIGAuthenticationKey">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the Key required to login into the IG Platform.</wsdl:documentation>
      <wsdl:input message="tns:GetIGAuthenticationKeySoapIn" />
      <wsdl:output message="tns:GetIGAuthenticationKeySoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSubAccountCode">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the Sub Account Code using the master account code and the sub account number</wsdl:documentation>
      <wsdl:input message="tns:GetSubAccountCodeSoapIn" />
      <wsdl:output message="tns:GetSubAccountCodeSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSubAccountNumber">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the AccountNumber of the Sub Account using the Customer Code of the Master and the customer code of the Sub Account.</wsdl:documentation>
      <wsdl:input message="tns:GetSubAccountNumberSoapIn" />
      <wsdl:output message="tns:GetSubAccountNumberSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetlTIDByBankConf">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the LTID corresponding to the deal BankConfirmation number passed in, provided the deal is open. If no record is found returns -1</wsdl:documentation>
      <wsdl:input message="tns:GetlTIDByBankConfSoapIn" />
      <wsdl:output message="tns:GetlTIDByBankConfSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="VerifyCredentials">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns True if the credentials are valid and false if Invalid. Please contact Customer Service with any questions regarding Brand Code.</wsdl:documentation>
      <wsdl:input message="tns:VerifyCredentialsSoapIn" />
      <wsdl:output message="tns:VerifyCredentialsSoapOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="ServiceHttpGet">
    <wsdl:operation name="GetCommentDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Comment DataSet</wsdl:documentation>
      <wsdl:input message="tns:GetCommentDataSetHttpGetIn" />
      <wsdl:output message="tns:GetCommentDataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetDealBlotterDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Deal Blotter DataSet</wsdl:documentation>
      <wsdl:input message="tns:GetDealBlotterDataSetHttpGetIn" />
      <wsdl:output message="tns:GetDealBlotterDataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetDealBlotterDataSetWithFilter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Deal Blotter DataSet with filter</wsdl:documentation>
      <wsdl:input message="tns:GetDealBlotterDataSetWithFilterHttpGetIn" />
      <wsdl:output message="tns:GetDealBlotterDataSetWithFilterHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetDelayedRatesDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Delayed Rates DataSet</wsdl:documentation>
      <wsdl:input message="tns:GetDelayedRatesDataSetHttpGetIn" />
      <wsdl:output message="tns:GetDelayedRatesDataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetMarginBlotterDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Margin Blotter DataSet.Returns account specific balance information such as Margin Balance, Account Balance, P/L, and more.</wsdl:documentation>
      <wsdl:input message="tns:GetMarginBlotterDataSetHttpGetIn" />
      <wsdl:output message="tns:GetMarginBlotterDataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetCustomMarginBlotter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Custom Margin blotter</wsdl:documentation>
      <wsdl:input message="tns:GetCustomMarginBlotterHttpGetIn" />
      <wsdl:output message="tns:GetCustomMarginBlotterHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetCustomPositionBlotter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Custom Position blotter</wsdl:documentation>
      <wsdl:input message="tns:GetCustomPositionBlotterHttpGetIn" />
      <wsdl:output message="tns:GetCustomPositionBlotterHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetNewsDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">News DataSet</wsdl:documentation>
      <wsdl:input message="tns:GetNewsDataSetHttpGetIn" />
      <wsdl:output message="tns:GetNewsDataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="SaveUserProductSubscriptionSettings">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Updates the Subscribed Product List based on the comma separated Pairs  listed in SubscribedPairs String</wsdl:documentation>
      <wsdl:input message="tns:SaveUserProductSubscriptionSettingsHttpGetIn" />
      <wsdl:output message="tns:SaveUserProductSubscriptionSettingsHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ServiceAuthentication">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns True/False if the Requested Service Tool is enabled/disabled for the user.</wsdl:documentation>
      <wsdl:input message="tns:ServiceAuthenticationHttpGetIn" />
      <wsdl:output message="tns:ServiceAuthenticationHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetProductSubscriptionRelationshipBlotter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Provides the list of currency pairs with their counter and contract pairs and two flags bSubscibe and bcansubscribe. The Contract and Counter specify what Pairs are related to the CcyPair and are required to be subscribed if cCcyPair is subscribed to. The bSubscribe indicates if the Pair is currently subscribed to or not. The bCanunscribe defines if the specific Pair can be unscribed or not.</wsdl:documentation>
      <wsdl:input message="tns:GetProductSubscriptionRelationshipBlotterHttpGetIn" />
      <wsdl:output message="tns:GetProductSubscriptionRelationshipBlotterHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetProductSubscriptionRelationshipBlotterDataset">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Provides the list of currency pairs with their counter and contract pairs and two flags bSubscibe and bcansubscribe. The Contract and Counter specify what Pairs are related to the CcyPair and are required to be subscribed if cCcyPair is subscribed to. The bSubscribe indicates if the Pair is currently subscribed to or not. The bCanunscribe defines if the specific Pair can be unscribed or not.</wsdl:documentation>
      <wsdl:input message="tns:GetProductSubscriptionRelationshipBlotterDatasetHttpGetIn" />
      <wsdl:output message="tns:GetProductSubscriptionRelationshipBlotterDatasetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetOrderBlotterDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Order Blotter DataSet which Returns any open orders in the account.</wsdl:documentation>
      <wsdl:input message="tns:GetOrderBlotterDataSetHttpGetIn" />
      <wsdl:output message="tns:GetOrderBlotterDataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetPositionBlotterDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Position Blotter DataSet which relates to all the details for any current open positions associated to the account.</wsdl:documentation>
      <wsdl:input message="tns:GetPositionBlotterDataSetHttpGetIn" />
      <wsdl:output message="tns:GetPositionBlotterDataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetRatesBlotter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns Complete Rate details as in Rates Blotter for all the pairs in string format delimited by \ and $.Message Parameters - PAIR\BID\OFFER\STATUS\HIGH\LOW\DECIMALPLACES\NOTATION\CLOSINGBID\COUNTERPAIR\UPDATEDATETIME$</wsdl:documentation>
      <wsdl:input message="tns:GetRatesBlotterHttpGetIn" />
      <wsdl:output message="tns:GetRatesBlotterHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetRates">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns Rate details for all the pairs in string format delimited by \ and $</wsdl:documentation>
      <wsdl:input message="tns:GetRatesHttpGetIn" />
      <wsdl:output message="tns:GetRatesHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetRatesDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Rates Snapshot DataSet.Returns the rates and timestamps for all the currency pairs. The required parameter is a ‘Key’ which can be retrieved from the GetRatesServerAuth function.</wsdl:documentation>
      <wsdl:input message="tns:GetRatesDataSetHttpGetIn" />
      <wsdl:output message="tns:GetRatesDataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetHistoricRatesDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">DataSet of historic market rates up to 24 hours maximum.. The required parameter is a Key, Quote, StartDateTime, and EndDateTime. ‘Key’ can be retrieved from the GetRatesServerAuth function. Quote is in the form CCY/CCY i.e. GBP/USD.</wsdl:documentation>
      <wsdl:input message="tns:GetHistoricRatesDataSetHttpGetIn" />
      <wsdl:output message="tns:GetHistoricRatesDataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSymbolBlotterDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Symbol Blotter DataSet. Returns all the possible currency pairs to trade in their respective currency symbols. The parameters are your UserID and password.</wsdl:documentation>
      <wsdl:input message="tns:GetSymbolBlotterDataSetHttpGetIn" />
      <wsdl:output message="tns:GetSymbolBlotterDataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetTicker">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Ticker</wsdl:documentation>
      <wsdl:input message="tns:GetTickerHttpGetIn" />
      <wsdl:output message="tns:GetTickerHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetEconomicCalendar">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Economic Calendar</wsdl:documentation>
      <wsdl:input message="tns:GetEconomicCalendarHttpGetIn" />
      <wsdl:output message="tns:GetEconomicCalendarHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetAccount">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Account parameters</wsdl:documentation>
      <wsdl:input message="tns:GetAccountHttpGetIn" />
      <wsdl:output message="tns:GetAccountHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetAccountServices">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Account Services</wsdl:documentation>
      <wsdl:input message="tns:GetAccountServicesHttpGetIn" />
      <wsdl:output message="tns:GetAccountServicesHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetDealBlotter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">User Deal blotter</wsdl:documentation>
      <wsdl:input message="tns:GetDealBlotterHttpGetIn" />
      <wsdl:output message="tns:GetDealBlotterHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetDealBlotterWithFilter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">User Deal blotter with Filter</wsdl:documentation>
      <wsdl:input message="tns:GetDealBlotterWithFilterHttpGetIn" />
      <wsdl:output message="tns:GetDealBlotterWithFilterHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetMarginBlotter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">User Margin blotter</wsdl:documentation>
      <wsdl:input message="tns:GetMarginBlotterHttpGetIn" />
      <wsdl:output message="tns:GetMarginBlotterHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetOrderBlotter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">User Order blotter</wsdl:documentation>
      <wsdl:input message="tns:GetOrderBlotterHttpGetIn" />
      <wsdl:output message="tns:GetOrderBlotterHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetPositionBlotter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">User Position blotter.Returns the current open positions as displayed in position management. The input, Key, can be retrieved from the GetRatesServerAuth function.</wsdl:documentation>
      <wsdl:input message="tns:GetPositionBlotterHttpGetIn" />
      <wsdl:output message="tns:GetPositionBlotterHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSymbolBlotter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List of traded symbols</wsdl:documentation>
      <wsdl:input message="tns:GetSymbolBlotterHttpGetIn" />
      <wsdl:output message="tns:GetSymbolBlotterHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetPairSettings">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Provides Customer Pair Settings</wsdl:documentation>
      <wsdl:input message="tns:GetPairSettingsHttpGetIn" />
      <wsdl:output message="tns:GetPairSettingsHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="PlaceSingleOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Place single trade order.Allows you to create a simple order to be executed in the future through which a position can be opened. Pair as GBP/USD, Expiry as EOD or GTC, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account, Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:PlaceSingleOrderHttpGetIn" />
      <wsdl:output message="tns:PlaceSingleOrderHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ModifySingleOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Modify single trade order. This allows you to modify an order which has already been created. OrderReference is a parameter that identifies which particular order is to be modified and can be retrieved from many order functions. The order functions return CustomerOrderReference which corresponds to the OrderReference parameter. Expiry as EOD or GTC, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account, Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:ModifySingleOrderHttpGetIn" />
      <wsdl:output message="tns:ModifySingleOrderHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="PlaceOCOOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Place OCO trade order.This function enables you to create an order in which one part of the order is cancelled if the other part is executed. Pair as GBP/USD, Expiry2 as EOD or GTC, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account, Order Basis as S or T for Stop loss or LimiT.Pair as GBP/USD, Expiry as EOD or GTC, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account, Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:PlaceOCOOrderHttpGetIn" />
      <wsdl:output message="tns:PlaceOCOOrderHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ModifyOCOOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Modify OCO trade order. Expiry as EOD or GTC, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account, Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:ModifyOCOOrderHttpGetIn" />
      <wsdl:output message="tns:ModifyOCOOrderHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="CancelOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Cancel trade order. OrderConfirmation as reference number provided for original order; note: in the case of an OCO, both legs should be cancelled.</wsdl:documentation>
      <wsdl:input message="tns:CancelOrderHttpGetIn" />
      <wsdl:output message="tns:CancelOrderHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="DealRequest">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Place trade deal request.Here the function is intended to be used when you wish to enter the market at a specified rate. If the specified rate is the current market rate the request is processed else it will get rejected (in other words, a fill or kill scenario). Pair as GBP/USD, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account.</wsdl:documentation>
      <wsdl:input message="tns:DealRequestHttpGetIn" />
      <wsdl:output message="tns:DealRequestHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="DealRequestByDealId">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This function is like the point and shoot option in position management on the platform. It is used when multiple lots are in exposure for a specified currency pair. You can choose which position you want to trade. This function is not used when only one position is open. A DealID will be requested, which is the ITID returned from the GetDealBlotter function. GetDealBlotter should be called after you enter the position due to the DealBlotter being reset each day at 5 pm EST.Place trade deal request by deal id.DealId as the ID of the deal that you want to close, Pair as GBP/USD, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account.</wsdl:documentation>
      <wsdl:input message="tns:DealRequestByDealIdHttpGetIn" />
      <wsdl:output message="tns:DealRequestByDealIdHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="DealRequestAtBest">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This function is used to deal at market at the best rate available. The DealRequest function may take longer to enter the market, especially in a fast moving market if the deal is rejected. Place trade deal request with Rate at Best. Pair as GBP/USD, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account.</wsdl:documentation>
      <wsdl:input message="tns:DealRequestAtBestHttpGetIn" />
      <wsdl:output message="tns:DealRequestAtBestHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="CancelOrderByOrderID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Cancel trade Order. Please provide Order Reference Number for the Reference Number.. Please provide Order Reference Number for the Reference Number. The Order Reference Number can be retrieved from GetOrderBlotterDataSet. All the legs of the Order will be removed. Please provide Order Reference Number for the Reference Number. All the legs of the Order will get removed. </wsdl:documentation>
      <wsdl:input message="tns:CancelOrderByOrderIDHttpGetIn" />
      <wsdl:output message="tns:CancelOrderByOrderIDHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="CancelOrderByReferenceNumber">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Cancel trade Order. Please provide Order Reference Number for the Reference Number. All the legs of the Order will get removed.</wsdl:documentation>
      <wsdl:input message="tns:CancelOrderByReferenceNumberHttpGetIn" />
      <wsdl:output message="tns:CancelOrderByReferenceNumberHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="PlaceIfThenOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Place If Then Trade order. The If/Then order is a conditional order providing that if the first order (If order) is executed, the second order (Then order) is activated as a live, single order. In cases where the If order does not execute, the Then single order will remain dormant. When either part of an If / Then order is cancelled, all parts of the order are cancelled as well. Pair as GBP/USD, Expiry as EOD or GTC, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account, Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:PlaceIfThenOrderHttpGetIn" />
      <wsdl:output message="tns:PlaceIfThenOrderHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ModifyIfThenOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Modify If Then Trade order.Pair as GBP/USD, Expiry as EOD or GTC, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account, Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:ModifyIfThenOrderHttpGetIn" />
      <wsdl:output message="tns:ModifyIfThenOrderHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="PlaceIfThenOCOOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">If/Then OCO  order is a conditional order providing that if the first order (If order) is executed, the second order (Then order) is activated as a live, One Cancels Other (OCO) order. Full description of an OCO1 order. The execution of either one of the two 'Then' orders automatically cancels the other. In cases where the 'If' single order does not execute, the 'Then' OCO1 order will remain dormant. When any part of an If / Then OCO1 order is cancelled, including either leg of the OCO1 order, all parts of the order are cancelled as well. Place If Then OCO Trade order.Pair as GBP/USD, Expiry as EOD or GTC, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account, Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:PlaceIfThenOCOOrderHttpGetIn" />
      <wsdl:output message="tns:PlaceIfThenOCOOrderHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ModifyIfThenOCOOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Modify If Then OCO Trade order.Pair as GBP/USD, Expiry as EOD or GTC, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account, Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:ModifyIfThenOCOOrderHttpGetIn" />
      <wsdl:output message="tns:ModifyIfThenOCOOrderHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="PlaceSingleASSPOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Place Single Associated Position Trade order. Pair as GBP/USD,  Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:PlaceSingleASSPOrderHttpGetIn" />
      <wsdl:output message="tns:PlaceSingleASSPOrderHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ModifySingleASSPOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Modify Single Associated Position Trade order.This allows you to modify an associated position2 order which has already been created. OrderReference is a parameter to identify which particular order is to be modified. OrderReference can be retrieved when creating the order through the PlaceSingleASSOrder or the PlaceSingleOrder function. CustomerOrderReference, returned from these functions, can be used as the OrderReference. Pair as GBP/USD,  Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:ModifySingleASSPOrderHttpGetIn" />
      <wsdl:output message="tns:ModifySingleASSPOrderHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="PlaceOCOASSPOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Place OCO Associated Position Trade order. Pair as GBP/USD. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:PlaceOCOASSPOrderHttpGetIn" />
      <wsdl:output message="tns:PlaceOCOASSPOrderHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ModifyOCOASSPOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Modify OCO Associated Position Trade order. Pair as GBP/USD. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:ModifyOCOASSPOrderHttpGetIn" />
      <wsdl:output message="tns:ModifyOCOASSPOrderHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="Echo">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns string that you sent as a literal and as a list of ASCII char codes. Use this routine if you wish to test the WebService process or check connectivity.</wsdl:documentation>
      <wsdl:input message="tns:EchoHttpGetIn" />
      <wsdl:output message="tns:EchoHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetTime">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the server time (UTC), can be used as a connection keep-alive if you so wish.</wsdl:documentation>
      <wsdl:input message="tns:GetTimeHttpGetIn" />
      <wsdl:output message="tns:GetTimeHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetRatesServerAuth">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This function is primarily to authenticate your account. Returns the 'key' string valid for 24hrs used to authenticate with the Rates Server and the blotter functions. This must be called prior to connecting with the rates server or the blotters each day. Please contact Customer Service with any questions regarding Brand Code.</wsdl:documentation>
      <wsdl:input message="tns:GetRatesServerAuthHttpGetIn" />
      <wsdl:output message="tns:GetRatesServerAuthHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSubAccountAuthenticationKey">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the Sub Account 'Key' string valid for 24hrs used to authenticate with the Rates Server and the blotter functions. This must be called prior to connecting with the rates server or the blotters each day.</wsdl:documentation>
      <wsdl:input message="tns:GetSubAccountAuthenticationKeyHttpGetIn" />
      <wsdl:output message="tns:GetSubAccountAuthenticationKeyHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetComment">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">GAIN Commentary. Returns top three GAIN Commentry items.</wsdl:documentation>
      <wsdl:input message="tns:GetCommentHttpGetIn" />
      <wsdl:output message="tns:GetCommentHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetNews">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Market News. Returns top three News items.</wsdl:documentation>
      <wsdl:input message="tns:GetNewsHttpGetIn" />
      <wsdl:output message="tns:GetNewsHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetAccountObject">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Account parameters. Notes field may be used to describe the client. Use 'GAIN' as the default value for brand.</wsdl:documentation>
      <wsdl:input message="tns:GetAccountObjectHttpGetIn" />
      <wsdl:output message="tns:GetAccountObjectHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetIGAuthenticationKey">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the Key required to login into the IG Platform.</wsdl:documentation>
      <wsdl:input message="tns:GetIGAuthenticationKeyHttpGetIn" />
      <wsdl:output message="tns:GetIGAuthenticationKeyHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSubAccountCode">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the Sub Account Code using the master account code and the sub account number</wsdl:documentation>
      <wsdl:input message="tns:GetSubAccountCodeHttpGetIn" />
      <wsdl:output message="tns:GetSubAccountCodeHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSubAccountNumber">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the AccountNumber of the Sub Account using the Customer Code of the Master and the customer code of the Sub Account.</wsdl:documentation>
      <wsdl:input message="tns:GetSubAccountNumberHttpGetIn" />
      <wsdl:output message="tns:GetSubAccountNumberHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetlTIDByBankConf">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the LTID corresponding to the deal BankConfirmation number passed in, provided the deal is open. If no record is found returns -1</wsdl:documentation>
      <wsdl:input message="tns:GetlTIDByBankConfHttpGetIn" />
      <wsdl:output message="tns:GetlTIDByBankConfHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="VerifyCredentials">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns True if the credentials are valid and false if Invalid. Please contact Customer Service with any questions regarding Brand Code.</wsdl:documentation>
      <wsdl:input message="tns:VerifyCredentialsHttpGetIn" />
      <wsdl:output message="tns:VerifyCredentialsHttpGetOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="ServiceHttpPost">
    <wsdl:operation name="GetCommentDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Comment DataSet</wsdl:documentation>
      <wsdl:input message="tns:GetCommentDataSetHttpPostIn" />
      <wsdl:output message="tns:GetCommentDataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetDealBlotterDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Deal Blotter DataSet</wsdl:documentation>
      <wsdl:input message="tns:GetDealBlotterDataSetHttpPostIn" />
      <wsdl:output message="tns:GetDealBlotterDataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetDealBlotterDataSetWithFilter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Deal Blotter DataSet with filter</wsdl:documentation>
      <wsdl:input message="tns:GetDealBlotterDataSetWithFilterHttpPostIn" />
      <wsdl:output message="tns:GetDealBlotterDataSetWithFilterHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetDelayedRatesDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Delayed Rates DataSet</wsdl:documentation>
      <wsdl:input message="tns:GetDelayedRatesDataSetHttpPostIn" />
      <wsdl:output message="tns:GetDelayedRatesDataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetMarginBlotterDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Margin Blotter DataSet.Returns account specific balance information such as Margin Balance, Account Balance, P/L, and more.</wsdl:documentation>
      <wsdl:input message="tns:GetMarginBlotterDataSetHttpPostIn" />
      <wsdl:output message="tns:GetMarginBlotterDataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetCustomMarginBlotter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Custom Margin blotter</wsdl:documentation>
      <wsdl:input message="tns:GetCustomMarginBlotterHttpPostIn" />
      <wsdl:output message="tns:GetCustomMarginBlotterHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetCustomPositionBlotter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Custom Position blotter</wsdl:documentation>
      <wsdl:input message="tns:GetCustomPositionBlotterHttpPostIn" />
      <wsdl:output message="tns:GetCustomPositionBlotterHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetNewsDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">News DataSet</wsdl:documentation>
      <wsdl:input message="tns:GetNewsDataSetHttpPostIn" />
      <wsdl:output message="tns:GetNewsDataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="SaveUserProductSubscriptionSettings">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Updates the Subscribed Product List based on the comma separated Pairs  listed in SubscribedPairs String</wsdl:documentation>
      <wsdl:input message="tns:SaveUserProductSubscriptionSettingsHttpPostIn" />
      <wsdl:output message="tns:SaveUserProductSubscriptionSettingsHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ServiceAuthentication">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns True/False if the Requested Service Tool is enabled/disabled for the user.</wsdl:documentation>
      <wsdl:input message="tns:ServiceAuthenticationHttpPostIn" />
      <wsdl:output message="tns:ServiceAuthenticationHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetProductSubscriptionRelationshipBlotter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Provides the list of currency pairs with their counter and contract pairs and two flags bSubscibe and bcansubscribe. The Contract and Counter specify what Pairs are related to the CcyPair and are required to be subscribed if cCcyPair is subscribed to. The bSubscribe indicates if the Pair is currently subscribed to or not. The bCanunscribe defines if the specific Pair can be unscribed or not.</wsdl:documentation>
      <wsdl:input message="tns:GetProductSubscriptionRelationshipBlotterHttpPostIn" />
      <wsdl:output message="tns:GetProductSubscriptionRelationshipBlotterHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetProductSubscriptionRelationshipBlotterDataset">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Provides the list of currency pairs with their counter and contract pairs and two flags bSubscibe and bcansubscribe. The Contract and Counter specify what Pairs are related to the CcyPair and are required to be subscribed if cCcyPair is subscribed to. The bSubscribe indicates if the Pair is currently subscribed to or not. The bCanunscribe defines if the specific Pair can be unscribed or not.</wsdl:documentation>
      <wsdl:input message="tns:GetProductSubscriptionRelationshipBlotterDatasetHttpPostIn" />
      <wsdl:output message="tns:GetProductSubscriptionRelationshipBlotterDatasetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetOrderBlotterDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Order Blotter DataSet which Returns any open orders in the account.</wsdl:documentation>
      <wsdl:input message="tns:GetOrderBlotterDataSetHttpPostIn" />
      <wsdl:output message="tns:GetOrderBlotterDataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetPositionBlotterDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Position Blotter DataSet which relates to all the details for any current open positions associated to the account.</wsdl:documentation>
      <wsdl:input message="tns:GetPositionBlotterDataSetHttpPostIn" />
      <wsdl:output message="tns:GetPositionBlotterDataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetRatesBlotter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns Complete Rate details as in Rates Blotter for all the pairs in string format delimited by \ and $.Message Parameters - PAIR\BID\OFFER\STATUS\HIGH\LOW\DECIMALPLACES\NOTATION\CLOSINGBID\COUNTERPAIR\UPDATEDATETIME$</wsdl:documentation>
      <wsdl:input message="tns:GetRatesBlotterHttpPostIn" />
      <wsdl:output message="tns:GetRatesBlotterHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetRates">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns Rate details for all the pairs in string format delimited by \ and $</wsdl:documentation>
      <wsdl:input message="tns:GetRatesHttpPostIn" />
      <wsdl:output message="tns:GetRatesHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetRatesDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Rates Snapshot DataSet.Returns the rates and timestamps for all the currency pairs. The required parameter is a ‘Key’ which can be retrieved from the GetRatesServerAuth function.</wsdl:documentation>
      <wsdl:input message="tns:GetRatesDataSetHttpPostIn" />
      <wsdl:output message="tns:GetRatesDataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetHistoricRatesDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">DataSet of historic market rates up to 24 hours maximum.. The required parameter is a Key, Quote, StartDateTime, and EndDateTime. ‘Key’ can be retrieved from the GetRatesServerAuth function. Quote is in the form CCY/CCY i.e. GBP/USD.</wsdl:documentation>
      <wsdl:input message="tns:GetHistoricRatesDataSetHttpPostIn" />
      <wsdl:output message="tns:GetHistoricRatesDataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSymbolBlotterDataSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Symbol Blotter DataSet. Returns all the possible currency pairs to trade in their respective currency symbols. The parameters are your UserID and password.</wsdl:documentation>
      <wsdl:input message="tns:GetSymbolBlotterDataSetHttpPostIn" />
      <wsdl:output message="tns:GetSymbolBlotterDataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetTicker">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Ticker</wsdl:documentation>
      <wsdl:input message="tns:GetTickerHttpPostIn" />
      <wsdl:output message="tns:GetTickerHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetEconomicCalendar">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Economic Calendar</wsdl:documentation>
      <wsdl:input message="tns:GetEconomicCalendarHttpPostIn" />
      <wsdl:output message="tns:GetEconomicCalendarHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetAccount">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Account parameters</wsdl:documentation>
      <wsdl:input message="tns:GetAccountHttpPostIn" />
      <wsdl:output message="tns:GetAccountHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetAccountServices">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Account Services</wsdl:documentation>
      <wsdl:input message="tns:GetAccountServicesHttpPostIn" />
      <wsdl:output message="tns:GetAccountServicesHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetDealBlotter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">User Deal blotter</wsdl:documentation>
      <wsdl:input message="tns:GetDealBlotterHttpPostIn" />
      <wsdl:output message="tns:GetDealBlotterHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetDealBlotterWithFilter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">User Deal blotter with Filter</wsdl:documentation>
      <wsdl:input message="tns:GetDealBlotterWithFilterHttpPostIn" />
      <wsdl:output message="tns:GetDealBlotterWithFilterHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetMarginBlotter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">User Margin blotter</wsdl:documentation>
      <wsdl:input message="tns:GetMarginBlotterHttpPostIn" />
      <wsdl:output message="tns:GetMarginBlotterHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetOrderBlotter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">User Order blotter</wsdl:documentation>
      <wsdl:input message="tns:GetOrderBlotterHttpPostIn" />
      <wsdl:output message="tns:GetOrderBlotterHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetPositionBlotter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">User Position blotter.Returns the current open positions as displayed in position management. The input, Key, can be retrieved from the GetRatesServerAuth function.</wsdl:documentation>
      <wsdl:input message="tns:GetPositionBlotterHttpPostIn" />
      <wsdl:output message="tns:GetPositionBlotterHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSymbolBlotter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">List of traded symbols</wsdl:documentation>
      <wsdl:input message="tns:GetSymbolBlotterHttpPostIn" />
      <wsdl:output message="tns:GetSymbolBlotterHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetPairSettings">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Provides Customer Pair Settings</wsdl:documentation>
      <wsdl:input message="tns:GetPairSettingsHttpPostIn" />
      <wsdl:output message="tns:GetPairSettingsHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="PlaceSingleOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Place single trade order.Allows you to create a simple order to be executed in the future through which a position can be opened. Pair as GBP/USD, Expiry as EOD or GTC, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account, Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:PlaceSingleOrderHttpPostIn" />
      <wsdl:output message="tns:PlaceSingleOrderHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ModifySingleOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Modify single trade order. This allows you to modify an order which has already been created. OrderReference is a parameter that identifies which particular order is to be modified and can be retrieved from many order functions. The order functions return CustomerOrderReference which corresponds to the OrderReference parameter. Expiry as EOD or GTC, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account, Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:ModifySingleOrderHttpPostIn" />
      <wsdl:output message="tns:ModifySingleOrderHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="PlaceOCOOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Place OCO trade order.This function enables you to create an order in which one part of the order is cancelled if the other part is executed. Pair as GBP/USD, Expiry2 as EOD or GTC, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account, Order Basis as S or T for Stop loss or LimiT.Pair as GBP/USD, Expiry as EOD or GTC, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account, Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:PlaceOCOOrderHttpPostIn" />
      <wsdl:output message="tns:PlaceOCOOrderHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ModifyOCOOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Modify OCO trade order. Expiry as EOD or GTC, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account, Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:ModifyOCOOrderHttpPostIn" />
      <wsdl:output message="tns:ModifyOCOOrderHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="CancelOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Cancel trade order. OrderConfirmation as reference number provided for original order; note: in the case of an OCO, both legs should be cancelled.</wsdl:documentation>
      <wsdl:input message="tns:CancelOrderHttpPostIn" />
      <wsdl:output message="tns:CancelOrderHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="DealRequest">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Place trade deal request.Here the function is intended to be used when you wish to enter the market at a specified rate. If the specified rate is the current market rate the request is processed else it will get rejected (in other words, a fill or kill scenario). Pair as GBP/USD, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account.</wsdl:documentation>
      <wsdl:input message="tns:DealRequestHttpPostIn" />
      <wsdl:output message="tns:DealRequestHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="DealRequestByDealId">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This function is like the point and shoot option in position management on the platform. It is used when multiple lots are in exposure for a specified currency pair. You can choose which position you want to trade. This function is not used when only one position is open. A DealID will be requested, which is the ITID returned from the GetDealBlotter function. GetDealBlotter should be called after you enter the position due to the DealBlotter being reset each day at 5 pm EST.Place trade deal request by deal id.DealId as the ID of the deal that you want to close, Pair as GBP/USD, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account.</wsdl:documentation>
      <wsdl:input message="tns:DealRequestByDealIdHttpPostIn" />
      <wsdl:output message="tns:DealRequestByDealIdHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="DealRequestAtBest">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This function is used to deal at market at the best rate available. The DealRequest function may take longer to enter the market, especially in a fast moving market if the deal is rejected. Place trade deal request with Rate at Best. Pair as GBP/USD, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account.</wsdl:documentation>
      <wsdl:input message="tns:DealRequestAtBestHttpPostIn" />
      <wsdl:output message="tns:DealRequestAtBestHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="CancelOrderByOrderID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Cancel trade Order. Please provide Order Reference Number for the Reference Number.. Please provide Order Reference Number for the Reference Number. The Order Reference Number can be retrieved from GetOrderBlotterDataSet. All the legs of the Order will be removed. Please provide Order Reference Number for the Reference Number. All the legs of the Order will get removed. </wsdl:documentation>
      <wsdl:input message="tns:CancelOrderByOrderIDHttpPostIn" />
      <wsdl:output message="tns:CancelOrderByOrderIDHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="CancelOrderByReferenceNumber">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Cancel trade Order. Please provide Order Reference Number for the Reference Number. All the legs of the Order will get removed.</wsdl:documentation>
      <wsdl:input message="tns:CancelOrderByReferenceNumberHttpPostIn" />
      <wsdl:output message="tns:CancelOrderByReferenceNumberHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="PlaceIfThenOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Place If Then Trade order. The If/Then order is a conditional order providing that if the first order (If order) is executed, the second order (Then order) is activated as a live, single order. In cases where the If order does not execute, the Then single order will remain dormant. When either part of an If / Then order is cancelled, all parts of the order are cancelled as well. Pair as GBP/USD, Expiry as EOD or GTC, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account, Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:PlaceIfThenOrderHttpPostIn" />
      <wsdl:output message="tns:PlaceIfThenOrderHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ModifyIfThenOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Modify If Then Trade order.Pair as GBP/USD, Expiry as EOD or GTC, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account, Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:ModifyIfThenOrderHttpPostIn" />
      <wsdl:output message="tns:ModifyIfThenOrderHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="PlaceIfThenOCOOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">If/Then OCO  order is a conditional order providing that if the first order (If order) is executed, the second order (Then order) is activated as a live, One Cancels Other (OCO) order. Full description of an OCO1 order. The execution of either one of the two 'Then' orders automatically cancels the other. In cases where the 'If' single order does not execute, the 'Then' OCO1 order will remain dormant. When any part of an If / Then OCO1 order is cancelled, including either leg of the OCO1 order, all parts of the order are cancelled as well. Place If Then OCO Trade order.Pair as GBP/USD, Expiry as EOD or GTC, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account, Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:PlaceIfThenOCOOrderHttpPostIn" />
      <wsdl:output message="tns:PlaceIfThenOCOOrderHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ModifyIfThenOCOOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Modify If Then OCO Trade order.Pair as GBP/USD, Expiry as EOD or GTC, BuySell as B or S, Amount as multiple of 10,000 or 100,000 depending upon account, Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:ModifyIfThenOCOOrderHttpPostIn" />
      <wsdl:output message="tns:ModifyIfThenOCOOrderHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="PlaceSingleASSPOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Place Single Associated Position Trade order. Pair as GBP/USD,  Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:PlaceSingleASSPOrderHttpPostIn" />
      <wsdl:output message="tns:PlaceSingleASSPOrderHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ModifySingleASSPOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Modify Single Associated Position Trade order.This allows you to modify an associated position2 order which has already been created. OrderReference is a parameter to identify which particular order is to be modified. OrderReference can be retrieved when creating the order through the PlaceSingleASSOrder or the PlaceSingleOrder function. CustomerOrderReference, returned from these functions, can be used as the OrderReference. Pair as GBP/USD,  Order Basis as S or T for Stop loss or LimiT. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:ModifySingleASSPOrderHttpPostIn" />
      <wsdl:output message="tns:ModifySingleASSPOrderHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="PlaceOCOASSPOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Place OCO Associated Position Trade order. Pair as GBP/USD. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:PlaceOCOASSPOrderHttpPostIn" />
      <wsdl:output message="tns:PlaceOCOASSPOrderHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ModifyOCOASSPOrder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Modify OCO Associated Position Trade order. Pair as GBP/USD. Warning: Trade Order can take up to 60 seconds to be placed into the order process. Use DealRequest for immediate execution.</wsdl:documentation>
      <wsdl:input message="tns:ModifyOCOASSPOrderHttpPostIn" />
      <wsdl:output message="tns:ModifyOCOASSPOrderHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="Echo">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns string that you sent as a literal and as a list of ASCII char codes. Use this routine if you wish to test the WebService process or check connectivity.</wsdl:documentation>
      <wsdl:input message="tns:EchoHttpPostIn" />
      <wsdl:output message="tns:EchoHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetTime">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the server time (UTC), can be used as a connection keep-alive if you so wish.</wsdl:documentation>
      <wsdl:input message="tns:GetTimeHttpPostIn" />
      <wsdl:output message="tns:GetTimeHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetRatesServerAuth">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This function is primarily to authenticate your account. Returns the 'key' string valid for 24hrs used to authenticate with the Rates Server and the blotter functions. This must be called prior to connecting with the rates server or the blotters each day. Please contact Customer Service with any questions regarding Brand Code.</wsdl:documentation>
      <wsdl:input message="tns:GetRatesServerAuthHttpPostIn" />
      <wsdl:output message="tns:GetRatesServerAuthHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSubAccountAuthenticationKey">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the Sub Account 'Key' string valid for 24hrs used to authenticate with the Rates Server and the blotter functions. This must be called prior to connecting with the rates server or the blotters each day.</wsdl:documentation>
      <wsdl:input message="tns:GetSubAccountAuthenticationKeyHttpPostIn" />
      <wsdl:output message="tns:GetSubAccountAuthenticationKeyHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetComment">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">GAIN Commentary. Returns top three GAIN Commentry items.</wsdl:documentation>
      <wsdl:input message="tns:GetCommentHttpPostIn" />
      <wsdl:output message="tns:GetCommentHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetNews">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Market News. Returns top three News items.</wsdl:documentation>
      <wsdl:input message="tns:GetNewsHttpPostIn" />
      <wsdl:output message="tns:GetNewsHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetAccountObject">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Account parameters. Notes field may be used to describe the client. Use 'GAIN' as the default value for brand.</wsdl:documentation>
      <wsdl:input message="tns:GetAccountObjectHttpPostIn" />
      <wsdl:output message="tns:GetAccountObjectHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetIGAuthenticationKey">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the Key required to login into the IG Platform.</wsdl:documentation>
      <wsdl:input message="tns:GetIGAuthenticationKeyHttpPostIn" />
      <wsdl:output message="tns:GetIGAuthenticationKeyHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSubAccountCode">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the Sub Account Code using the master account code and the sub account number</wsdl:documentation>
      <wsdl:input message="tns:GetSubAccountCodeHttpPostIn" />
      <wsdl:output message="tns:GetSubAccountCodeHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSubAccountNumber">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the AccountNumber of the Sub Account using the Customer Code of the Master and the customer code of the Sub Account.</wsdl:documentation>
      <wsdl:input message="tns:GetSubAccountNumberHttpPostIn" />
      <wsdl:output message="tns:GetSubAccountNumberHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetlTIDByBankConf">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the LTID corresponding to the deal BankConfirmation number passed in, provided the deal is open. If no record is found returns -1</wsdl:documentation>
      <wsdl:input message="tns:GetlTIDByBankConfHttpPostIn" />
      <wsdl:output message="tns:GetlTIDByBankConfHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="VerifyCredentials">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns True if the credentials are valid and false if Invalid. Please contact Customer Service with any questions regarding Brand Code.</wsdl:documentation>
      <wsdl:input message="tns:VerifyCredentialsHttpPostIn" />
      <wsdl:output message="tns:VerifyCredentialsHttpPostOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ServiceSoap" type="tns:ServiceSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="GetCommentDataSet">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetCommentDataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDealBlotterDataSet">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetDealBlotterDataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDealBlotterDataSetWithFilter">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetDealBlotterDataSetWithFilter" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDelayedRatesDataSet">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetDelayedRatesDataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetMarginBlotterDataSet">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetMarginBlotterDataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCustomMarginBlotter">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetCustomMarginBlotter" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCustomPositionBlotter">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetCustomPositionBlotter" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetNewsDataSet">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetNewsDataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SaveUserProductSubscriptionSettings">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/SaveUserProductSubscriptionSettings" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ServiceAuthentication">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/ServiceAuthentication" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetProductSubscriptionRelationshipBlotter">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetProductSubscriptionRelationshipBlotter" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetProductSubscriptionRelationshipBlotterDataset">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetProductSubscriptionRelationshipBlotterDataset" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetOrderBlotterDataSet">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetOrderBlotterDataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPositionBlotterDataSet">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetPositionBlotterDataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRatesBlotter">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetRatesBlotter" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRates">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetRates" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRatesDataSet">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetRatesDataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetHistoricRatesDataSet">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetHistoricRatesDataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSymbolBlotterDataSet">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetSymbolBlotterDataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTicker">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetTicker" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEconomicCalendar">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetEconomicCalendar" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAccount">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetAccount" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAccountServices">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetAccountServices" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDealBlotter">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetDealBlotter" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDealBlotterWithFilter">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetDealBlotterWithFilter" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetMarginBlotter">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetMarginBlotter" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetOrderBlotter">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetOrderBlotter" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPositionBlotter">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetPositionBlotter" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSymbolBlotter">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetSymbolBlotter" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPairSettings">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetPairSettings" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PlaceSingleOrder">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/PlaceSingleOrder" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
        <soap:header message="tns:PlaceSingleOrderAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifySingleOrder">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/ModifySingleOrder" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
        <soap:header message="tns:ModifySingleOrderAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PlaceOCOOrder">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/PlaceOCOOrder" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
        <soap:header message="tns:PlaceOCOOrderAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifyOCOOrder">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/ModifyOCOOrder" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
        <soap:header message="tns:ModifyOCOOrderAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CancelOrder">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/CancelOrder" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
        <soap:header message="tns:CancelOrderAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DealRequest">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/DealRequest" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
        <soap:header message="tns:DealRequestAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DealRequestByDealId">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/DealRequestByDealId" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
        <soap:header message="tns:DealRequestByDealIdAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DealRequestAtBest">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/DealRequestAtBest" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
        <soap:header message="tns:DealRequestAtBestAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CancelOrderByOrderID">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/CancelOrderByOrderID" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
        <soap:header message="tns:CancelOrderByOrderIDAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CancelOrderByReferenceNumber">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/CancelOrderByReferenceNumber" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
        <soap:header message="tns:CancelOrderByReferenceNumberAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PlaceIfThenOrder">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/PlaceIfThenOrder" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
        <soap:header message="tns:PlaceIfThenOrderAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifyIfThenOrder">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/ModifyIfThenOrder" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
        <soap:header message="tns:ModifyIfThenOrderAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PlaceIfThenOCOOrder">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/PlaceIfThenOCOOrder" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
        <soap:header message="tns:PlaceIfThenOCOOrderAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifyIfThenOCOOrder">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/ModifyIfThenOCOOrder" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
        <soap:header message="tns:ModifyIfThenOCOOrderAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PlaceSingleASSPOrder">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/PlaceSingleASSPOrder" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
        <soap:header message="tns:PlaceSingleASSPOrderAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifySingleASSPOrder">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/ModifySingleASSPOrder" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
        <soap:header message="tns:ModifySingleASSPOrderAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PlaceOCOASSPOrder">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/PlaceOCOASSPOrder" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
        <soap:header message="tns:PlaceOCOASSPOrderAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifyOCOASSPOrder">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/ModifyOCOASSPOrder" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
        <soap:header message="tns:ModifyOCOASSPOrderAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Echo">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/Echo" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTime">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetTime" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRatesServerAuth">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetRatesServerAuth" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubAccountAuthenticationKey">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetSubAccountAuthenticationKey" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetComment">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetComment" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetNews">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetNews" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAccountObject">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetAccountObject" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetIGAuthenticationKey">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetIGAuthenticationKey" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubAccountCode">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetSubAccountCode" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubAccountNumber">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetSubAccountNumber" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetlTIDByBankConf">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/GetlTIDByBankConf" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="VerifyCredentials">
      <soap:operation soapAction="https://api.efxnow.com/webservices2.3/VerifyCredentials" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ServiceSoap12" type="tns:ServiceSoap">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="GetCommentDataSet">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetCommentDataSet" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDealBlotterDataSet">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetDealBlotterDataSet" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDealBlotterDataSetWithFilter">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetDealBlotterDataSetWithFilter" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDelayedRatesDataSet">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetDelayedRatesDataSet" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetMarginBlotterDataSet">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetMarginBlotterDataSet" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCustomMarginBlotter">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetCustomMarginBlotter" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCustomPositionBlotter">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetCustomPositionBlotter" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetNewsDataSet">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetNewsDataSet" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SaveUserProductSubscriptionSettings">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/SaveUserProductSubscriptionSettings" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ServiceAuthentication">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/ServiceAuthentication" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetProductSubscriptionRelationshipBlotter">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetProductSubscriptionRelationshipBlotter" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetProductSubscriptionRelationshipBlotterDataset">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetProductSubscriptionRelationshipBlotterDataset" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetOrderBlotterDataSet">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetOrderBlotterDataSet" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPositionBlotterDataSet">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetPositionBlotterDataSet" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRatesBlotter">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetRatesBlotter" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRates">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetRates" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRatesDataSet">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetRatesDataSet" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetHistoricRatesDataSet">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetHistoricRatesDataSet" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSymbolBlotterDataSet">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetSymbolBlotterDataSet" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTicker">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetTicker" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEconomicCalendar">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetEconomicCalendar" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAccount">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetAccount" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAccountServices">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetAccountServices" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDealBlotter">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetDealBlotter" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDealBlotterWithFilter">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetDealBlotterWithFilter" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetMarginBlotter">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetMarginBlotter" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetOrderBlotter">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetOrderBlotter" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPositionBlotter">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetPositionBlotter" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSymbolBlotter">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetSymbolBlotter" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPairSettings">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetPairSettings" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PlaceSingleOrder">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/PlaceSingleOrder" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
        <soap12:header message="tns:PlaceSingleOrderAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifySingleOrder">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/ModifySingleOrder" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
        <soap12:header message="tns:ModifySingleOrderAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PlaceOCOOrder">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/PlaceOCOOrder" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
        <soap12:header message="tns:PlaceOCOOrderAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifyOCOOrder">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/ModifyOCOOrder" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
        <soap12:header message="tns:ModifyOCOOrderAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CancelOrder">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/CancelOrder" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
        <soap12:header message="tns:CancelOrderAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DealRequest">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/DealRequest" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
        <soap12:header message="tns:DealRequestAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DealRequestByDealId">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/DealRequestByDealId" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
        <soap12:header message="tns:DealRequestByDealIdAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DealRequestAtBest">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/DealRequestAtBest" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
        <soap12:header message="tns:DealRequestAtBestAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CancelOrderByOrderID">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/CancelOrderByOrderID" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
        <soap12:header message="tns:CancelOrderByOrderIDAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CancelOrderByReferenceNumber">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/CancelOrderByReferenceNumber" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
        <soap12:header message="tns:CancelOrderByReferenceNumberAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PlaceIfThenOrder">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/PlaceIfThenOrder" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
        <soap12:header message="tns:PlaceIfThenOrderAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifyIfThenOrder">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/ModifyIfThenOrder" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
        <soap12:header message="tns:ModifyIfThenOrderAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PlaceIfThenOCOOrder">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/PlaceIfThenOCOOrder" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
        <soap12:header message="tns:PlaceIfThenOCOOrderAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifyIfThenOCOOrder">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/ModifyIfThenOCOOrder" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
        <soap12:header message="tns:ModifyIfThenOCOOrderAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PlaceSingleASSPOrder">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/PlaceSingleASSPOrder" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
        <soap12:header message="tns:PlaceSingleASSPOrderAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifySingleASSPOrder">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/ModifySingleASSPOrder" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
        <soap12:header message="tns:ModifySingleASSPOrderAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PlaceOCOASSPOrder">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/PlaceOCOASSPOrder" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
        <soap12:header message="tns:PlaceOCOASSPOrderAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifyOCOASSPOrder">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/ModifyOCOASSPOrder" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
        <soap12:header message="tns:ModifyOCOASSPOrderAuthenticator" part="Authenticator" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Echo">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/Echo" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTime">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetTime" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRatesServerAuth">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetRatesServerAuth" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubAccountAuthenticationKey">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetSubAccountAuthenticationKey" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetComment">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetComment" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetNews">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetNews" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAccountObject">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetAccountObject" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetIGAuthenticationKey">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetIGAuthenticationKey" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubAccountCode">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetSubAccountCode" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubAccountNumber">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetSubAccountNumber" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetlTIDByBankConf">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/GetlTIDByBankConf" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="VerifyCredentials">
      <soap12:operation soapAction="https://api.efxnow.com/webservices2.3/VerifyCredentials" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ServiceHttpGet" type="tns:ServiceHttpGet">
    <http:binding verb="GET" />
    <wsdl:operation name="GetCommentDataSet">
      <http:operation location="/GetCommentDataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDealBlotterDataSet">
      <http:operation location="/GetDealBlotterDataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDealBlotterDataSetWithFilter">
      <http:operation location="/GetDealBlotterDataSetWithFilter" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDelayedRatesDataSet">
      <http:operation location="/GetDelayedRatesDataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetMarginBlotterDataSet">
      <http:operation location="/GetMarginBlotterDataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCustomMarginBlotter">
      <http:operation location="/GetCustomMarginBlotter" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCustomPositionBlotter">
      <http:operation location="/GetCustomPositionBlotter" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetNewsDataSet">
      <http:operation location="/GetNewsDataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SaveUserProductSubscriptionSettings">
      <http:operation location="/SaveUserProductSubscriptionSettings" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ServiceAuthentication">
      <http:operation location="/ServiceAuthentication" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetProductSubscriptionRelationshipBlotter">
      <http:operation location="/GetProductSubscriptionRelationshipBlotter" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetProductSubscriptionRelationshipBlotterDataset">
      <http:operation location="/GetProductSubscriptionRelationshipBlotterDataset" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetOrderBlotterDataSet">
      <http:operation location="/GetOrderBlotterDataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPositionBlotterDataSet">
      <http:operation location="/GetPositionBlotterDataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRatesBlotter">
      <http:operation location="/GetRatesBlotter" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRates">
      <http:operation location="/GetRates" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRatesDataSet">
      <http:operation location="/GetRatesDataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetHistoricRatesDataSet">
      <http:operation location="/GetHistoricRatesDataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSymbolBlotterDataSet">
      <http:operation location="/GetSymbolBlotterDataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTicker">
      <http:operation location="/GetTicker" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEconomicCalendar">
      <http:operation location="/GetEconomicCalendar" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAccount">
      <http:operation location="/GetAccount" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAccountServices">
      <http:operation location="/GetAccountServices" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDealBlotter">
      <http:operation location="/GetDealBlotter" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDealBlotterWithFilter">
      <http:operation location="/GetDealBlotterWithFilter" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetMarginBlotter">
      <http:operation location="/GetMarginBlotter" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetOrderBlotter">
      <http:operation location="/GetOrderBlotter" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPositionBlotter">
      <http:operation location="/GetPositionBlotter" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSymbolBlotter">
      <http:operation location="/GetSymbolBlotter" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPairSettings">
      <http:operation location="/GetPairSettings" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PlaceSingleOrder">
      <http:operation location="/PlaceSingleOrder" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifySingleOrder">
      <http:operation location="/ModifySingleOrder" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PlaceOCOOrder">
      <http:operation location="/PlaceOCOOrder" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifyOCOOrder">
      <http:operation location="/ModifyOCOOrder" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CancelOrder">
      <http:operation location="/CancelOrder" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DealRequest">
      <http:operation location="/DealRequest" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DealRequestByDealId">
      <http:operation location="/DealRequestByDealId" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DealRequestAtBest">
      <http:operation location="/DealRequestAtBest" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CancelOrderByOrderID">
      <http:operation location="/CancelOrderByOrderID" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CancelOrderByReferenceNumber">
      <http:operation location="/CancelOrderByReferenceNumber" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PlaceIfThenOrder">
      <http:operation location="/PlaceIfThenOrder" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifyIfThenOrder">
      <http:operation location="/ModifyIfThenOrder" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PlaceIfThenOCOOrder">
      <http:operation location="/PlaceIfThenOCOOrder" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifyIfThenOCOOrder">
      <http:operation location="/ModifyIfThenOCOOrder" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PlaceSingleASSPOrder">
      <http:operation location="/PlaceSingleASSPOrder" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifySingleASSPOrder">
      <http:operation location="/ModifySingleASSPOrder" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PlaceOCOASSPOrder">
      <http:operation location="/PlaceOCOASSPOrder" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifyOCOASSPOrder">
      <http:operation location="/ModifyOCOASSPOrder" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Echo">
      <http:operation location="/Echo" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTime">
      <http:operation location="/GetTime" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRatesServerAuth">
      <http:operation location="/GetRatesServerAuth" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubAccountAuthenticationKey">
      <http:operation location="/GetSubAccountAuthenticationKey" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetComment">
      <http:operation location="/GetComment" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetNews">
      <http:operation location="/GetNews" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAccountObject">
      <http:operation location="/GetAccountObject" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetIGAuthenticationKey">
      <http:operation location="/GetIGAuthenticationKey" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubAccountCode">
      <http:operation location="/GetSubAccountCode" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubAccountNumber">
      <http:operation location="/GetSubAccountNumber" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetlTIDByBankConf">
      <http:operation location="/GetlTIDByBankConf" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="VerifyCredentials">
      <http:operation location="/VerifyCredentials" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ServiceHttpPost" type="tns:ServiceHttpPost">
    <http:binding verb="POST" />
    <wsdl:operation name="GetCommentDataSet">
      <http:operation location="/GetCommentDataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDealBlotterDataSet">
      <http:operation location="/GetDealBlotterDataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDealBlotterDataSetWithFilter">
      <http:operation location="/GetDealBlotterDataSetWithFilter" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDelayedRatesDataSet">
      <http:operation location="/GetDelayedRatesDataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetMarginBlotterDataSet">
      <http:operation location="/GetMarginBlotterDataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCustomMarginBlotter">
      <http:operation location="/GetCustomMarginBlotter" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCustomPositionBlotter">
      <http:operation location="/GetCustomPositionBlotter" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetNewsDataSet">
      <http:operation location="/GetNewsDataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SaveUserProductSubscriptionSettings">
      <http:operation location="/SaveUserProductSubscriptionSettings" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ServiceAuthentication">
      <http:operation location="/ServiceAuthentication" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetProductSubscriptionRelationshipBlotter">
      <http:operation location="/GetProductSubscriptionRelationshipBlotter" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetProductSubscriptionRelationshipBlotterDataset">
      <http:operation location="/GetProductSubscriptionRelationshipBlotterDataset" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetOrderBlotterDataSet">
      <http:operation location="/GetOrderBlotterDataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPositionBlotterDataSet">
      <http:operation location="/GetPositionBlotterDataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRatesBlotter">
      <http:operation location="/GetRatesBlotter" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRates">
      <http:operation location="/GetRates" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRatesDataSet">
      <http:operation location="/GetRatesDataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetHistoricRatesDataSet">
      <http:operation location="/GetHistoricRatesDataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSymbolBlotterDataSet">
      <http:operation location="/GetSymbolBlotterDataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTicker">
      <http:operation location="/GetTicker" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetEconomicCalendar">
      <http:operation location="/GetEconomicCalendar" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAccount">
      <http:operation location="/GetAccount" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAccountServices">
      <http:operation location="/GetAccountServices" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDealBlotter">
      <http:operation location="/GetDealBlotter" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDealBlotterWithFilter">
      <http:operation location="/GetDealBlotterWithFilter" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetMarginBlotter">
      <http:operation location="/GetMarginBlotter" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetOrderBlotter">
      <http:operation location="/GetOrderBlotter" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPositionBlotter">
      <http:operation location="/GetPositionBlotter" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSymbolBlotter">
      <http:operation location="/GetSymbolBlotter" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPairSettings">
      <http:operation location="/GetPairSettings" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PlaceSingleOrder">
      <http:operation location="/PlaceSingleOrder" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifySingleOrder">
      <http:operation location="/ModifySingleOrder" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PlaceOCOOrder">
      <http:operation location="/PlaceOCOOrder" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifyOCOOrder">
      <http:operation location="/ModifyOCOOrder" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CancelOrder">
      <http:operation location="/CancelOrder" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DealRequest">
      <http:operation location="/DealRequest" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DealRequestByDealId">
      <http:operation location="/DealRequestByDealId" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DealRequestAtBest">
      <http:operation location="/DealRequestAtBest" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CancelOrderByOrderID">
      <http:operation location="/CancelOrderByOrderID" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CancelOrderByReferenceNumber">
      <http:operation location="/CancelOrderByReferenceNumber" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PlaceIfThenOrder">
      <http:operation location="/PlaceIfThenOrder" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifyIfThenOrder">
      <http:operation location="/ModifyIfThenOrder" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PlaceIfThenOCOOrder">
      <http:operation location="/PlaceIfThenOCOOrder" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifyIfThenOCOOrder">
      <http:operation location="/ModifyIfThenOCOOrder" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PlaceSingleASSPOrder">
      <http:operation location="/PlaceSingleASSPOrder" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifySingleASSPOrder">
      <http:operation location="/ModifySingleASSPOrder" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="PlaceOCOASSPOrder">
      <http:operation location="/PlaceOCOASSPOrder" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ModifyOCOASSPOrder">
      <http:operation location="/ModifyOCOASSPOrder" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Echo">
      <http:operation location="/Echo" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTime">
      <http:operation location="/GetTime" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRatesServerAuth">
      <http:operation location="/GetRatesServerAuth" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubAccountAuthenticationKey">
      <http:operation location="/GetSubAccountAuthenticationKey" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetComment">
      <http:operation location="/GetComment" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetNews">
      <http:operation location="/GetNews" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAccountObject">
      <http:operation location="/GetAccountObject" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetIGAuthenticationKey">
      <http:operation location="/GetIGAuthenticationKey" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubAccountCode">
      <http:operation location="/GetSubAccountCode" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubAccountNumber">
      <http:operation location="/GetSubAccountNumber" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetlTIDByBankConf">
      <http:operation location="/GetlTIDByBankConf" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="VerifyCredentials">
      <http:operation location="/VerifyCredentials" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="Service">
    <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Core Web services offered by GAIN Capital. These services are offered to customers of GAIN Capital for the purposes of carrying out business with GAIN Capital. All data supplied remains copyright GAIN Capital inc and may not be reproduced without the prior written permission of GAIN Capital inc. USAGE: The web functions have been developed with Microsoft .NET WebServices. Best results can be found when used with Visual Studio.NET. For further information, see http://api.efxnow.com/Docs</wsdl:documentation>
    <wsdl:port name="ServiceSoap" binding="tns:ServiceSoap">
      <soap:address location="http://api.efxnow.com/demowebservices2.8/service.asmx" />
    </wsdl:port>
    <wsdl:port name="ServiceSoap12" binding="tns:ServiceSoap12">
      <soap12:address location="http://api.efxnow.com/demowebservices2.8/service.asmx" />
    </wsdl:port>
    <wsdl:port name="ServiceHttpGet" binding="tns:ServiceHttpGet">
      <http:address location="http://api.efxnow.com/demowebservices2.8/service.asmx" />
    </wsdl:port>
    <wsdl:port name="ServiceHttpPost" binding="tns:ServiceHttpPost">
      <http:address location="http://api.efxnow.com/demowebservices2.8/service.asmx" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>