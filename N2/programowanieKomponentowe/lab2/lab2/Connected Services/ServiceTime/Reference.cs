//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace lab2.ServiceTime {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="https://api.efxnow.com/webservices2.3", ConfigurationName="ServiceTime.ServiceSoap")]
    public interface ServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetCommentDataSet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCommentDataSet();
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetCommentDataSet", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCommentDataSetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetDealBlotterDataSet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDealBlotterDataSet(string UserID, string PWD);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetDealBlotterDataSet", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetDealBlotterDataSetAsync(string UserID, string PWD);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetDealBlotterDataSetWithFilter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDealBlotterDataSetWithFilter(string UserID, string PWD, string Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetDealBlotterDataSetWithFilter", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetDealBlotterDataSetWithFilterAsync(string UserID, string PWD, string Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetDelayedRatesDataSet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDelayedRatesDataSet();
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetDelayedRatesDataSet", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetDelayedRatesDataSetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetMarginBlotterDataSet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMarginBlotterDataSet(string UserID, string PWD);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetMarginBlotterDataSet", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMarginBlotterDataSetAsync(string UserID, string PWD);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetCustomMarginBlotter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomMarginBlotter(string Key);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetCustomMarginBlotter", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCustomMarginBlotterAsync(string Key);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetCustomPositionBlotter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomPositionBlotter(string Key);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetCustomPositionBlotter", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCustomPositionBlotterAsync(string Key);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetNewsDataSet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetNewsDataSet();
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetNewsDataSet", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetNewsDataSetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/SaveUserProductSubscriptionSettings", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        lab2.ServiceTime.objProductSubscriptionResponse SaveUserProductSubscriptionSettings(string UserId, string PWD, string Brand, string ProductList);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/SaveUserProductSubscriptionSettings", ReplyAction="*")]
        System.Threading.Tasks.Task<lab2.ServiceTime.objProductSubscriptionResponse> SaveUserProductSubscriptionSettingsAsync(string UserId, string PWD, string Brand, string ProductList);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/ServiceAuthentication", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ServiceAuthentication(string UserID, string Password, string Brand, string ServiceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/ServiceAuthentication", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ServiceAuthenticationAsync(string UserID, string Password, string Brand, string ServiceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetProductSubscriptionRelationshipBlotter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetProductSubscriptionRelationshipBlotter(string UserId, string PWD, string Brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetProductSubscriptionRelationshipBlotter", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetProductSubscriptionRelationshipBlotterAsync(string UserId, string PWD, string Brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetProductSubscriptionRelationshipBlotterDa" +
            "taset", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetProductSubscriptionRelationshipBlotterDataset(string UserId, string PWD, string Brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetProductSubscriptionRelationshipBlotterDa" +
            "taset", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetProductSubscriptionRelationshipBlotterDatasetAsync(string UserId, string PWD, string Brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetOrderBlotterDataSet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetOrderBlotterDataSet(string UserID, string PWD);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetOrderBlotterDataSet", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetOrderBlotterDataSetAsync(string UserID, string PWD);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetPositionBlotterDataSet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPositionBlotterDataSet(string UserID, string PWD);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetPositionBlotterDataSet", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetPositionBlotterDataSetAsync(string UserID, string PWD);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetRatesBlotter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetRatesBlotter(string Key);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetRatesBlotter", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetRatesBlotterAsync(string Key);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetRates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetRates(string Key);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetRates", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetRatesAsync(string Key);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetRatesDataSet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetRatesDataSet(string Key);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetRatesDataSet", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetRatesDataSetAsync(string Key);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetHistoricRatesDataSet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetHistoricRatesDataSet(string Key, string Quote, string StartDateTime, string EndDateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetHistoricRatesDataSet", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetHistoricRatesDataSetAsync(string Key, string Quote, string StartDateTime, string EndDateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetSymbolBlotterDataSet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSymbolBlotterDataSet(string UserID, string PWD);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetSymbolBlotterDataSet", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSymbolBlotterDataSetAsync(string UserID, string PWD);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetTicker", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetTicker(string UserId, string PWD, string Brand, string Accounttype, string Lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetTicker", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetTickerAsync(string UserId, string PWD, string Brand, string Accounttype, string Lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetEconomicCalendar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetEconomicCalendar(string UserId, string PWD, string Brand, string Lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetEconomicCalendar", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetEconomicCalendarAsync(string UserId, string PWD, string Brand, string Lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAccount(string UserID, string PWD, string Brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAccountAsync(string UserID, string PWD, string Brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetAccountServices", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAccountServices(string UserID, string PWD, string Brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetAccountServices", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAccountServicesAsync(string UserID, string PWD, string Brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetDealBlotter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetDealBlotter(string Key);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetDealBlotter", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetDealBlotterAsync(string Key);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetDealBlotterWithFilter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetDealBlotterWithFilter(string Key, string Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetDealBlotterWithFilter", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetDealBlotterWithFilterAsync(string Key, string Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetMarginBlotter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetMarginBlotter(string Key);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetMarginBlotter", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetMarginBlotterAsync(string Key);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetOrderBlotter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetOrderBlotter(string Key);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetOrderBlotter", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetOrderBlotterAsync(string Key);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetPositionBlotter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPositionBlotter(string Key);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetPositionBlotter", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetPositionBlotterAsync(string Key);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetSymbolBlotter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSymbolBlotter(string Key);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetSymbolBlotter", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetSymbolBlotterAsync(string Key);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetPairSettings", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPairSettings(string UserId, string PWD, string Brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetPairSettings", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetPairSettingsAsync(string UserId, string PWD, string Brand);
        
        // CODEGEN: Trwa generowanie kontraktu komunikatu, ponieważ komunikat PlaceSingleOrderRequest zawiera nagłówki.
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/PlaceSingleOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        lab2.ServiceTime.PlaceSingleOrderResponse PlaceSingleOrder(lab2.ServiceTime.PlaceSingleOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/PlaceSingleOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<lab2.ServiceTime.PlaceSingleOrderResponse> PlaceSingleOrderAsync(lab2.ServiceTime.PlaceSingleOrderRequest request);
        
        // CODEGEN: Trwa generowanie kontraktu komunikatu, ponieważ komunikat ModifySingleOrderRequest zawiera nagłówki.
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/ModifySingleOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        lab2.ServiceTime.ModifySingleOrderResponse ModifySingleOrder(lab2.ServiceTime.ModifySingleOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/ModifySingleOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<lab2.ServiceTime.ModifySingleOrderResponse> ModifySingleOrderAsync(lab2.ServiceTime.ModifySingleOrderRequest request);
        
        // CODEGEN: Trwa generowanie kontraktu komunikatu, ponieważ komunikat PlaceOCOOrderRequest zawiera nagłówki.
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/PlaceOCOOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        lab2.ServiceTime.PlaceOCOOrderResponse PlaceOCOOrder(lab2.ServiceTime.PlaceOCOOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/PlaceOCOOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<lab2.ServiceTime.PlaceOCOOrderResponse> PlaceOCOOrderAsync(lab2.ServiceTime.PlaceOCOOrderRequest request);
        
        // CODEGEN: Trwa generowanie kontraktu komunikatu, ponieważ komunikat ModifyOCOOrderRequest zawiera nagłówki.
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/ModifyOCOOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        lab2.ServiceTime.ModifyOCOOrderResponse ModifyOCOOrder(lab2.ServiceTime.ModifyOCOOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/ModifyOCOOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<lab2.ServiceTime.ModifyOCOOrderResponse> ModifyOCOOrderAsync(lab2.ServiceTime.ModifyOCOOrderRequest request);
        
        // CODEGEN: Trwa generowanie kontraktu komunikatu, ponieważ komunikat CancelOrderRequest zawiera nagłówki.
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/CancelOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        lab2.ServiceTime.CancelOrderResponse CancelOrder(lab2.ServiceTime.CancelOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/CancelOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<lab2.ServiceTime.CancelOrderResponse> CancelOrderAsync(lab2.ServiceTime.CancelOrderRequest request);
        
        // CODEGEN: Trwa generowanie kontraktu komunikatu, ponieważ komunikat DealRequestRequest zawiera nagłówki.
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/DealRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        lab2.ServiceTime.DealRequestResponse DealRequest(lab2.ServiceTime.DealRequestRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/DealRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<lab2.ServiceTime.DealRequestResponse> DealRequestAsync(lab2.ServiceTime.DealRequestRequest request);
        
        // CODEGEN: Trwa generowanie kontraktu komunikatu, ponieważ komunikat DealRequestByDealIdRequest zawiera nagłówki.
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/DealRequestByDealId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        lab2.ServiceTime.DealRequestByDealIdResponse DealRequestByDealId(lab2.ServiceTime.DealRequestByDealIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/DealRequestByDealId", ReplyAction="*")]
        System.Threading.Tasks.Task<lab2.ServiceTime.DealRequestByDealIdResponse> DealRequestByDealIdAsync(lab2.ServiceTime.DealRequestByDealIdRequest request);
        
        // CODEGEN: Trwa generowanie kontraktu komunikatu, ponieważ komunikat DealRequestAtBestRequest zawiera nagłówki.
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/DealRequestAtBest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        lab2.ServiceTime.DealRequestAtBestResponse DealRequestAtBest(lab2.ServiceTime.DealRequestAtBestRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/DealRequestAtBest", ReplyAction="*")]
        System.Threading.Tasks.Task<lab2.ServiceTime.DealRequestAtBestResponse> DealRequestAtBestAsync(lab2.ServiceTime.DealRequestAtBestRequest request);
        
        // CODEGEN: Trwa generowanie kontraktu komunikatu, ponieważ komunikat CancelOrderByOrderIDRequest zawiera nagłówki.
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/CancelOrderByOrderID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        lab2.ServiceTime.CancelOrderByOrderIDResponse CancelOrderByOrderID(lab2.ServiceTime.CancelOrderByOrderIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/CancelOrderByOrderID", ReplyAction="*")]
        System.Threading.Tasks.Task<lab2.ServiceTime.CancelOrderByOrderIDResponse> CancelOrderByOrderIDAsync(lab2.ServiceTime.CancelOrderByOrderIDRequest request);
        
        // CODEGEN: Trwa generowanie kontraktu komunikatu, ponieważ komunikat CancelOrderByReferenceNumberRequest zawiera nagłówki.
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/CancelOrderByReferenceNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        lab2.ServiceTime.CancelOrderByReferenceNumberResponse CancelOrderByReferenceNumber(lab2.ServiceTime.CancelOrderByReferenceNumberRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/CancelOrderByReferenceNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<lab2.ServiceTime.CancelOrderByReferenceNumberResponse> CancelOrderByReferenceNumberAsync(lab2.ServiceTime.CancelOrderByReferenceNumberRequest request);
        
        // CODEGEN: Trwa generowanie kontraktu komunikatu, ponieważ komunikat PlaceIfThenOrderRequest zawiera nagłówki.
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/PlaceIfThenOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        lab2.ServiceTime.PlaceIfThenOrderResponse PlaceIfThenOrder(lab2.ServiceTime.PlaceIfThenOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/PlaceIfThenOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<lab2.ServiceTime.PlaceIfThenOrderResponse> PlaceIfThenOrderAsync(lab2.ServiceTime.PlaceIfThenOrderRequest request);
        
        // CODEGEN: Trwa generowanie kontraktu komunikatu, ponieważ komunikat ModifyIfThenOrderRequest zawiera nagłówki.
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/ModifyIfThenOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        lab2.ServiceTime.ModifyIfThenOrderResponse ModifyIfThenOrder(lab2.ServiceTime.ModifyIfThenOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/ModifyIfThenOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<lab2.ServiceTime.ModifyIfThenOrderResponse> ModifyIfThenOrderAsync(lab2.ServiceTime.ModifyIfThenOrderRequest request);
        
        // CODEGEN: Trwa generowanie kontraktu komunikatu, ponieważ komunikat PlaceIfThenOCOOrderRequest zawiera nagłówki.
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/PlaceIfThenOCOOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        lab2.ServiceTime.PlaceIfThenOCOOrderResponse PlaceIfThenOCOOrder(lab2.ServiceTime.PlaceIfThenOCOOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/PlaceIfThenOCOOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<lab2.ServiceTime.PlaceIfThenOCOOrderResponse> PlaceIfThenOCOOrderAsync(lab2.ServiceTime.PlaceIfThenOCOOrderRequest request);
        
        // CODEGEN: Trwa generowanie kontraktu komunikatu, ponieważ komunikat ModifyIfThenOCOOrderRequest zawiera nagłówki.
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/ModifyIfThenOCOOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        lab2.ServiceTime.ModifyIfThenOCOOrderResponse ModifyIfThenOCOOrder(lab2.ServiceTime.ModifyIfThenOCOOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/ModifyIfThenOCOOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<lab2.ServiceTime.ModifyIfThenOCOOrderResponse> ModifyIfThenOCOOrderAsync(lab2.ServiceTime.ModifyIfThenOCOOrderRequest request);
        
        // CODEGEN: Trwa generowanie kontraktu komunikatu, ponieważ komunikat PlaceSingleASSPOrderRequest zawiera nagłówki.
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/PlaceSingleASSPOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        lab2.ServiceTime.PlaceSingleASSPOrderResponse PlaceSingleASSPOrder(lab2.ServiceTime.PlaceSingleASSPOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/PlaceSingleASSPOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<lab2.ServiceTime.PlaceSingleASSPOrderResponse> PlaceSingleASSPOrderAsync(lab2.ServiceTime.PlaceSingleASSPOrderRequest request);
        
        // CODEGEN: Trwa generowanie kontraktu komunikatu, ponieważ komunikat ModifySingleASSPOrderRequest zawiera nagłówki.
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/ModifySingleASSPOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        lab2.ServiceTime.ModifySingleASSPOrderResponse ModifySingleASSPOrder(lab2.ServiceTime.ModifySingleASSPOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/ModifySingleASSPOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<lab2.ServiceTime.ModifySingleASSPOrderResponse> ModifySingleASSPOrderAsync(lab2.ServiceTime.ModifySingleASSPOrderRequest request);
        
        // CODEGEN: Trwa generowanie kontraktu komunikatu, ponieważ komunikat PlaceOCOASSPOrderRequest zawiera nagłówki.
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/PlaceOCOASSPOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        lab2.ServiceTime.PlaceOCOASSPOrderResponse PlaceOCOASSPOrder(lab2.ServiceTime.PlaceOCOASSPOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/PlaceOCOASSPOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<lab2.ServiceTime.PlaceOCOASSPOrderResponse> PlaceOCOASSPOrderAsync(lab2.ServiceTime.PlaceOCOASSPOrderRequest request);
        
        // CODEGEN: Trwa generowanie kontraktu komunikatu, ponieważ komunikat ModifyOCOASSPOrderRequest zawiera nagłówki.
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/ModifyOCOASSPOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        lab2.ServiceTime.ModifyOCOASSPOrderResponse ModifyOCOASSPOrder(lab2.ServiceTime.ModifyOCOASSPOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/ModifyOCOASSPOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<lab2.ServiceTime.ModifyOCOASSPOrderResponse> ModifyOCOASSPOrderAsync(lab2.ServiceTime.ModifyOCOASSPOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/Echo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Echo(string Message);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/Echo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> EchoAsync(string Message);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetTime", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetTimeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetRatesServerAuth", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetRatesServerAuth(string UserID, string PWD, string Brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetRatesServerAuth", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetRatesServerAuthAsync(string UserID, string PWD, string Brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetSubAccountAuthenticationKey", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSubAccountAuthenticationKey(string MasterAccountKey, string SubAccountCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetSubAccountAuthenticationKey", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetSubAccountAuthenticationKeyAsync(string MasterAccountKey, string SubAccountCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetComment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        lab2.ServiceTime.objMarketText GetComment();
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetComment", ReplyAction="*")]
        System.Threading.Tasks.Task<lab2.ServiceTime.objMarketText> GetCommentAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetNews", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        lab2.ServiceTime.objMarketText GetNews();
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetNews", ReplyAction="*")]
        System.Threading.Tasks.Task<lab2.ServiceTime.objMarketText> GetNewsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetAccountObject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        lab2.ServiceTime.objAccount GetAccountObject(string UserID, string PWD, string Brand, string Notes);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetAccountObject", ReplyAction="*")]
        System.Threading.Tasks.Task<lab2.ServiceTime.objAccount> GetAccountObjectAsync(string UserID, string PWD, string Brand, string Notes);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetIGAuthenticationKey", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetIGAuthenticationKey(string UserID, string PWD, string Brand, string Language);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetIGAuthenticationKey", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetIGAuthenticationKeyAsync(string UserID, string PWD, string Brand, string Language);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetSubAccountCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSubAccountCode(string MasterAccountCode, string SubAccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetSubAccountCode", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetSubAccountCodeAsync(string MasterAccountCode, string SubAccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetSubAccountNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSubAccountNumber(string MasterAccountCode, string SubAccountCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetSubAccountNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetSubAccountNumberAsync(string MasterAccountCode, string SubAccountCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetlTIDByBankConf", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetlTIDByBankConf(string BankConfirmation);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/GetlTIDByBankConf", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetlTIDByBankConfAsync(string BankConfirmation);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/VerifyCredentials", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool VerifyCredentials(string UserID, string PWD, string Brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://api.efxnow.com/webservices2.3/VerifyCredentials", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> VerifyCredentialsAsync(string UserID, string PWD, string Brand);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
    public partial class objProductSubscriptionResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        private string errorNoField;
        
        private bool successField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorNo {
            get {
                return this.errorNoField;
            }
            set {
                this.errorNoField = value;
                this.RaisePropertyChanged("ErrorNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
                this.RaisePropertyChanged("Success");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
    public partial class objAccount : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool successField;
        
        private string errorDescriptionField;
        
        private string custCodeField;
        
        private string gUIDField;
        
        private int featuresField;
        
        private string baseCCYField;
        
        private long lastOrderSeqField;
        
        private long lastDealSeqField;
        
        private int orderLotSizeField;
        
        private double maxOrderPipsField;
        
        private double cancelOrderPipsField;
        
        private int tradeLotSizeField;
        
        private int maxTradeLotsField;
        
        private int tierCountField;
        
        private int tier1MinLotsField;
        
        private int tier1MaxLotsField;
        
        private int tier1PipDifferenceField;
        
        private int tier2MinLotsField;
        
        private int tier2MaxLotsField;
        
        private int tier2PipDifferenceField;
        
        private int tier3MinLotsField;
        
        private int tier3MaxLotsField;
        
        private int tier3PipDifferenceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
                this.RaisePropertyChanged("Success");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorDescription {
            get {
                return this.errorDescriptionField;
            }
            set {
                this.errorDescriptionField = value;
                this.RaisePropertyChanged("ErrorDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string CustCode {
            get {
                return this.custCodeField;
            }
            set {
                this.custCodeField = value;
                this.RaisePropertyChanged("CustCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string GUID {
            get {
                return this.gUIDField;
            }
            set {
                this.gUIDField = value;
                this.RaisePropertyChanged("GUID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int Features {
            get {
                return this.featuresField;
            }
            set {
                this.featuresField = value;
                this.RaisePropertyChanged("Features");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string BaseCCY {
            get {
                return this.baseCCYField;
            }
            set {
                this.baseCCYField = value;
                this.RaisePropertyChanged("BaseCCY");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public long LastOrderSeq {
            get {
                return this.lastOrderSeqField;
            }
            set {
                this.lastOrderSeqField = value;
                this.RaisePropertyChanged("LastOrderSeq");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public long LastDealSeq {
            get {
                return this.lastDealSeqField;
            }
            set {
                this.lastDealSeqField = value;
                this.RaisePropertyChanged("LastDealSeq");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public int OrderLotSize {
            get {
                return this.orderLotSizeField;
            }
            set {
                this.orderLotSizeField = value;
                this.RaisePropertyChanged("OrderLotSize");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public double MaxOrderPips {
            get {
                return this.maxOrderPipsField;
            }
            set {
                this.maxOrderPipsField = value;
                this.RaisePropertyChanged("MaxOrderPips");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public double CancelOrderPips {
            get {
                return this.cancelOrderPipsField;
            }
            set {
                this.cancelOrderPipsField = value;
                this.RaisePropertyChanged("CancelOrderPips");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public int TradeLotSize {
            get {
                return this.tradeLotSizeField;
            }
            set {
                this.tradeLotSizeField = value;
                this.RaisePropertyChanged("TradeLotSize");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public int MaxTradeLots {
            get {
                return this.maxTradeLotsField;
            }
            set {
                this.maxTradeLotsField = value;
                this.RaisePropertyChanged("MaxTradeLots");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public int TierCount {
            get {
                return this.tierCountField;
            }
            set {
                this.tierCountField = value;
                this.RaisePropertyChanged("TierCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public int Tier1MinLots {
            get {
                return this.tier1MinLotsField;
            }
            set {
                this.tier1MinLotsField = value;
                this.RaisePropertyChanged("Tier1MinLots");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public int Tier1MaxLots {
            get {
                return this.tier1MaxLotsField;
            }
            set {
                this.tier1MaxLotsField = value;
                this.RaisePropertyChanged("Tier1MaxLots");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public int Tier1PipDifference {
            get {
                return this.tier1PipDifferenceField;
            }
            set {
                this.tier1PipDifferenceField = value;
                this.RaisePropertyChanged("Tier1PipDifference");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public int Tier2MinLots {
            get {
                return this.tier2MinLotsField;
            }
            set {
                this.tier2MinLotsField = value;
                this.RaisePropertyChanged("Tier2MinLots");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public int Tier2MaxLots {
            get {
                return this.tier2MaxLotsField;
            }
            set {
                this.tier2MaxLotsField = value;
                this.RaisePropertyChanged("Tier2MaxLots");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public int Tier2PipDifference {
            get {
                return this.tier2PipDifferenceField;
            }
            set {
                this.tier2PipDifferenceField = value;
                this.RaisePropertyChanged("Tier2PipDifference");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public int Tier3MinLots {
            get {
                return this.tier3MinLotsField;
            }
            set {
                this.tier3MinLotsField = value;
                this.RaisePropertyChanged("Tier3MinLots");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public int Tier3MaxLots {
            get {
                return this.tier3MaxLotsField;
            }
            set {
                this.tier3MaxLotsField = value;
                this.RaisePropertyChanged("Tier3MaxLots");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        public int Tier3PipDifference {
            get {
                return this.tier3PipDifferenceField;
            }
            set {
                this.tier3PipDifferenceField = value;
                this.RaisePropertyChanged("Tier3PipDifference");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
    public partial class objMarketText : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool successField;
        
        private string errorDescriptionField;
        
        private string item0Field;
        
        private string item1Field;
        
        private string item2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
                this.RaisePropertyChanged("Success");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorDescription {
            get {
                return this.errorDescriptionField;
            }
            set {
                this.errorDescriptionField = value;
                this.RaisePropertyChanged("ErrorDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Item0 {
            get {
                return this.item0Field;
            }
            set {
                this.item0Field = value;
                this.RaisePropertyChanged("Item0");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Item1 {
            get {
                return this.item1Field;
            }
            set {
                this.item1Field = value;
                this.RaisePropertyChanged("Item1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Item2 {
            get {
                return this.item2Field;
            }
            set {
                this.item2Field = value;
                this.RaisePropertyChanged("Item2");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
    public partial class objDealResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool successField;
        
        private string errorDescriptionField;
        
        private int errorNumberField;
        
        private string confirmationField;
        
        private string confirmationNumberField;
        
        private double rateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
                this.RaisePropertyChanged("Success");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorDescription {
            get {
                return this.errorDescriptionField;
            }
            set {
                this.errorDescriptionField = value;
                this.RaisePropertyChanged("ErrorDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int ErrorNumber {
            get {
                return this.errorNumberField;
            }
            set {
                this.errorNumberField = value;
                this.RaisePropertyChanged("ErrorNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Confirmation {
            get {
                return this.confirmationField;
            }
            set {
                this.confirmationField = value;
                this.RaisePropertyChanged("Confirmation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string ConfirmationNumber {
            get {
                return this.confirmationNumberField;
            }
            set {
                this.confirmationNumberField = value;
                this.RaisePropertyChanged("ConfirmationNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public double Rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
                this.RaisePropertyChanged("Rate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
    public partial class Authenticator : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string applicationNameField;
        
        private string iPAddressField;
        
        private string userIDField;
        
        private string machineNameField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ApplicationName {
            get {
                return this.applicationNameField;
            }
            set {
                this.applicationNameField = value;
                this.RaisePropertyChanged("ApplicationName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
                this.RaisePropertyChanged("IPAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
                this.RaisePropertyChanged("UserID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string MachineName {
            get {
                return this.machineNameField;
            }
            set {
                this.machineNameField = value;
                this.RaisePropertyChanged("MachineName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
    public partial class objPlaceOrderResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool successField;
        
        private string errorDescriptionField;
        
        private int errorNumberField;
        
        private long customerOrderReferenceField;
        
        private string orderConfirmationField;
        
        private string customerDealRefField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
                this.RaisePropertyChanged("Success");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorDescription {
            get {
                return this.errorDescriptionField;
            }
            set {
                this.errorDescriptionField = value;
                this.RaisePropertyChanged("ErrorDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int ErrorNumber {
            get {
                return this.errorNumberField;
            }
            set {
                this.errorNumberField = value;
                this.RaisePropertyChanged("ErrorNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long CustomerOrderReference {
            get {
                return this.customerOrderReferenceField;
            }
            set {
                this.customerOrderReferenceField = value;
                this.RaisePropertyChanged("CustomerOrderReference");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string OrderConfirmation {
            get {
                return this.orderConfirmationField;
            }
            set {
                this.orderConfirmationField = value;
                this.RaisePropertyChanged("OrderConfirmation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string CustomerDealRef {
            get {
                return this.customerDealRefField;
            }
            set {
                this.customerDealRefField = value;
                this.RaisePropertyChanged("CustomerDealRef");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PlaceSingleOrder", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class PlaceSingleOrderRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
        public lab2.ServiceTime.Authenticator Authenticator;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public string UserID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=1)]
        public string PWD;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=2)]
        public string Pair;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=3)]
        public string Expiry;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=4)]
        public string BuySell;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=5)]
        public string Amount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=6)]
        public string Rate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=7)]
        public string OrderBasis;
        
        public PlaceSingleOrderRequest() {
        }
        
        public PlaceSingleOrderRequest(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string Pair, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis) {
            this.Authenticator = Authenticator;
            this.UserID = UserID;
            this.PWD = PWD;
            this.Pair = Pair;
            this.Expiry = Expiry;
            this.BuySell = BuySell;
            this.Amount = Amount;
            this.Rate = Rate;
            this.OrderBasis = OrderBasis;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PlaceSingleOrderResponse", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class PlaceSingleOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public lab2.ServiceTime.objPlaceOrderResponse PlaceSingleOrderResult;
        
        public PlaceSingleOrderResponse() {
        }
        
        public PlaceSingleOrderResponse(lab2.ServiceTime.objPlaceOrderResponse PlaceSingleOrderResult) {
            this.PlaceSingleOrderResult = PlaceSingleOrderResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ModifySingleOrder", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class ModifySingleOrderRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
        public lab2.ServiceTime.Authenticator Authenticator;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public string UserID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=1)]
        public string PWD;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=2)]
        public string OrderReference;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=3)]
        public string Expiry;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=4)]
        public string BuySell;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=5)]
        public string Amount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=6)]
        public string Rate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=7)]
        public string OrderBasis;
        
        public ModifySingleOrderRequest() {
        }
        
        public ModifySingleOrderRequest(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string OrderReference, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis) {
            this.Authenticator = Authenticator;
            this.UserID = UserID;
            this.PWD = PWD;
            this.OrderReference = OrderReference;
            this.Expiry = Expiry;
            this.BuySell = BuySell;
            this.Amount = Amount;
            this.Rate = Rate;
            this.OrderBasis = OrderBasis;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ModifySingleOrderResponse", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class ModifySingleOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public lab2.ServiceTime.objPlaceOrderResponse ModifySingleOrderResult;
        
        public ModifySingleOrderResponse() {
        }
        
        public ModifySingleOrderResponse(lab2.ServiceTime.objPlaceOrderResponse ModifySingleOrderResult) {
            this.ModifySingleOrderResult = ModifySingleOrderResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PlaceOCOOrder", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class PlaceOCOOrderRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
        public lab2.ServiceTime.Authenticator Authenticator;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public string UserID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=1)]
        public string PWD;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=2)]
        public string Pair;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=3)]
        public string Expiry;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=4)]
        public string BuySell;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=5)]
        public string Amount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=6)]
        public string Rate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=7)]
        public string OrderBasis;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=8)]
        public string BuySell1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=9)]
        public string Amount1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=10)]
        public string Rate1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=11)]
        public string OrderBasis1;
        
        public PlaceOCOOrderRequest() {
        }
        
        public PlaceOCOOrderRequest(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string Pair, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis, string BuySell1, string Amount1, string Rate1, string OrderBasis1) {
            this.Authenticator = Authenticator;
            this.UserID = UserID;
            this.PWD = PWD;
            this.Pair = Pair;
            this.Expiry = Expiry;
            this.BuySell = BuySell;
            this.Amount = Amount;
            this.Rate = Rate;
            this.OrderBasis = OrderBasis;
            this.BuySell1 = BuySell1;
            this.Amount1 = Amount1;
            this.Rate1 = Rate1;
            this.OrderBasis1 = OrderBasis1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PlaceOCOOrderResponse", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class PlaceOCOOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public lab2.ServiceTime.objPlaceOrderResponse PlaceOCOOrderResult;
        
        public PlaceOCOOrderResponse() {
        }
        
        public PlaceOCOOrderResponse(lab2.ServiceTime.objPlaceOrderResponse PlaceOCOOrderResult) {
            this.PlaceOCOOrderResult = PlaceOCOOrderResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ModifyOCOOrder", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class ModifyOCOOrderRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
        public lab2.ServiceTime.Authenticator Authenticator;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public string UserID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=1)]
        public string PWD;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=2)]
        public string OrderReference;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=3)]
        public string Expiry;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=4)]
        public string BuySell;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=5)]
        public string Amount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=6)]
        public string Rate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=7)]
        public string OrderBasis;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=8)]
        public string BuySell1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=9)]
        public string Amount1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=10)]
        public string Rate1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=11)]
        public string OrderBasis1;
        
        public ModifyOCOOrderRequest() {
        }
        
        public ModifyOCOOrderRequest(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string OrderReference, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis, string BuySell1, string Amount1, string Rate1, string OrderBasis1) {
            this.Authenticator = Authenticator;
            this.UserID = UserID;
            this.PWD = PWD;
            this.OrderReference = OrderReference;
            this.Expiry = Expiry;
            this.BuySell = BuySell;
            this.Amount = Amount;
            this.Rate = Rate;
            this.OrderBasis = OrderBasis;
            this.BuySell1 = BuySell1;
            this.Amount1 = Amount1;
            this.Rate1 = Rate1;
            this.OrderBasis1 = OrderBasis1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ModifyOCOOrderResponse", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class ModifyOCOOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public lab2.ServiceTime.objPlaceOrderResponse ModifyOCOOrderResult;
        
        public ModifyOCOOrderResponse() {
        }
        
        public ModifyOCOOrderResponse(lab2.ServiceTime.objPlaceOrderResponse ModifyOCOOrderResult) {
            this.ModifyOCOOrderResult = ModifyOCOOrderResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CancelOrder", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class CancelOrderRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
        public lab2.ServiceTime.Authenticator Authenticator;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public string UserID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=1)]
        public string PWD;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=2)]
        public string OrderConfirmation;
        
        public CancelOrderRequest() {
        }
        
        public CancelOrderRequest(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string OrderConfirmation) {
            this.Authenticator = Authenticator;
            this.UserID = UserID;
            this.PWD = PWD;
            this.OrderConfirmation = OrderConfirmation;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CancelOrderResponse", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class CancelOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public lab2.ServiceTime.objPlaceOrderResponse CancelOrderResult;
        
        public CancelOrderResponse() {
        }
        
        public CancelOrderResponse(lab2.ServiceTime.objPlaceOrderResponse CancelOrderResult) {
            this.CancelOrderResult = CancelOrderResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DealRequest", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class DealRequestRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
        public lab2.ServiceTime.Authenticator Authenticator;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public string UserID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=1)]
        public string PWD;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=2)]
        public string Pair;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=3)]
        public string BuySell;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=4)]
        public string Amount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=5)]
        public string Rate;
        
        public DealRequestRequest() {
        }
        
        public DealRequestRequest(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string Pair, string BuySell, string Amount, string Rate) {
            this.Authenticator = Authenticator;
            this.UserID = UserID;
            this.PWD = PWD;
            this.Pair = Pair;
            this.BuySell = BuySell;
            this.Amount = Amount;
            this.Rate = Rate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DealRequestResponse", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class DealRequestResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public lab2.ServiceTime.objDealResponse DealRequestResult;
        
        public DealRequestResponse() {
        }
        
        public DealRequestResponse(lab2.ServiceTime.objDealResponse DealRequestResult) {
            this.DealRequestResult = DealRequestResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DealRequestByDealId", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class DealRequestByDealIdRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
        public lab2.ServiceTime.Authenticator Authenticator;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public string UserID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=1)]
        public string PWD;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=2)]
        public string Pair;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=3)]
        public string BuySell;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=4)]
        public string Amount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=5)]
        public string Rate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=6)]
        public string DealID;
        
        public DealRequestByDealIdRequest() {
        }
        
        public DealRequestByDealIdRequest(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string Pair, string BuySell, string Amount, string Rate, string DealID) {
            this.Authenticator = Authenticator;
            this.UserID = UserID;
            this.PWD = PWD;
            this.Pair = Pair;
            this.BuySell = BuySell;
            this.Amount = Amount;
            this.Rate = Rate;
            this.DealID = DealID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DealRequestByDealIdResponse", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class DealRequestByDealIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public lab2.ServiceTime.objDealResponse DealRequestByDealIdResult;
        
        public DealRequestByDealIdResponse() {
        }
        
        public DealRequestByDealIdResponse(lab2.ServiceTime.objDealResponse DealRequestByDealIdResult) {
            this.DealRequestByDealIdResult = DealRequestByDealIdResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DealRequestAtBest", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class DealRequestAtBestRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
        public lab2.ServiceTime.Authenticator Authenticator;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public string UserID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=1)]
        public string PWD;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=2)]
        public string Pair;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=3)]
        public string BuySell;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=4)]
        public string Amount;
        
        public DealRequestAtBestRequest() {
        }
        
        public DealRequestAtBestRequest(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string Pair, string BuySell, string Amount) {
            this.Authenticator = Authenticator;
            this.UserID = UserID;
            this.PWD = PWD;
            this.Pair = Pair;
            this.BuySell = BuySell;
            this.Amount = Amount;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DealRequestAtBestResponse", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class DealRequestAtBestResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public lab2.ServiceTime.objDealResponse DealRequestAtBestResult;
        
        public DealRequestAtBestResponse() {
        }
        
        public DealRequestAtBestResponse(lab2.ServiceTime.objDealResponse DealRequestAtBestResult) {
            this.DealRequestAtBestResult = DealRequestAtBestResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CancelOrderByOrderID", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class CancelOrderByOrderIDRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
        public lab2.ServiceTime.Authenticator Authenticator;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public string UserID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=1)]
        public string PWD;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=2)]
        public string OrderReference;
        
        public CancelOrderByOrderIDRequest() {
        }
        
        public CancelOrderByOrderIDRequest(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string OrderReference) {
            this.Authenticator = Authenticator;
            this.UserID = UserID;
            this.PWD = PWD;
            this.OrderReference = OrderReference;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CancelOrderByOrderIDResponse", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class CancelOrderByOrderIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public lab2.ServiceTime.objPlaceOrderResponse CancelOrderByOrderIDResult;
        
        public CancelOrderByOrderIDResponse() {
        }
        
        public CancelOrderByOrderIDResponse(lab2.ServiceTime.objPlaceOrderResponse CancelOrderByOrderIDResult) {
            this.CancelOrderByOrderIDResult = CancelOrderByOrderIDResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CancelOrderByReferenceNumber", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class CancelOrderByReferenceNumberRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
        public lab2.ServiceTime.Authenticator Authenticator;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public string UserID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=1)]
        public string PWD;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=2)]
        public string OrderReference;
        
        public CancelOrderByReferenceNumberRequest() {
        }
        
        public CancelOrderByReferenceNumberRequest(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string OrderReference) {
            this.Authenticator = Authenticator;
            this.UserID = UserID;
            this.PWD = PWD;
            this.OrderReference = OrderReference;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CancelOrderByReferenceNumberResponse", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class CancelOrderByReferenceNumberResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public lab2.ServiceTime.objPlaceOrderResponse CancelOrderByReferenceNumberResult;
        
        public CancelOrderByReferenceNumberResponse() {
        }
        
        public CancelOrderByReferenceNumberResponse(lab2.ServiceTime.objPlaceOrderResponse CancelOrderByReferenceNumberResult) {
            this.CancelOrderByReferenceNumberResult = CancelOrderByReferenceNumberResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PlaceIfThenOrder", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class PlaceIfThenOrderRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
        public lab2.ServiceTime.Authenticator Authenticator;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public string UserID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=1)]
        public string PWD;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=2)]
        public string Pair;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=3)]
        public string Expiry;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=4)]
        public string BuySell;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=5)]
        public string Amount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=6)]
        public string Rate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=7)]
        public string OrderBasis;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=8)]
        public string BuySell1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=9)]
        public string Amount1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=10)]
        public string Rate1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=11)]
        public string OrderBasis1;
        
        public PlaceIfThenOrderRequest() {
        }
        
        public PlaceIfThenOrderRequest(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string Pair, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis, string BuySell1, string Amount1, string Rate1, string OrderBasis1) {
            this.Authenticator = Authenticator;
            this.UserID = UserID;
            this.PWD = PWD;
            this.Pair = Pair;
            this.Expiry = Expiry;
            this.BuySell = BuySell;
            this.Amount = Amount;
            this.Rate = Rate;
            this.OrderBasis = OrderBasis;
            this.BuySell1 = BuySell1;
            this.Amount1 = Amount1;
            this.Rate1 = Rate1;
            this.OrderBasis1 = OrderBasis1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PlaceIfThenOrderResponse", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class PlaceIfThenOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public lab2.ServiceTime.objPlaceOrderResponse PlaceIfThenOrderResult;
        
        public PlaceIfThenOrderResponse() {
        }
        
        public PlaceIfThenOrderResponse(lab2.ServiceTime.objPlaceOrderResponse PlaceIfThenOrderResult) {
            this.PlaceIfThenOrderResult = PlaceIfThenOrderResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ModifyIfThenOrder", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class ModifyIfThenOrderRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
        public lab2.ServiceTime.Authenticator Authenticator;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public string UserID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=1)]
        public string PWD;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=2)]
        public string OrderReference;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=3)]
        public string Expiry;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=4)]
        public string BuySell;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=5)]
        public string Amount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=6)]
        public string Rate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=7)]
        public string OrderBasis;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=8)]
        public string BuySell1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=9)]
        public string Amount1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=10)]
        public string Rate1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=11)]
        public string OrderBasis1;
        
        public ModifyIfThenOrderRequest() {
        }
        
        public ModifyIfThenOrderRequest(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string OrderReference, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis, string BuySell1, string Amount1, string Rate1, string OrderBasis1) {
            this.Authenticator = Authenticator;
            this.UserID = UserID;
            this.PWD = PWD;
            this.OrderReference = OrderReference;
            this.Expiry = Expiry;
            this.BuySell = BuySell;
            this.Amount = Amount;
            this.Rate = Rate;
            this.OrderBasis = OrderBasis;
            this.BuySell1 = BuySell1;
            this.Amount1 = Amount1;
            this.Rate1 = Rate1;
            this.OrderBasis1 = OrderBasis1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ModifyIfThenOrderResponse", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class ModifyIfThenOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public lab2.ServiceTime.objPlaceOrderResponse ModifyIfThenOrderResult;
        
        public ModifyIfThenOrderResponse() {
        }
        
        public ModifyIfThenOrderResponse(lab2.ServiceTime.objPlaceOrderResponse ModifyIfThenOrderResult) {
            this.ModifyIfThenOrderResult = ModifyIfThenOrderResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PlaceIfThenOCOOrder", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class PlaceIfThenOCOOrderRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
        public lab2.ServiceTime.Authenticator Authenticator;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public string UserID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=1)]
        public string PWD;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=2)]
        public string Pair;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=3)]
        public string Expiry;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=4)]
        public string BuySell;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=5)]
        public string Amount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=6)]
        public string Rate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=7)]
        public string OrderBasis;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=8)]
        public string BuySell1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=9)]
        public string Amount1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=10)]
        public string Rate1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=11)]
        public string OrderBasis1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=12)]
        public string BuySell2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=13)]
        public string Amount2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=14)]
        public string Rate2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=15)]
        public string OrderBasis2;
        
        public PlaceIfThenOCOOrderRequest() {
        }
        
        public PlaceIfThenOCOOrderRequest(
                    lab2.ServiceTime.Authenticator Authenticator, 
                    string UserID, 
                    string PWD, 
                    string Pair, 
                    string Expiry, 
                    string BuySell, 
                    string Amount, 
                    string Rate, 
                    string OrderBasis, 
                    string BuySell1, 
                    string Amount1, 
                    string Rate1, 
                    string OrderBasis1, 
                    string BuySell2, 
                    string Amount2, 
                    string Rate2, 
                    string OrderBasis2) {
            this.Authenticator = Authenticator;
            this.UserID = UserID;
            this.PWD = PWD;
            this.Pair = Pair;
            this.Expiry = Expiry;
            this.BuySell = BuySell;
            this.Amount = Amount;
            this.Rate = Rate;
            this.OrderBasis = OrderBasis;
            this.BuySell1 = BuySell1;
            this.Amount1 = Amount1;
            this.Rate1 = Rate1;
            this.OrderBasis1 = OrderBasis1;
            this.BuySell2 = BuySell2;
            this.Amount2 = Amount2;
            this.Rate2 = Rate2;
            this.OrderBasis2 = OrderBasis2;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PlaceIfThenOCOOrderResponse", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class PlaceIfThenOCOOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public lab2.ServiceTime.objPlaceOrderResponse PlaceIfThenOCOOrderResult;
        
        public PlaceIfThenOCOOrderResponse() {
        }
        
        public PlaceIfThenOCOOrderResponse(lab2.ServiceTime.objPlaceOrderResponse PlaceIfThenOCOOrderResult) {
            this.PlaceIfThenOCOOrderResult = PlaceIfThenOCOOrderResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ModifyIfThenOCOOrder", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class ModifyIfThenOCOOrderRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
        public lab2.ServiceTime.Authenticator Authenticator;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public string UserID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=1)]
        public string PWD;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=2)]
        public string OrderReference;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=3)]
        public string Expiry;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=4)]
        public string BuySell;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=5)]
        public string Amount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=6)]
        public string Rate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=7)]
        public string OrderBasis;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=8)]
        public string BuySell1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=9)]
        public string Amount1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=10)]
        public string Rate1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=11)]
        public string OrderBasis1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=12)]
        public string BuySell2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=13)]
        public string Amount2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=14)]
        public string Rate2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=15)]
        public string OrderBasis2;
        
        public ModifyIfThenOCOOrderRequest() {
        }
        
        public ModifyIfThenOCOOrderRequest(
                    lab2.ServiceTime.Authenticator Authenticator, 
                    string UserID, 
                    string PWD, 
                    string OrderReference, 
                    string Expiry, 
                    string BuySell, 
                    string Amount, 
                    string Rate, 
                    string OrderBasis, 
                    string BuySell1, 
                    string Amount1, 
                    string Rate1, 
                    string OrderBasis1, 
                    string BuySell2, 
                    string Amount2, 
                    string Rate2, 
                    string OrderBasis2) {
            this.Authenticator = Authenticator;
            this.UserID = UserID;
            this.PWD = PWD;
            this.OrderReference = OrderReference;
            this.Expiry = Expiry;
            this.BuySell = BuySell;
            this.Amount = Amount;
            this.Rate = Rate;
            this.OrderBasis = OrderBasis;
            this.BuySell1 = BuySell1;
            this.Amount1 = Amount1;
            this.Rate1 = Rate1;
            this.OrderBasis1 = OrderBasis1;
            this.BuySell2 = BuySell2;
            this.Amount2 = Amount2;
            this.Rate2 = Rate2;
            this.OrderBasis2 = OrderBasis2;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ModifyIfThenOCOOrderResponse", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class ModifyIfThenOCOOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public lab2.ServiceTime.objPlaceOrderResponse ModifyIfThenOCOOrderResult;
        
        public ModifyIfThenOCOOrderResponse() {
        }
        
        public ModifyIfThenOCOOrderResponse(lab2.ServiceTime.objPlaceOrderResponse ModifyIfThenOCOOrderResult) {
            this.ModifyIfThenOCOOrderResult = ModifyIfThenOCOOrderResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PlaceSingleASSPOrder", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class PlaceSingleASSPOrderRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
        public lab2.ServiceTime.Authenticator Authenticator;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public string UserID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=1)]
        public string PWD;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=2)]
        public string Pair;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=3)]
        public string Rate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=4)]
        public string OrderBasis;
        
        public PlaceSingleASSPOrderRequest() {
        }
        
        public PlaceSingleASSPOrderRequest(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string Pair, string Rate, string OrderBasis) {
            this.Authenticator = Authenticator;
            this.UserID = UserID;
            this.PWD = PWD;
            this.Pair = Pair;
            this.Rate = Rate;
            this.OrderBasis = OrderBasis;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PlaceSingleASSPOrderResponse", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class PlaceSingleASSPOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public lab2.ServiceTime.objPlaceOrderResponse PlaceSingleASSPOrderResult;
        
        public PlaceSingleASSPOrderResponse() {
        }
        
        public PlaceSingleASSPOrderResponse(lab2.ServiceTime.objPlaceOrderResponse PlaceSingleASSPOrderResult) {
            this.PlaceSingleASSPOrderResult = PlaceSingleASSPOrderResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ModifySingleASSPOrder", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class ModifySingleASSPOrderRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
        public lab2.ServiceTime.Authenticator Authenticator;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public string UserID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=1)]
        public string PWD;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=2)]
        public string OrderReference;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=3)]
        public string Rate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=4)]
        public string OrderBasis;
        
        public ModifySingleASSPOrderRequest() {
        }
        
        public ModifySingleASSPOrderRequest(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string OrderReference, string Rate, string OrderBasis) {
            this.Authenticator = Authenticator;
            this.UserID = UserID;
            this.PWD = PWD;
            this.OrderReference = OrderReference;
            this.Rate = Rate;
            this.OrderBasis = OrderBasis;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ModifySingleASSPOrderResponse", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class ModifySingleASSPOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public lab2.ServiceTime.objPlaceOrderResponse ModifySingleASSPOrderResult;
        
        public ModifySingleASSPOrderResponse() {
        }
        
        public ModifySingleASSPOrderResponse(lab2.ServiceTime.objPlaceOrderResponse ModifySingleASSPOrderResult) {
            this.ModifySingleASSPOrderResult = ModifySingleASSPOrderResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PlaceOCOASSPOrder", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class PlaceOCOASSPOrderRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
        public lab2.ServiceTime.Authenticator Authenticator;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public string UserID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=1)]
        public string PWD;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=2)]
        public string Pair;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=3)]
        public string LimitRate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=4)]
        public string StopLossRate;
        
        public PlaceOCOASSPOrderRequest() {
        }
        
        public PlaceOCOASSPOrderRequest(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string Pair, string LimitRate, string StopLossRate) {
            this.Authenticator = Authenticator;
            this.UserID = UserID;
            this.PWD = PWD;
            this.Pair = Pair;
            this.LimitRate = LimitRate;
            this.StopLossRate = StopLossRate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PlaceOCOASSPOrderResponse", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class PlaceOCOASSPOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public lab2.ServiceTime.objPlaceOrderResponse PlaceOCOASSPOrderResult;
        
        public PlaceOCOASSPOrderResponse() {
        }
        
        public PlaceOCOASSPOrderResponse(lab2.ServiceTime.objPlaceOrderResponse PlaceOCOASSPOrderResult) {
            this.PlaceOCOASSPOrderResult = PlaceOCOASSPOrderResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ModifyOCOASSPOrder", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class ModifyOCOASSPOrderRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
        public lab2.ServiceTime.Authenticator Authenticator;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public string UserID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=1)]
        public string PWD;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=2)]
        public string OrderReference;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=3)]
        public string LimitRate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=4)]
        public string StopLossRate;
        
        public ModifyOCOASSPOrderRequest() {
        }
        
        public ModifyOCOASSPOrderRequest(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string OrderReference, string LimitRate, string StopLossRate) {
            this.Authenticator = Authenticator;
            this.UserID = UserID;
            this.PWD = PWD;
            this.OrderReference = OrderReference;
            this.LimitRate = LimitRate;
            this.StopLossRate = StopLossRate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ModifyOCOASSPOrderResponse", WrapperNamespace="https://api.efxnow.com/webservices2.3", IsWrapped=true)]
    public partial class ModifyOCOASSPOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://api.efxnow.com/webservices2.3", Order=0)]
        public lab2.ServiceTime.objPlaceOrderResponse ModifyOCOASSPOrderResult;
        
        public ModifyOCOASSPOrderResponse() {
        }
        
        public ModifyOCOASSPOrderResponse(lab2.ServiceTime.objPlaceOrderResponse ModifyOCOASSPOrderResult) {
            this.ModifyOCOASSPOrderResult = ModifyOCOASSPOrderResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceSoapChannel : lab2.ServiceTime.ServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceSoapClient : System.ServiceModel.ClientBase<lab2.ServiceTime.ServiceSoap>, lab2.ServiceTime.ServiceSoap {
        
        public ServiceSoapClient() {
        }
        
        public ServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetCommentDataSet() {
            return base.Channel.GetCommentDataSet();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCommentDataSetAsync() {
            return base.Channel.GetCommentDataSetAsync();
        }
        
        public System.Data.DataSet GetDealBlotterDataSet(string UserID, string PWD) {
            return base.Channel.GetDealBlotterDataSet(UserID, PWD);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetDealBlotterDataSetAsync(string UserID, string PWD) {
            return base.Channel.GetDealBlotterDataSetAsync(UserID, PWD);
        }
        
        public System.Data.DataSet GetDealBlotterDataSetWithFilter(string UserID, string PWD, string Status) {
            return base.Channel.GetDealBlotterDataSetWithFilter(UserID, PWD, Status);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetDealBlotterDataSetWithFilterAsync(string UserID, string PWD, string Status) {
            return base.Channel.GetDealBlotterDataSetWithFilterAsync(UserID, PWD, Status);
        }
        
        public System.Data.DataSet GetDelayedRatesDataSet() {
            return base.Channel.GetDelayedRatesDataSet();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetDelayedRatesDataSetAsync() {
            return base.Channel.GetDelayedRatesDataSetAsync();
        }
        
        public System.Data.DataSet GetMarginBlotterDataSet(string UserID, string PWD) {
            return base.Channel.GetMarginBlotterDataSet(UserID, PWD);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetMarginBlotterDataSetAsync(string UserID, string PWD) {
            return base.Channel.GetMarginBlotterDataSetAsync(UserID, PWD);
        }
        
        public string GetCustomMarginBlotter(string Key) {
            return base.Channel.GetCustomMarginBlotter(Key);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomMarginBlotterAsync(string Key) {
            return base.Channel.GetCustomMarginBlotterAsync(Key);
        }
        
        public string GetCustomPositionBlotter(string Key) {
            return base.Channel.GetCustomPositionBlotter(Key);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomPositionBlotterAsync(string Key) {
            return base.Channel.GetCustomPositionBlotterAsync(Key);
        }
        
        public System.Data.DataSet GetNewsDataSet() {
            return base.Channel.GetNewsDataSet();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetNewsDataSetAsync() {
            return base.Channel.GetNewsDataSetAsync();
        }
        
        public lab2.ServiceTime.objProductSubscriptionResponse SaveUserProductSubscriptionSettings(string UserId, string PWD, string Brand, string ProductList) {
            return base.Channel.SaveUserProductSubscriptionSettings(UserId, PWD, Brand, ProductList);
        }
        
        public System.Threading.Tasks.Task<lab2.ServiceTime.objProductSubscriptionResponse> SaveUserProductSubscriptionSettingsAsync(string UserId, string PWD, string Brand, string ProductList) {
            return base.Channel.SaveUserProductSubscriptionSettingsAsync(UserId, PWD, Brand, ProductList);
        }
        
        public bool ServiceAuthentication(string UserID, string Password, string Brand, string ServiceID) {
            return base.Channel.ServiceAuthentication(UserID, Password, Brand, ServiceID);
        }
        
        public System.Threading.Tasks.Task<bool> ServiceAuthenticationAsync(string UserID, string Password, string Brand, string ServiceID) {
            return base.Channel.ServiceAuthenticationAsync(UserID, Password, Brand, ServiceID);
        }
        
        public string GetProductSubscriptionRelationshipBlotter(string UserId, string PWD, string Brand) {
            return base.Channel.GetProductSubscriptionRelationshipBlotter(UserId, PWD, Brand);
        }
        
        public System.Threading.Tasks.Task<string> GetProductSubscriptionRelationshipBlotterAsync(string UserId, string PWD, string Brand) {
            return base.Channel.GetProductSubscriptionRelationshipBlotterAsync(UserId, PWD, Brand);
        }
        
        public System.Data.DataSet GetProductSubscriptionRelationshipBlotterDataset(string UserId, string PWD, string Brand) {
            return base.Channel.GetProductSubscriptionRelationshipBlotterDataset(UserId, PWD, Brand);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetProductSubscriptionRelationshipBlotterDatasetAsync(string UserId, string PWD, string Brand) {
            return base.Channel.GetProductSubscriptionRelationshipBlotterDatasetAsync(UserId, PWD, Brand);
        }
        
        public System.Data.DataSet GetOrderBlotterDataSet(string UserID, string PWD) {
            return base.Channel.GetOrderBlotterDataSet(UserID, PWD);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetOrderBlotterDataSetAsync(string UserID, string PWD) {
            return base.Channel.GetOrderBlotterDataSetAsync(UserID, PWD);
        }
        
        public System.Data.DataSet GetPositionBlotterDataSet(string UserID, string PWD) {
            return base.Channel.GetPositionBlotterDataSet(UserID, PWD);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetPositionBlotterDataSetAsync(string UserID, string PWD) {
            return base.Channel.GetPositionBlotterDataSetAsync(UserID, PWD);
        }
        
        public string GetRatesBlotter(string Key) {
            return base.Channel.GetRatesBlotter(Key);
        }
        
        public System.Threading.Tasks.Task<string> GetRatesBlotterAsync(string Key) {
            return base.Channel.GetRatesBlotterAsync(Key);
        }
        
        public string GetRates(string Key) {
            return base.Channel.GetRates(Key);
        }
        
        public System.Threading.Tasks.Task<string> GetRatesAsync(string Key) {
            return base.Channel.GetRatesAsync(Key);
        }
        
        public System.Data.DataSet GetRatesDataSet(string Key) {
            return base.Channel.GetRatesDataSet(Key);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetRatesDataSetAsync(string Key) {
            return base.Channel.GetRatesDataSetAsync(Key);
        }
        
        public System.Data.DataSet GetHistoricRatesDataSet(string Key, string Quote, string StartDateTime, string EndDateTime) {
            return base.Channel.GetHistoricRatesDataSet(Key, Quote, StartDateTime, EndDateTime);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetHistoricRatesDataSetAsync(string Key, string Quote, string StartDateTime, string EndDateTime) {
            return base.Channel.GetHistoricRatesDataSetAsync(Key, Quote, StartDateTime, EndDateTime);
        }
        
        public System.Data.DataSet GetSymbolBlotterDataSet(string UserID, string PWD) {
            return base.Channel.GetSymbolBlotterDataSet(UserID, PWD);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSymbolBlotterDataSetAsync(string UserID, string PWD) {
            return base.Channel.GetSymbolBlotterDataSetAsync(UserID, PWD);
        }
        
        public string GetTicker(string UserId, string PWD, string Brand, string Accounttype, string Lang) {
            return base.Channel.GetTicker(UserId, PWD, Brand, Accounttype, Lang);
        }
        
        public System.Threading.Tasks.Task<string> GetTickerAsync(string UserId, string PWD, string Brand, string Accounttype, string Lang) {
            return base.Channel.GetTickerAsync(UserId, PWD, Brand, Accounttype, Lang);
        }
        
        public string GetEconomicCalendar(string UserId, string PWD, string Brand, string Lang) {
            return base.Channel.GetEconomicCalendar(UserId, PWD, Brand, Lang);
        }
        
        public System.Threading.Tasks.Task<string> GetEconomicCalendarAsync(string UserId, string PWD, string Brand, string Lang) {
            return base.Channel.GetEconomicCalendarAsync(UserId, PWD, Brand, Lang);
        }
        
        public string GetAccount(string UserID, string PWD, string Brand) {
            return base.Channel.GetAccount(UserID, PWD, Brand);
        }
        
        public System.Threading.Tasks.Task<string> GetAccountAsync(string UserID, string PWD, string Brand) {
            return base.Channel.GetAccountAsync(UserID, PWD, Brand);
        }
        
        public string GetAccountServices(string UserID, string PWD, string Brand) {
            return base.Channel.GetAccountServices(UserID, PWD, Brand);
        }
        
        public System.Threading.Tasks.Task<string> GetAccountServicesAsync(string UserID, string PWD, string Brand) {
            return base.Channel.GetAccountServicesAsync(UserID, PWD, Brand);
        }
        
        public string GetDealBlotter(string Key) {
            return base.Channel.GetDealBlotter(Key);
        }
        
        public System.Threading.Tasks.Task<string> GetDealBlotterAsync(string Key) {
            return base.Channel.GetDealBlotterAsync(Key);
        }
        
        public string GetDealBlotterWithFilter(string Key, string Status) {
            return base.Channel.GetDealBlotterWithFilter(Key, Status);
        }
        
        public System.Threading.Tasks.Task<string> GetDealBlotterWithFilterAsync(string Key, string Status) {
            return base.Channel.GetDealBlotterWithFilterAsync(Key, Status);
        }
        
        public string GetMarginBlotter(string Key) {
            return base.Channel.GetMarginBlotter(Key);
        }
        
        public System.Threading.Tasks.Task<string> GetMarginBlotterAsync(string Key) {
            return base.Channel.GetMarginBlotterAsync(Key);
        }
        
        public string GetOrderBlotter(string Key) {
            return base.Channel.GetOrderBlotter(Key);
        }
        
        public System.Threading.Tasks.Task<string> GetOrderBlotterAsync(string Key) {
            return base.Channel.GetOrderBlotterAsync(Key);
        }
        
        public string GetPositionBlotter(string Key) {
            return base.Channel.GetPositionBlotter(Key);
        }
        
        public System.Threading.Tasks.Task<string> GetPositionBlotterAsync(string Key) {
            return base.Channel.GetPositionBlotterAsync(Key);
        }
        
        public string GetSymbolBlotter(string Key) {
            return base.Channel.GetSymbolBlotter(Key);
        }
        
        public System.Threading.Tasks.Task<string> GetSymbolBlotterAsync(string Key) {
            return base.Channel.GetSymbolBlotterAsync(Key);
        }
        
        public string GetPairSettings(string UserId, string PWD, string Brand) {
            return base.Channel.GetPairSettings(UserId, PWD, Brand);
        }
        
        public System.Threading.Tasks.Task<string> GetPairSettingsAsync(string UserId, string PWD, string Brand) {
            return base.Channel.GetPairSettingsAsync(UserId, PWD, Brand);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        lab2.ServiceTime.PlaceSingleOrderResponse lab2.ServiceTime.ServiceSoap.PlaceSingleOrder(lab2.ServiceTime.PlaceSingleOrderRequest request) {
            return base.Channel.PlaceSingleOrder(request);
        }
        
        public lab2.ServiceTime.objPlaceOrderResponse PlaceSingleOrder(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string Pair, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis) {
            lab2.ServiceTime.PlaceSingleOrderRequest inValue = new lab2.ServiceTime.PlaceSingleOrderRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.Pair = Pair;
            inValue.Expiry = Expiry;
            inValue.BuySell = BuySell;
            inValue.Amount = Amount;
            inValue.Rate = Rate;
            inValue.OrderBasis = OrderBasis;
            lab2.ServiceTime.PlaceSingleOrderResponse retVal = ((lab2.ServiceTime.ServiceSoap)(this)).PlaceSingleOrder(inValue);
            return retVal.PlaceSingleOrderResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<lab2.ServiceTime.PlaceSingleOrderResponse> lab2.ServiceTime.ServiceSoap.PlaceSingleOrderAsync(lab2.ServiceTime.PlaceSingleOrderRequest request) {
            return base.Channel.PlaceSingleOrderAsync(request);
        }
        
        public System.Threading.Tasks.Task<lab2.ServiceTime.PlaceSingleOrderResponse> PlaceSingleOrderAsync(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string Pair, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis) {
            lab2.ServiceTime.PlaceSingleOrderRequest inValue = new lab2.ServiceTime.PlaceSingleOrderRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.Pair = Pair;
            inValue.Expiry = Expiry;
            inValue.BuySell = BuySell;
            inValue.Amount = Amount;
            inValue.Rate = Rate;
            inValue.OrderBasis = OrderBasis;
            return ((lab2.ServiceTime.ServiceSoap)(this)).PlaceSingleOrderAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        lab2.ServiceTime.ModifySingleOrderResponse lab2.ServiceTime.ServiceSoap.ModifySingleOrder(lab2.ServiceTime.ModifySingleOrderRequest request) {
            return base.Channel.ModifySingleOrder(request);
        }
        
        public lab2.ServiceTime.objPlaceOrderResponse ModifySingleOrder(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string OrderReference, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis) {
            lab2.ServiceTime.ModifySingleOrderRequest inValue = new lab2.ServiceTime.ModifySingleOrderRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.OrderReference = OrderReference;
            inValue.Expiry = Expiry;
            inValue.BuySell = BuySell;
            inValue.Amount = Amount;
            inValue.Rate = Rate;
            inValue.OrderBasis = OrderBasis;
            lab2.ServiceTime.ModifySingleOrderResponse retVal = ((lab2.ServiceTime.ServiceSoap)(this)).ModifySingleOrder(inValue);
            return retVal.ModifySingleOrderResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<lab2.ServiceTime.ModifySingleOrderResponse> lab2.ServiceTime.ServiceSoap.ModifySingleOrderAsync(lab2.ServiceTime.ModifySingleOrderRequest request) {
            return base.Channel.ModifySingleOrderAsync(request);
        }
        
        public System.Threading.Tasks.Task<lab2.ServiceTime.ModifySingleOrderResponse> ModifySingleOrderAsync(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string OrderReference, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis) {
            lab2.ServiceTime.ModifySingleOrderRequest inValue = new lab2.ServiceTime.ModifySingleOrderRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.OrderReference = OrderReference;
            inValue.Expiry = Expiry;
            inValue.BuySell = BuySell;
            inValue.Amount = Amount;
            inValue.Rate = Rate;
            inValue.OrderBasis = OrderBasis;
            return ((lab2.ServiceTime.ServiceSoap)(this)).ModifySingleOrderAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        lab2.ServiceTime.PlaceOCOOrderResponse lab2.ServiceTime.ServiceSoap.PlaceOCOOrder(lab2.ServiceTime.PlaceOCOOrderRequest request) {
            return base.Channel.PlaceOCOOrder(request);
        }
        
        public lab2.ServiceTime.objPlaceOrderResponse PlaceOCOOrder(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string Pair, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis, string BuySell1, string Amount1, string Rate1, string OrderBasis1) {
            lab2.ServiceTime.PlaceOCOOrderRequest inValue = new lab2.ServiceTime.PlaceOCOOrderRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.Pair = Pair;
            inValue.Expiry = Expiry;
            inValue.BuySell = BuySell;
            inValue.Amount = Amount;
            inValue.Rate = Rate;
            inValue.OrderBasis = OrderBasis;
            inValue.BuySell1 = BuySell1;
            inValue.Amount1 = Amount1;
            inValue.Rate1 = Rate1;
            inValue.OrderBasis1 = OrderBasis1;
            lab2.ServiceTime.PlaceOCOOrderResponse retVal = ((lab2.ServiceTime.ServiceSoap)(this)).PlaceOCOOrder(inValue);
            return retVal.PlaceOCOOrderResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<lab2.ServiceTime.PlaceOCOOrderResponse> lab2.ServiceTime.ServiceSoap.PlaceOCOOrderAsync(lab2.ServiceTime.PlaceOCOOrderRequest request) {
            return base.Channel.PlaceOCOOrderAsync(request);
        }
        
        public System.Threading.Tasks.Task<lab2.ServiceTime.PlaceOCOOrderResponse> PlaceOCOOrderAsync(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string Pair, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis, string BuySell1, string Amount1, string Rate1, string OrderBasis1) {
            lab2.ServiceTime.PlaceOCOOrderRequest inValue = new lab2.ServiceTime.PlaceOCOOrderRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.Pair = Pair;
            inValue.Expiry = Expiry;
            inValue.BuySell = BuySell;
            inValue.Amount = Amount;
            inValue.Rate = Rate;
            inValue.OrderBasis = OrderBasis;
            inValue.BuySell1 = BuySell1;
            inValue.Amount1 = Amount1;
            inValue.Rate1 = Rate1;
            inValue.OrderBasis1 = OrderBasis1;
            return ((lab2.ServiceTime.ServiceSoap)(this)).PlaceOCOOrderAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        lab2.ServiceTime.ModifyOCOOrderResponse lab2.ServiceTime.ServiceSoap.ModifyOCOOrder(lab2.ServiceTime.ModifyOCOOrderRequest request) {
            return base.Channel.ModifyOCOOrder(request);
        }
        
        public lab2.ServiceTime.objPlaceOrderResponse ModifyOCOOrder(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string OrderReference, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis, string BuySell1, string Amount1, string Rate1, string OrderBasis1) {
            lab2.ServiceTime.ModifyOCOOrderRequest inValue = new lab2.ServiceTime.ModifyOCOOrderRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.OrderReference = OrderReference;
            inValue.Expiry = Expiry;
            inValue.BuySell = BuySell;
            inValue.Amount = Amount;
            inValue.Rate = Rate;
            inValue.OrderBasis = OrderBasis;
            inValue.BuySell1 = BuySell1;
            inValue.Amount1 = Amount1;
            inValue.Rate1 = Rate1;
            inValue.OrderBasis1 = OrderBasis1;
            lab2.ServiceTime.ModifyOCOOrderResponse retVal = ((lab2.ServiceTime.ServiceSoap)(this)).ModifyOCOOrder(inValue);
            return retVal.ModifyOCOOrderResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<lab2.ServiceTime.ModifyOCOOrderResponse> lab2.ServiceTime.ServiceSoap.ModifyOCOOrderAsync(lab2.ServiceTime.ModifyOCOOrderRequest request) {
            return base.Channel.ModifyOCOOrderAsync(request);
        }
        
        public System.Threading.Tasks.Task<lab2.ServiceTime.ModifyOCOOrderResponse> ModifyOCOOrderAsync(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string OrderReference, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis, string BuySell1, string Amount1, string Rate1, string OrderBasis1) {
            lab2.ServiceTime.ModifyOCOOrderRequest inValue = new lab2.ServiceTime.ModifyOCOOrderRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.OrderReference = OrderReference;
            inValue.Expiry = Expiry;
            inValue.BuySell = BuySell;
            inValue.Amount = Amount;
            inValue.Rate = Rate;
            inValue.OrderBasis = OrderBasis;
            inValue.BuySell1 = BuySell1;
            inValue.Amount1 = Amount1;
            inValue.Rate1 = Rate1;
            inValue.OrderBasis1 = OrderBasis1;
            return ((lab2.ServiceTime.ServiceSoap)(this)).ModifyOCOOrderAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        lab2.ServiceTime.CancelOrderResponse lab2.ServiceTime.ServiceSoap.CancelOrder(lab2.ServiceTime.CancelOrderRequest request) {
            return base.Channel.CancelOrder(request);
        }
        
        public lab2.ServiceTime.objPlaceOrderResponse CancelOrder(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string OrderConfirmation) {
            lab2.ServiceTime.CancelOrderRequest inValue = new lab2.ServiceTime.CancelOrderRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.OrderConfirmation = OrderConfirmation;
            lab2.ServiceTime.CancelOrderResponse retVal = ((lab2.ServiceTime.ServiceSoap)(this)).CancelOrder(inValue);
            return retVal.CancelOrderResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<lab2.ServiceTime.CancelOrderResponse> lab2.ServiceTime.ServiceSoap.CancelOrderAsync(lab2.ServiceTime.CancelOrderRequest request) {
            return base.Channel.CancelOrderAsync(request);
        }
        
        public System.Threading.Tasks.Task<lab2.ServiceTime.CancelOrderResponse> CancelOrderAsync(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string OrderConfirmation) {
            lab2.ServiceTime.CancelOrderRequest inValue = new lab2.ServiceTime.CancelOrderRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.OrderConfirmation = OrderConfirmation;
            return ((lab2.ServiceTime.ServiceSoap)(this)).CancelOrderAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        lab2.ServiceTime.DealRequestResponse lab2.ServiceTime.ServiceSoap.DealRequest(lab2.ServiceTime.DealRequestRequest request) {
            return base.Channel.DealRequest(request);
        }
        
        public lab2.ServiceTime.objDealResponse DealRequest(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string Pair, string BuySell, string Amount, string Rate) {
            lab2.ServiceTime.DealRequestRequest inValue = new lab2.ServiceTime.DealRequestRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.Pair = Pair;
            inValue.BuySell = BuySell;
            inValue.Amount = Amount;
            inValue.Rate = Rate;
            lab2.ServiceTime.DealRequestResponse retVal = ((lab2.ServiceTime.ServiceSoap)(this)).DealRequest(inValue);
            return retVal.DealRequestResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<lab2.ServiceTime.DealRequestResponse> lab2.ServiceTime.ServiceSoap.DealRequestAsync(lab2.ServiceTime.DealRequestRequest request) {
            return base.Channel.DealRequestAsync(request);
        }
        
        public System.Threading.Tasks.Task<lab2.ServiceTime.DealRequestResponse> DealRequestAsync(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string Pair, string BuySell, string Amount, string Rate) {
            lab2.ServiceTime.DealRequestRequest inValue = new lab2.ServiceTime.DealRequestRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.Pair = Pair;
            inValue.BuySell = BuySell;
            inValue.Amount = Amount;
            inValue.Rate = Rate;
            return ((lab2.ServiceTime.ServiceSoap)(this)).DealRequestAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        lab2.ServiceTime.DealRequestByDealIdResponse lab2.ServiceTime.ServiceSoap.DealRequestByDealId(lab2.ServiceTime.DealRequestByDealIdRequest request) {
            return base.Channel.DealRequestByDealId(request);
        }
        
        public lab2.ServiceTime.objDealResponse DealRequestByDealId(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string Pair, string BuySell, string Amount, string Rate, string DealID) {
            lab2.ServiceTime.DealRequestByDealIdRequest inValue = new lab2.ServiceTime.DealRequestByDealIdRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.Pair = Pair;
            inValue.BuySell = BuySell;
            inValue.Amount = Amount;
            inValue.Rate = Rate;
            inValue.DealID = DealID;
            lab2.ServiceTime.DealRequestByDealIdResponse retVal = ((lab2.ServiceTime.ServiceSoap)(this)).DealRequestByDealId(inValue);
            return retVal.DealRequestByDealIdResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<lab2.ServiceTime.DealRequestByDealIdResponse> lab2.ServiceTime.ServiceSoap.DealRequestByDealIdAsync(lab2.ServiceTime.DealRequestByDealIdRequest request) {
            return base.Channel.DealRequestByDealIdAsync(request);
        }
        
        public System.Threading.Tasks.Task<lab2.ServiceTime.DealRequestByDealIdResponse> DealRequestByDealIdAsync(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string Pair, string BuySell, string Amount, string Rate, string DealID) {
            lab2.ServiceTime.DealRequestByDealIdRequest inValue = new lab2.ServiceTime.DealRequestByDealIdRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.Pair = Pair;
            inValue.BuySell = BuySell;
            inValue.Amount = Amount;
            inValue.Rate = Rate;
            inValue.DealID = DealID;
            return ((lab2.ServiceTime.ServiceSoap)(this)).DealRequestByDealIdAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        lab2.ServiceTime.DealRequestAtBestResponse lab2.ServiceTime.ServiceSoap.DealRequestAtBest(lab2.ServiceTime.DealRequestAtBestRequest request) {
            return base.Channel.DealRequestAtBest(request);
        }
        
        public lab2.ServiceTime.objDealResponse DealRequestAtBest(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string Pair, string BuySell, string Amount) {
            lab2.ServiceTime.DealRequestAtBestRequest inValue = new lab2.ServiceTime.DealRequestAtBestRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.Pair = Pair;
            inValue.BuySell = BuySell;
            inValue.Amount = Amount;
            lab2.ServiceTime.DealRequestAtBestResponse retVal = ((lab2.ServiceTime.ServiceSoap)(this)).DealRequestAtBest(inValue);
            return retVal.DealRequestAtBestResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<lab2.ServiceTime.DealRequestAtBestResponse> lab2.ServiceTime.ServiceSoap.DealRequestAtBestAsync(lab2.ServiceTime.DealRequestAtBestRequest request) {
            return base.Channel.DealRequestAtBestAsync(request);
        }
        
        public System.Threading.Tasks.Task<lab2.ServiceTime.DealRequestAtBestResponse> DealRequestAtBestAsync(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string Pair, string BuySell, string Amount) {
            lab2.ServiceTime.DealRequestAtBestRequest inValue = new lab2.ServiceTime.DealRequestAtBestRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.Pair = Pair;
            inValue.BuySell = BuySell;
            inValue.Amount = Amount;
            return ((lab2.ServiceTime.ServiceSoap)(this)).DealRequestAtBestAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        lab2.ServiceTime.CancelOrderByOrderIDResponse lab2.ServiceTime.ServiceSoap.CancelOrderByOrderID(lab2.ServiceTime.CancelOrderByOrderIDRequest request) {
            return base.Channel.CancelOrderByOrderID(request);
        }
        
        public lab2.ServiceTime.objPlaceOrderResponse CancelOrderByOrderID(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string OrderReference) {
            lab2.ServiceTime.CancelOrderByOrderIDRequest inValue = new lab2.ServiceTime.CancelOrderByOrderIDRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.OrderReference = OrderReference;
            lab2.ServiceTime.CancelOrderByOrderIDResponse retVal = ((lab2.ServiceTime.ServiceSoap)(this)).CancelOrderByOrderID(inValue);
            return retVal.CancelOrderByOrderIDResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<lab2.ServiceTime.CancelOrderByOrderIDResponse> lab2.ServiceTime.ServiceSoap.CancelOrderByOrderIDAsync(lab2.ServiceTime.CancelOrderByOrderIDRequest request) {
            return base.Channel.CancelOrderByOrderIDAsync(request);
        }
        
        public System.Threading.Tasks.Task<lab2.ServiceTime.CancelOrderByOrderIDResponse> CancelOrderByOrderIDAsync(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string OrderReference) {
            lab2.ServiceTime.CancelOrderByOrderIDRequest inValue = new lab2.ServiceTime.CancelOrderByOrderIDRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.OrderReference = OrderReference;
            return ((lab2.ServiceTime.ServiceSoap)(this)).CancelOrderByOrderIDAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        lab2.ServiceTime.CancelOrderByReferenceNumberResponse lab2.ServiceTime.ServiceSoap.CancelOrderByReferenceNumber(lab2.ServiceTime.CancelOrderByReferenceNumberRequest request) {
            return base.Channel.CancelOrderByReferenceNumber(request);
        }
        
        public lab2.ServiceTime.objPlaceOrderResponse CancelOrderByReferenceNumber(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string OrderReference) {
            lab2.ServiceTime.CancelOrderByReferenceNumberRequest inValue = new lab2.ServiceTime.CancelOrderByReferenceNumberRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.OrderReference = OrderReference;
            lab2.ServiceTime.CancelOrderByReferenceNumberResponse retVal = ((lab2.ServiceTime.ServiceSoap)(this)).CancelOrderByReferenceNumber(inValue);
            return retVal.CancelOrderByReferenceNumberResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<lab2.ServiceTime.CancelOrderByReferenceNumberResponse> lab2.ServiceTime.ServiceSoap.CancelOrderByReferenceNumberAsync(lab2.ServiceTime.CancelOrderByReferenceNumberRequest request) {
            return base.Channel.CancelOrderByReferenceNumberAsync(request);
        }
        
        public System.Threading.Tasks.Task<lab2.ServiceTime.CancelOrderByReferenceNumberResponse> CancelOrderByReferenceNumberAsync(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string OrderReference) {
            lab2.ServiceTime.CancelOrderByReferenceNumberRequest inValue = new lab2.ServiceTime.CancelOrderByReferenceNumberRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.OrderReference = OrderReference;
            return ((lab2.ServiceTime.ServiceSoap)(this)).CancelOrderByReferenceNumberAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        lab2.ServiceTime.PlaceIfThenOrderResponse lab2.ServiceTime.ServiceSoap.PlaceIfThenOrder(lab2.ServiceTime.PlaceIfThenOrderRequest request) {
            return base.Channel.PlaceIfThenOrder(request);
        }
        
        public lab2.ServiceTime.objPlaceOrderResponse PlaceIfThenOrder(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string Pair, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis, string BuySell1, string Amount1, string Rate1, string OrderBasis1) {
            lab2.ServiceTime.PlaceIfThenOrderRequest inValue = new lab2.ServiceTime.PlaceIfThenOrderRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.Pair = Pair;
            inValue.Expiry = Expiry;
            inValue.BuySell = BuySell;
            inValue.Amount = Amount;
            inValue.Rate = Rate;
            inValue.OrderBasis = OrderBasis;
            inValue.BuySell1 = BuySell1;
            inValue.Amount1 = Amount1;
            inValue.Rate1 = Rate1;
            inValue.OrderBasis1 = OrderBasis1;
            lab2.ServiceTime.PlaceIfThenOrderResponse retVal = ((lab2.ServiceTime.ServiceSoap)(this)).PlaceIfThenOrder(inValue);
            return retVal.PlaceIfThenOrderResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<lab2.ServiceTime.PlaceIfThenOrderResponse> lab2.ServiceTime.ServiceSoap.PlaceIfThenOrderAsync(lab2.ServiceTime.PlaceIfThenOrderRequest request) {
            return base.Channel.PlaceIfThenOrderAsync(request);
        }
        
        public System.Threading.Tasks.Task<lab2.ServiceTime.PlaceIfThenOrderResponse> PlaceIfThenOrderAsync(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string Pair, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis, string BuySell1, string Amount1, string Rate1, string OrderBasis1) {
            lab2.ServiceTime.PlaceIfThenOrderRequest inValue = new lab2.ServiceTime.PlaceIfThenOrderRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.Pair = Pair;
            inValue.Expiry = Expiry;
            inValue.BuySell = BuySell;
            inValue.Amount = Amount;
            inValue.Rate = Rate;
            inValue.OrderBasis = OrderBasis;
            inValue.BuySell1 = BuySell1;
            inValue.Amount1 = Amount1;
            inValue.Rate1 = Rate1;
            inValue.OrderBasis1 = OrderBasis1;
            return ((lab2.ServiceTime.ServiceSoap)(this)).PlaceIfThenOrderAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        lab2.ServiceTime.ModifyIfThenOrderResponse lab2.ServiceTime.ServiceSoap.ModifyIfThenOrder(lab2.ServiceTime.ModifyIfThenOrderRequest request) {
            return base.Channel.ModifyIfThenOrder(request);
        }
        
        public lab2.ServiceTime.objPlaceOrderResponse ModifyIfThenOrder(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string OrderReference, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis, string BuySell1, string Amount1, string Rate1, string OrderBasis1) {
            lab2.ServiceTime.ModifyIfThenOrderRequest inValue = new lab2.ServiceTime.ModifyIfThenOrderRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.OrderReference = OrderReference;
            inValue.Expiry = Expiry;
            inValue.BuySell = BuySell;
            inValue.Amount = Amount;
            inValue.Rate = Rate;
            inValue.OrderBasis = OrderBasis;
            inValue.BuySell1 = BuySell1;
            inValue.Amount1 = Amount1;
            inValue.Rate1 = Rate1;
            inValue.OrderBasis1 = OrderBasis1;
            lab2.ServiceTime.ModifyIfThenOrderResponse retVal = ((lab2.ServiceTime.ServiceSoap)(this)).ModifyIfThenOrder(inValue);
            return retVal.ModifyIfThenOrderResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<lab2.ServiceTime.ModifyIfThenOrderResponse> lab2.ServiceTime.ServiceSoap.ModifyIfThenOrderAsync(lab2.ServiceTime.ModifyIfThenOrderRequest request) {
            return base.Channel.ModifyIfThenOrderAsync(request);
        }
        
        public System.Threading.Tasks.Task<lab2.ServiceTime.ModifyIfThenOrderResponse> ModifyIfThenOrderAsync(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string OrderReference, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis, string BuySell1, string Amount1, string Rate1, string OrderBasis1) {
            lab2.ServiceTime.ModifyIfThenOrderRequest inValue = new lab2.ServiceTime.ModifyIfThenOrderRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.OrderReference = OrderReference;
            inValue.Expiry = Expiry;
            inValue.BuySell = BuySell;
            inValue.Amount = Amount;
            inValue.Rate = Rate;
            inValue.OrderBasis = OrderBasis;
            inValue.BuySell1 = BuySell1;
            inValue.Amount1 = Amount1;
            inValue.Rate1 = Rate1;
            inValue.OrderBasis1 = OrderBasis1;
            return ((lab2.ServiceTime.ServiceSoap)(this)).ModifyIfThenOrderAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        lab2.ServiceTime.PlaceIfThenOCOOrderResponse lab2.ServiceTime.ServiceSoap.PlaceIfThenOCOOrder(lab2.ServiceTime.PlaceIfThenOCOOrderRequest request) {
            return base.Channel.PlaceIfThenOCOOrder(request);
        }
        
        public lab2.ServiceTime.objPlaceOrderResponse PlaceIfThenOCOOrder(
                    lab2.ServiceTime.Authenticator Authenticator, 
                    string UserID, 
                    string PWD, 
                    string Pair, 
                    string Expiry, 
                    string BuySell, 
                    string Amount, 
                    string Rate, 
                    string OrderBasis, 
                    string BuySell1, 
                    string Amount1, 
                    string Rate1, 
                    string OrderBasis1, 
                    string BuySell2, 
                    string Amount2, 
                    string Rate2, 
                    string OrderBasis2) {
            lab2.ServiceTime.PlaceIfThenOCOOrderRequest inValue = new lab2.ServiceTime.PlaceIfThenOCOOrderRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.Pair = Pair;
            inValue.Expiry = Expiry;
            inValue.BuySell = BuySell;
            inValue.Amount = Amount;
            inValue.Rate = Rate;
            inValue.OrderBasis = OrderBasis;
            inValue.BuySell1 = BuySell1;
            inValue.Amount1 = Amount1;
            inValue.Rate1 = Rate1;
            inValue.OrderBasis1 = OrderBasis1;
            inValue.BuySell2 = BuySell2;
            inValue.Amount2 = Amount2;
            inValue.Rate2 = Rate2;
            inValue.OrderBasis2 = OrderBasis2;
            lab2.ServiceTime.PlaceIfThenOCOOrderResponse retVal = ((lab2.ServiceTime.ServiceSoap)(this)).PlaceIfThenOCOOrder(inValue);
            return retVal.PlaceIfThenOCOOrderResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<lab2.ServiceTime.PlaceIfThenOCOOrderResponse> lab2.ServiceTime.ServiceSoap.PlaceIfThenOCOOrderAsync(lab2.ServiceTime.PlaceIfThenOCOOrderRequest request) {
            return base.Channel.PlaceIfThenOCOOrderAsync(request);
        }
        
        public System.Threading.Tasks.Task<lab2.ServiceTime.PlaceIfThenOCOOrderResponse> PlaceIfThenOCOOrderAsync(
                    lab2.ServiceTime.Authenticator Authenticator, 
                    string UserID, 
                    string PWD, 
                    string Pair, 
                    string Expiry, 
                    string BuySell, 
                    string Amount, 
                    string Rate, 
                    string OrderBasis, 
                    string BuySell1, 
                    string Amount1, 
                    string Rate1, 
                    string OrderBasis1, 
                    string BuySell2, 
                    string Amount2, 
                    string Rate2, 
                    string OrderBasis2) {
            lab2.ServiceTime.PlaceIfThenOCOOrderRequest inValue = new lab2.ServiceTime.PlaceIfThenOCOOrderRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.Pair = Pair;
            inValue.Expiry = Expiry;
            inValue.BuySell = BuySell;
            inValue.Amount = Amount;
            inValue.Rate = Rate;
            inValue.OrderBasis = OrderBasis;
            inValue.BuySell1 = BuySell1;
            inValue.Amount1 = Amount1;
            inValue.Rate1 = Rate1;
            inValue.OrderBasis1 = OrderBasis1;
            inValue.BuySell2 = BuySell2;
            inValue.Amount2 = Amount2;
            inValue.Rate2 = Rate2;
            inValue.OrderBasis2 = OrderBasis2;
            return ((lab2.ServiceTime.ServiceSoap)(this)).PlaceIfThenOCOOrderAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        lab2.ServiceTime.ModifyIfThenOCOOrderResponse lab2.ServiceTime.ServiceSoap.ModifyIfThenOCOOrder(lab2.ServiceTime.ModifyIfThenOCOOrderRequest request) {
            return base.Channel.ModifyIfThenOCOOrder(request);
        }
        
        public lab2.ServiceTime.objPlaceOrderResponse ModifyIfThenOCOOrder(
                    lab2.ServiceTime.Authenticator Authenticator, 
                    string UserID, 
                    string PWD, 
                    string OrderReference, 
                    string Expiry, 
                    string BuySell, 
                    string Amount, 
                    string Rate, 
                    string OrderBasis, 
                    string BuySell1, 
                    string Amount1, 
                    string Rate1, 
                    string OrderBasis1, 
                    string BuySell2, 
                    string Amount2, 
                    string Rate2, 
                    string OrderBasis2) {
            lab2.ServiceTime.ModifyIfThenOCOOrderRequest inValue = new lab2.ServiceTime.ModifyIfThenOCOOrderRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.OrderReference = OrderReference;
            inValue.Expiry = Expiry;
            inValue.BuySell = BuySell;
            inValue.Amount = Amount;
            inValue.Rate = Rate;
            inValue.OrderBasis = OrderBasis;
            inValue.BuySell1 = BuySell1;
            inValue.Amount1 = Amount1;
            inValue.Rate1 = Rate1;
            inValue.OrderBasis1 = OrderBasis1;
            inValue.BuySell2 = BuySell2;
            inValue.Amount2 = Amount2;
            inValue.Rate2 = Rate2;
            inValue.OrderBasis2 = OrderBasis2;
            lab2.ServiceTime.ModifyIfThenOCOOrderResponse retVal = ((lab2.ServiceTime.ServiceSoap)(this)).ModifyIfThenOCOOrder(inValue);
            return retVal.ModifyIfThenOCOOrderResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<lab2.ServiceTime.ModifyIfThenOCOOrderResponse> lab2.ServiceTime.ServiceSoap.ModifyIfThenOCOOrderAsync(lab2.ServiceTime.ModifyIfThenOCOOrderRequest request) {
            return base.Channel.ModifyIfThenOCOOrderAsync(request);
        }
        
        public System.Threading.Tasks.Task<lab2.ServiceTime.ModifyIfThenOCOOrderResponse> ModifyIfThenOCOOrderAsync(
                    lab2.ServiceTime.Authenticator Authenticator, 
                    string UserID, 
                    string PWD, 
                    string OrderReference, 
                    string Expiry, 
                    string BuySell, 
                    string Amount, 
                    string Rate, 
                    string OrderBasis, 
                    string BuySell1, 
                    string Amount1, 
                    string Rate1, 
                    string OrderBasis1, 
                    string BuySell2, 
                    string Amount2, 
                    string Rate2, 
                    string OrderBasis2) {
            lab2.ServiceTime.ModifyIfThenOCOOrderRequest inValue = new lab2.ServiceTime.ModifyIfThenOCOOrderRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.OrderReference = OrderReference;
            inValue.Expiry = Expiry;
            inValue.BuySell = BuySell;
            inValue.Amount = Amount;
            inValue.Rate = Rate;
            inValue.OrderBasis = OrderBasis;
            inValue.BuySell1 = BuySell1;
            inValue.Amount1 = Amount1;
            inValue.Rate1 = Rate1;
            inValue.OrderBasis1 = OrderBasis1;
            inValue.BuySell2 = BuySell2;
            inValue.Amount2 = Amount2;
            inValue.Rate2 = Rate2;
            inValue.OrderBasis2 = OrderBasis2;
            return ((lab2.ServiceTime.ServiceSoap)(this)).ModifyIfThenOCOOrderAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        lab2.ServiceTime.PlaceSingleASSPOrderResponse lab2.ServiceTime.ServiceSoap.PlaceSingleASSPOrder(lab2.ServiceTime.PlaceSingleASSPOrderRequest request) {
            return base.Channel.PlaceSingleASSPOrder(request);
        }
        
        public lab2.ServiceTime.objPlaceOrderResponse PlaceSingleASSPOrder(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string Pair, string Rate, string OrderBasis) {
            lab2.ServiceTime.PlaceSingleASSPOrderRequest inValue = new lab2.ServiceTime.PlaceSingleASSPOrderRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.Pair = Pair;
            inValue.Rate = Rate;
            inValue.OrderBasis = OrderBasis;
            lab2.ServiceTime.PlaceSingleASSPOrderResponse retVal = ((lab2.ServiceTime.ServiceSoap)(this)).PlaceSingleASSPOrder(inValue);
            return retVal.PlaceSingleASSPOrderResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<lab2.ServiceTime.PlaceSingleASSPOrderResponse> lab2.ServiceTime.ServiceSoap.PlaceSingleASSPOrderAsync(lab2.ServiceTime.PlaceSingleASSPOrderRequest request) {
            return base.Channel.PlaceSingleASSPOrderAsync(request);
        }
        
        public System.Threading.Tasks.Task<lab2.ServiceTime.PlaceSingleASSPOrderResponse> PlaceSingleASSPOrderAsync(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string Pair, string Rate, string OrderBasis) {
            lab2.ServiceTime.PlaceSingleASSPOrderRequest inValue = new lab2.ServiceTime.PlaceSingleASSPOrderRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.Pair = Pair;
            inValue.Rate = Rate;
            inValue.OrderBasis = OrderBasis;
            return ((lab2.ServiceTime.ServiceSoap)(this)).PlaceSingleASSPOrderAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        lab2.ServiceTime.ModifySingleASSPOrderResponse lab2.ServiceTime.ServiceSoap.ModifySingleASSPOrder(lab2.ServiceTime.ModifySingleASSPOrderRequest request) {
            return base.Channel.ModifySingleASSPOrder(request);
        }
        
        public lab2.ServiceTime.objPlaceOrderResponse ModifySingleASSPOrder(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string OrderReference, string Rate, string OrderBasis) {
            lab2.ServiceTime.ModifySingleASSPOrderRequest inValue = new lab2.ServiceTime.ModifySingleASSPOrderRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.OrderReference = OrderReference;
            inValue.Rate = Rate;
            inValue.OrderBasis = OrderBasis;
            lab2.ServiceTime.ModifySingleASSPOrderResponse retVal = ((lab2.ServiceTime.ServiceSoap)(this)).ModifySingleASSPOrder(inValue);
            return retVal.ModifySingleASSPOrderResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<lab2.ServiceTime.ModifySingleASSPOrderResponse> lab2.ServiceTime.ServiceSoap.ModifySingleASSPOrderAsync(lab2.ServiceTime.ModifySingleASSPOrderRequest request) {
            return base.Channel.ModifySingleASSPOrderAsync(request);
        }
        
        public System.Threading.Tasks.Task<lab2.ServiceTime.ModifySingleASSPOrderResponse> ModifySingleASSPOrderAsync(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string OrderReference, string Rate, string OrderBasis) {
            lab2.ServiceTime.ModifySingleASSPOrderRequest inValue = new lab2.ServiceTime.ModifySingleASSPOrderRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.OrderReference = OrderReference;
            inValue.Rate = Rate;
            inValue.OrderBasis = OrderBasis;
            return ((lab2.ServiceTime.ServiceSoap)(this)).ModifySingleASSPOrderAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        lab2.ServiceTime.PlaceOCOASSPOrderResponse lab2.ServiceTime.ServiceSoap.PlaceOCOASSPOrder(lab2.ServiceTime.PlaceOCOASSPOrderRequest request) {
            return base.Channel.PlaceOCOASSPOrder(request);
        }
        
        public lab2.ServiceTime.objPlaceOrderResponse PlaceOCOASSPOrder(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string Pair, string LimitRate, string StopLossRate) {
            lab2.ServiceTime.PlaceOCOASSPOrderRequest inValue = new lab2.ServiceTime.PlaceOCOASSPOrderRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.Pair = Pair;
            inValue.LimitRate = LimitRate;
            inValue.StopLossRate = StopLossRate;
            lab2.ServiceTime.PlaceOCOASSPOrderResponse retVal = ((lab2.ServiceTime.ServiceSoap)(this)).PlaceOCOASSPOrder(inValue);
            return retVal.PlaceOCOASSPOrderResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<lab2.ServiceTime.PlaceOCOASSPOrderResponse> lab2.ServiceTime.ServiceSoap.PlaceOCOASSPOrderAsync(lab2.ServiceTime.PlaceOCOASSPOrderRequest request) {
            return base.Channel.PlaceOCOASSPOrderAsync(request);
        }
        
        public System.Threading.Tasks.Task<lab2.ServiceTime.PlaceOCOASSPOrderResponse> PlaceOCOASSPOrderAsync(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string Pair, string LimitRate, string StopLossRate) {
            lab2.ServiceTime.PlaceOCOASSPOrderRequest inValue = new lab2.ServiceTime.PlaceOCOASSPOrderRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.Pair = Pair;
            inValue.LimitRate = LimitRate;
            inValue.StopLossRate = StopLossRate;
            return ((lab2.ServiceTime.ServiceSoap)(this)).PlaceOCOASSPOrderAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        lab2.ServiceTime.ModifyOCOASSPOrderResponse lab2.ServiceTime.ServiceSoap.ModifyOCOASSPOrder(lab2.ServiceTime.ModifyOCOASSPOrderRequest request) {
            return base.Channel.ModifyOCOASSPOrder(request);
        }
        
        public lab2.ServiceTime.objPlaceOrderResponse ModifyOCOASSPOrder(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string OrderReference, string LimitRate, string StopLossRate) {
            lab2.ServiceTime.ModifyOCOASSPOrderRequest inValue = new lab2.ServiceTime.ModifyOCOASSPOrderRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.OrderReference = OrderReference;
            inValue.LimitRate = LimitRate;
            inValue.StopLossRate = StopLossRate;
            lab2.ServiceTime.ModifyOCOASSPOrderResponse retVal = ((lab2.ServiceTime.ServiceSoap)(this)).ModifyOCOASSPOrder(inValue);
            return retVal.ModifyOCOASSPOrderResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<lab2.ServiceTime.ModifyOCOASSPOrderResponse> lab2.ServiceTime.ServiceSoap.ModifyOCOASSPOrderAsync(lab2.ServiceTime.ModifyOCOASSPOrderRequest request) {
            return base.Channel.ModifyOCOASSPOrderAsync(request);
        }
        
        public System.Threading.Tasks.Task<lab2.ServiceTime.ModifyOCOASSPOrderResponse> ModifyOCOASSPOrderAsync(lab2.ServiceTime.Authenticator Authenticator, string UserID, string PWD, string OrderReference, string LimitRate, string StopLossRate) {
            lab2.ServiceTime.ModifyOCOASSPOrderRequest inValue = new lab2.ServiceTime.ModifyOCOASSPOrderRequest();
            inValue.Authenticator = Authenticator;
            inValue.UserID = UserID;
            inValue.PWD = PWD;
            inValue.OrderReference = OrderReference;
            inValue.LimitRate = LimitRate;
            inValue.StopLossRate = StopLossRate;
            return ((lab2.ServiceTime.ServiceSoap)(this)).ModifyOCOASSPOrderAsync(inValue);
        }
        
        public string Echo(string Message) {
            return base.Channel.Echo(Message);
        }
        
        public System.Threading.Tasks.Task<string> EchoAsync(string Message) {
            return base.Channel.EchoAsync(Message);
        }
        
        public string GetTime() {
            return base.Channel.GetTime();
        }
        
        public System.Threading.Tasks.Task<string> GetTimeAsync() {
            return base.Channel.GetTimeAsync();
        }
        
        public string GetRatesServerAuth(string UserID, string PWD, string Brand) {
            return base.Channel.GetRatesServerAuth(UserID, PWD, Brand);
        }
        
        public System.Threading.Tasks.Task<string> GetRatesServerAuthAsync(string UserID, string PWD, string Brand) {
            return base.Channel.GetRatesServerAuthAsync(UserID, PWD, Brand);
        }
        
        public string GetSubAccountAuthenticationKey(string MasterAccountKey, string SubAccountCode) {
            return base.Channel.GetSubAccountAuthenticationKey(MasterAccountKey, SubAccountCode);
        }
        
        public System.Threading.Tasks.Task<string> GetSubAccountAuthenticationKeyAsync(string MasterAccountKey, string SubAccountCode) {
            return base.Channel.GetSubAccountAuthenticationKeyAsync(MasterAccountKey, SubAccountCode);
        }
        
        public lab2.ServiceTime.objMarketText GetComment() {
            return base.Channel.GetComment();
        }
        
        public System.Threading.Tasks.Task<lab2.ServiceTime.objMarketText> GetCommentAsync() {
            return base.Channel.GetCommentAsync();
        }
        
        public lab2.ServiceTime.objMarketText GetNews() {
            return base.Channel.GetNews();
        }
        
        public System.Threading.Tasks.Task<lab2.ServiceTime.objMarketText> GetNewsAsync() {
            return base.Channel.GetNewsAsync();
        }
        
        public lab2.ServiceTime.objAccount GetAccountObject(string UserID, string PWD, string Brand, string Notes) {
            return base.Channel.GetAccountObject(UserID, PWD, Brand, Notes);
        }
        
        public System.Threading.Tasks.Task<lab2.ServiceTime.objAccount> GetAccountObjectAsync(string UserID, string PWD, string Brand, string Notes) {
            return base.Channel.GetAccountObjectAsync(UserID, PWD, Brand, Notes);
        }
        
        public string GetIGAuthenticationKey(string UserID, string PWD, string Brand, string Language) {
            return base.Channel.GetIGAuthenticationKey(UserID, PWD, Brand, Language);
        }
        
        public System.Threading.Tasks.Task<string> GetIGAuthenticationKeyAsync(string UserID, string PWD, string Brand, string Language) {
            return base.Channel.GetIGAuthenticationKeyAsync(UserID, PWD, Brand, Language);
        }
        
        public string GetSubAccountCode(string MasterAccountCode, string SubAccountNumber) {
            return base.Channel.GetSubAccountCode(MasterAccountCode, SubAccountNumber);
        }
        
        public System.Threading.Tasks.Task<string> GetSubAccountCodeAsync(string MasterAccountCode, string SubAccountNumber) {
            return base.Channel.GetSubAccountCodeAsync(MasterAccountCode, SubAccountNumber);
        }
        
        public string GetSubAccountNumber(string MasterAccountCode, string SubAccountCode) {
            return base.Channel.GetSubAccountNumber(MasterAccountCode, SubAccountCode);
        }
        
        public System.Threading.Tasks.Task<string> GetSubAccountNumberAsync(string MasterAccountCode, string SubAccountCode) {
            return base.Channel.GetSubAccountNumberAsync(MasterAccountCode, SubAccountCode);
        }
        
        public string GetlTIDByBankConf(string BankConfirmation) {
            return base.Channel.GetlTIDByBankConf(BankConfirmation);
        }
        
        public System.Threading.Tasks.Task<string> GetlTIDByBankConfAsync(string BankConfirmation) {
            return base.Channel.GetlTIDByBankConfAsync(BankConfirmation);
        }
        
        public bool VerifyCredentials(string UserID, string PWD, string Brand) {
            return base.Channel.VerifyCredentials(UserID, PWD, Brand);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyCredentialsAsync(string UserID, string PWD, string Brand) {
            return base.Channel.VerifyCredentialsAsync(UserID, PWD, Brand);
        }
    }
}
